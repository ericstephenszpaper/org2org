<!--
// Name: DELIVERY_COMPLETE
// Committer: Marty Harvey:marty.harvey@zpaper.com
// Update: MSH180912 remove unused var before promoting
-->
<script>
//--- RULE JSON REPRESENTATION ---
var ruleJson = {"type":"rool","updated":"2018-09-12 16:36:05","active":true,"button":"","name":"DELIVERY_COMPLETE","conditions":{"logic":"and","arguments":[{"name":"doc.X(\"X_buttonAction\")","value":"DELIVERY_COMPLETE","operation":"equals"}]},"consequence":{"doit":""},"ordinal":3}

//--- RULE JSON REPRESENTATION - END ---

//--- RULE CONSEQUENCE CODE ---
/* BEGIN DELIVERY_COMPLETE zAction */
var formatNow = getCurDateAndTime(doc);
var sfId = X(doc, "X_activityOnID");
alert("~~~ sfId = " + sfId + " ~~~");
var docType = X(doc, "docType");
var label = "Sent on " + formatNow;
var deliveryStatus = X(doc, "X_faxStatus");
var sentTo = X(doc, "ContactFax");
var destFieldName = "";

var arrOfPairs = [];
arrOfPairs.push("X_buttonAction0", X(doc,"X_buttonAction"));
arrOfPairs.push("X_buttonAction", "");
arrOfPairs.push("db-label", label);
arrOfPairs.push("db-BATES", sfId + "-" + docType);  //ERS170625 todo get docType from template used
arrOfPairs.push("X_docType", docType); //ERS170919
//MSH180816 arrOfPairs.push("X_attachedTo", sfId); //ERS170628 docSet needs this
if (1===1) { //ERS170909 #40592 for zDocSet statuses
    //MSH180808 not the recommended format for this call var ba = doc.X("X_faxStatus") + "ed";
    var ba = deliveryStatus + "ed";
    ba = ba.substring(1 + ba.lastIndexOf(" "));
    if (ba.indexOf("eded") > -1) {
        ba = ba.replace("eded", "ed"); //ERS170919 Faileded #40777
    }
    var now0 = getCurDateAndTime(doc, false, true);
    arrOfPairs.push("X_reviewedStatus", ba);
    arrOfPairs.push("X_reviews", X(doc, "X_reviews") + ba + " by " + doc.kbData.remoteUser + " at " + now0 + "<br/>"); //ERS170909 #40592
}
updateDB(doc, arrOfPairs);

// MSH180816 create PC_Document and PC_Document_Log
// zData.newDocument(doc, arrOfPairs, zData.SFDCtype, zData.programName);

if (sentTo.indexOf("@") > -1) {
    //MSH180828 To Email addressDoc
    //MSH180901 destFieldName = "spc_to_Email_address__c";
    //MSH180904 switch it back destFieldName = zData.PCpackage + "PC_To_Email_Address__c";
    destFieldName = "spc_to_Email_address__c";
} else {
    //MSH180828 To Fax Number
    destFieldName = zData.PCpackage + "PC_To_Fax_Number__c";
}

arrOfPairs = [];

//var newPcDocId = zData.newDocument(doc, arrOfPairs, zData.SFDCtype, programName, sfParentId, SFDCfield, status);
var newPcDocId = "";
if (1 == 1 && X(doc, "coverID").indexOf("<") == -1) { //ERS180823 #51837 do if forwarded
    arrOfPairs.push("zPaper_Fax_Unique_Id__c", doc.dbID);
    //MSH180819 get the right record type
    //MSH180820 slightly better test
    if (doc.deliveredTo.indexOf("@") > -1) { //ERS180821 if (isNaN(doc.deliveredFrom))
        arrOfPairs.push("RecordTypeId", zData.outboundEmailRecordType);
    } else {
        arrOfPairs.push("RecordTypeId", zData.outboundFaxRecordType); //MSH180817 #51641
    }
    if (sfId.indexOf("500") === 0) {
        zData.caseId = sfId;
    } else {
        var flds = getSFFields(doc, zData.SFDCtype, "spc_Program_Case_Id__c,spc_InquiryCaseId__c", null, sfId);
        var pgmCase = X(doc, "spc_Program_Case_Id__c", flds);
        if (pgmCase) {
            zData.caseId = pgmCase;
        } else {
            zData.caseId = X(doc, "spc_InquiryCaseId__c", flds);
        }
    }

    arrOfPairs.push("spc_Source_Object_ID__c", zData.caseId);
    arrOfPairs.push(destFieldName, sentTo);

    //MSH180830 add workflow fields for new PC_Document record
    arrOfPairs.push("sentFax__c", "true");
    arrOfPairs.push("sentFaxAt__c", formatNow);
    arrOfPairs.push("sentFaxStatus__c", deliveryStatus);    
    arrOfPairs.push("sentFaxTo__c", sentTo);

    var newIds = zData.newDocument(doc, arrOfPairs, zData.SFDCtype, zData.programName, sfId);
    alert("@@@@@ newIds = * " + newIds + " *");
    var newIdsArr = [];
    if (newIds.indexOf(",") > -1) {
        newIdsArr = newIds.split(",");
        newPcDocId = newIdsArr[0];
    } else {
        newPcDocId = newIds;
    }

    // MSH180818 #51641 Add an Activity to the Salesforce PC_Document record we just created.
    var docTitle = X(doc, "docTitle");
    var docPages = X(doc, "X_pages");

    var label = X(doc, "X_notifySubject");
    label = label.replace("{0}", docTitle);
    label = label.replace("{1}", docPages);
    label = label.replace("{2}", sentTo);
    label = label.replace("{3}", deliveryStatus);
    alert("@@@@@ Task label = * " + label + " *");

    var host = doc.kbData.HOST;
    if (host.indexOf('://') > 0)    { host = host.substring(host.indexOf('://') + 3); }
    if (host.indexOf(':') > 0)      { host = host.substring(0, host.indexOf(':')); }
    else if (host.indexOf('/') > 0) { host = host.substring(0, host.indexOf('/')); }

    var url = "https://" + host + "/kb/jsp/SF_find.jsp?skin=SFbare&dbID=" + doc.dbID;

    var description = docTitle + ": A " + docPages + " page fax to ";
    description += X(doc, "ContactName") + " @ " + sentTo;
    if ("Delivered" == deliveryStatus) {
        description += " was delivered";
    } else {
        description += " has failed - " + X(doc, "X_faxStatusDetail");
    }
    description += ". The fax is viewable at " + url;

    arrOfPairs = [];
    arrOfPairs.push("WhatId", newPcDocId);
    arrOfPairs.push("Subject", label);
    arrOfPairs.push("ActivityDate", formatNow);
    arrOfPairs.push("Description", description);
    arrOfPairs.push("Status", "Completed");
    arrOfPairs.push("Type", "zPaper Fax Outcome");
    var taskId = createSFRecord(doc, "Task", label, arrOfPairs);
    alert("@@@@@@ Created but not attached to Task: " + taskId);
}

// MSH180808 if we have a PatientConnect__PC_Document__c id,
// update the zPaper_Fax_Unique_Id__c field
var activities = X(doc, "activities");
var activityArr = [];

if (activities && activities.length > 0) {
    activityArr = activities.split(",");

    for (var actId in activityArr) {
        var activityType = getSFType(doc, activityArr[actId]);
        alert("@@@@@ actId = * " + activityArr[actId] + " *");
        alert("@@@@@ sfType = * " + activityType + " *");

        if (zData.SFDCtype == activityType) {
            arrOfPairs = [];
            arrOfPairs.push("zPaper_Fax_Unique_Id__c", doc.dbID);
            //MSH180830 update workflow fields on PC_Document record
            arrOfPairs.push("sentFax__c", "true");
            arrOfPairs.push("sentFaxAt__c", formatNow);
            arrOfPairs.push("sentFaxStatus__c", deliveryStatus);    
            arrOfPairs.push("sentFaxTo__c", sentTo);
            //MSH180830 update destination fields
            arrOfPairs.push(destFieldName, sentTo);
            updateSFRecord(doc, zData.SFDCtype, activityArr[actId], arrOfPairs);
            // MSH180813 attach
            attach(doc, label, activityArr[actId]);
        } else {
            // MSH180813 attach
            attach(doc, label, sfId);
        }
    }
}
/* END DELIVERY_COMPLETE zAction */

//--- RULE CONSEQUENCE CODE - END ---

//--- RULE VALIDATION CODE ---
//--- RULE VALIDATION CODE - END ---

</script>
