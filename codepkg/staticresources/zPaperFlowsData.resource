{"flows":[{"id":"17887126.a83fff","type":"tab","label":"Phase 1 Incoming","disabled":false,"showlanes":true,"swimlanes":[{"colour":"#0077ff40","title":"fax to zstack","height":300},{"colour":"#ff000040","title":"salesforce","height":300},{"colour":"#00770040","title":"operators","height":300}],"info":""},{"id":"42d93f5e.be1e3","type":"tab","label":"Phase 1 Outgoing","disabled":false,"showlanes":true,"swimlanes":[{"colour":"#ffff0040","title":"Program Member","height":300},{"colour":"#ff000040","title":"Activity / Attachment","height":300}],"info":""},{"id":"87f3043f.6f8f48","type":"tab","label":"Phase 2 Triage Incoming","disabled":false,"showlanes":true,"swimlanes":[{"colour":"#77777740","title":"Providers","height":100},{"colour":"#0077ff40","title":"Channels","height":220},{"colour":"#ff000040","title":"Salesforce","height":100},{"colour":"#00770040","title":"Coordinators","height":380}],"info":""},{"id":"c095cb5e.abe898","type":"zFax","z":"17887126.a83fff","name":"678-948-9696","link":"","format":"text","template":"","x":160,"y":80,"wires":[["314184e4.e7eb0c"]]},{"id":"83d8f877.49e288","type":"zAction","z":"17887126.a83fff","name":"zStack Library","func":"//global variables\n\n\nzData.patEnrollQueueId = \"\"; \n\nzData.programName = \"\";\n\n//CRN170324 TODO doc.clone() done right;\nzData.clone=function(doc) {\n   var doc0=[];\n   for (var i in doc) doc0[i]=doc[i];\n   return doc0;\n}\n\nzData.setbrandprogram = function(doc) {\n    alert(\"+++ STARTING zData.setbrandprogram +++\");\n    alert(\"@@@ doc.deliveredTo = \" + doc.deliveredTo);\n    if (doc.deliveredTo.indexOf(\"6782356995\")>-1) { //ERS70421 indexOf is safer #36411\n        zData.programName = \"zCharta\";\n        zData.patEnrollQueueId = \"00Gf4000000VnBEEA0\";\n    } else if (doc.deliveredTo.indexOf(\"6787270123\")>-1) {\n        zData.programName = \"zPapyrus\";\n        zData.patEnrollQueueId = \"00Gf4000000VnBJEA0\";\n    } \n    alert(\"+++ ENDING zData.setbrandprogram +++\");\n    alert(\"@@@ zData.programName = \" + zData.programName);\n  \n}\n\n/* This function needs to be added to every rule to help assure that rules do not get accidentally triggered */\n/* Add this functionality to the rules engine itself? */\nzData.clearTriggerCondition=function(doc,triggerField) {  //ERS170512 moved to library\n  var arrOfPairs = [];\n  arrOfPairs.push(triggerField, \"\");\n  updateDB(doc,arrOfPairs);\n}\n\nzData.initializeStack=function(doc,stackFolder,stackId) { //ERS170512 moved to library\n  var arrOfPairs = [];\n  var today = new Date();\n  var curMonth = today.getMonth() + 1;\n  var finalRootFolder = zData.programName+\"-Archive\"; //bates of the Archive folder\n  var yyyyMMFolderName = today.getFullYear() + (curMonth > 9 ? curMonth+\"\" : \"0\"+curMonth);\n  var yyyyMMFolder = finalRootFolder + \"-\" + yyyyMMFolderName;\n  alert(\"@@@ stackFolder is - \" + stackFolder);\n  alert(\"@@@ finalRootFolder is - \" + finalRootFolder);\n  alert(\"@@@ yyMMFolder is - \" + yyyyMMFolder);\n  alert(\"@@@ creating new stack destination folder with name - \" + stackFolder);\n  /* Refresh the current folder */\n  reloadById(doc, X(doc,\"X_curFolder\"));\n  /* same value for BATES and label */\n  /* The folder structure will look like this: /201608/3CX3CX/123456789-STACK */\n  createFolder(doc, finalRootFolder, yyyyMMFolder, yyyyMMFolderName);\n  createFolder(doc, yyyyMMFolder, stackFolder, stackFolder);\n  alert(\"@@@@ Moving the stack document into the stack folder: \" + stackFolder);\n  moveDocument(doc,\"\",stackFolder);\n  arrOfPairs.push(\"X_indexInitialized\", \"true\");\n  arrOfPairs.push(\"X_stack\", stackId);\n  arrOfPairs.push(\"db-BATES\", doc.kbData.groupID.substring(1) + \"-\" + stackId + \"-STACK\");\n  /* Stack Labelling Change */\n  var dtStamp = getCurDateAndTime(doc, false);\n  /* arrOfPairs.push(\"db-label\",\"Stack - \" + dtStamp); */\n  updateDB(doc,arrOfPairs);\n}\n\nzData.countPages=function(doc,pageRange) {  //ERS170512 moved to library\n  var pages = pageRange.split(\",\");\n  if (!pages) pages=[pageRange];\n  return pages.length + \"\";\n}\n\n/* END */","active":true,"button":"","outputs":1,"noerr":0,"x":651,"y":78,"wires":[[]]},{"id":"314184e4.e7eb0c","type":"zAction","z":"17887126.a83fff","name":"Create Stack from Fax","func":"//ERS170804 docType by OCR\nvar keywords=[\"REG:Regulation~\",\"REF:REFERRAL\",\"REF:Referral\",\"PAPP:Patient Assistance\",\"PAUTH:Prior~ Authorization~\",\"ENRL:Enrollment~\",\"FAX:\"];\n\n//ERS171012 keywords for demo\nkeywords=[\"ENRL:Enrollment~\",\"CON:Consent~\",\"CON:consent~\",\"PAPP:Patient Assistance\",\"PAUTH:Prior~ Authorization~\",\"REG:Regulation~\",\"REF:REFERRAL\",\"REF:Referral\",\"FAX:\"];\n\nzData.docTypeOCR=zData.docTyper(doc,keywords); //ERS171012 TODO missing for MP\n//zData.docTypeOCR=zData.docTyper(doc,{\"REG\":\"Regulation~\",\"PAPP\":\"Patient~ Assistance~\",\"PAUTH\":\"Prior~ Authorization~\",\"ENRL\":\"Enrollment~\",\"FAX\":\"\"});\nalert(\"docType was \"+doc.docType+\" now \"+ zData.docTypeOCR);\nvar zType=doc.X(\"X_docType\");\nif (doc.docType != zData.docTypeOCR) {\n    var arrOfPairs0 = [];\n    arrOfPairs0.push(\"X_docTypeOCR\",zData.docTypeOCR);\n\tarrOfPairs0.push(\"X_docType\",zData.docTypeOCR);\n    zType=zData.docTypeOCR; //ERS170330 saved below into SF faxType__c field\n    updateDB(doc, arrOfPairs0);\n}\n\nzData.setbrandprogram(doc); //who and where\n\nvar formatNow = getCurDateAndTime(doc);\nvar arrOfPairs = [];\nvar zp=\"ZPAPER__\"; //ERS170626 now in the package\nvar zStack=zp+\"zStack__c\"; //\"Stack__c\"\narrOfPairs.push(zp+\"faxType__c\", zType);\narrOfPairs.push(zp+\"Status__c\", \"New Stack\");\narrOfPairs.push(zp+\"Channel__c\", \"Fax\");\narrOfPairs.push(zp+\"latestFax__c\", formatNow);\narrOfPairs.push(zp+\"receivedId__c\", doc.dbID);\narrOfPairs.push(zp+\"newFax__c\", \"true\");\narrOfPairs.push(zp+\"Pages__c\", X(doc, \"X_pages\"));\nif (zData.patEnrollQueueId) arrOfPairs.push(\"OwnerId\",zData.patEnrollQueueId);\nif (zData.programName === \"zCharta\") {\n\tarrOfPairs.push(zp+\"Priority__c\", \"Urgent\");\n}\nelse {\n\tarrOfPairs.push(zp+\"Priority__c\", \"Medium\");\n}\narrOfPairs.push(zp+\"Program_Name__c\", zData.programName);\narrOfPairs.push(zp+\"sentFaxTo__c\",doc.deliveredTo); //ERS170628 caller id\narrOfPairs.push(zp+\"From__c\",doc.deliveredFrom);\narrOfPairs.push(zp+\"Stage__c\", \"Received\"); //ERS170731 #40593\n\nvar sfId = createAndAttach(doc, zStack, \"New Stack received on \" + formatNow, arrOfPairs);\nalert(\"#### Stack Received. Attached to: \" + sfId);\narrOfPairs = [];\narrOfPairs.push(\"db-label\", \"New Stack received on \" + formatNow);\narrOfPairs.push(\"db-BATES\", sfId + \"-STACK\");\narrOfPairs.push(\"X_sfStackId\",sfId); //ERS170727 #40447\nif (1===1) { //ERS180103 set as Received #41155\n    var ba=\"Received\";\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by agent at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc, arrOfPairs);\n /* END */","active":true,"button":"","outputs":1,"noerr":0,"x":418,"y":136,"wires":[["83d8f877.49e288","f805c48.d477f38"]]},{"id":"907fea46.3d1f38","type":"zAction","z":"17887126.a83fff","name":"Program Name queue set by fax #","func":"\nreturn msg;","active":true,"button":"","outputs":1,"continue":false,"noerr":0,"x":249,"y":386,"wires":[["afc6424a.be608","42087496.90081c"]]},{"id":"bc0e5c3a.a4b5e","type":"function","z":"17887126.a83fff","name":"User triages zStacks in queue","func":"\nreturn msg;","outputs":1,"noerr":0,"x":827,"y":598,"wires":[["295d72bf.14154e"]]},{"id":"f805c48.d477f38","type":"zAction","z":"17887126.a83fff","name":"Set all required Stack attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":576,"y":297,"wires":[["907fea46.3d1f38"]]},{"id":"59e39da7.626a44","type":"zAction","z":"17887126.a83fff","name":"Manual Attach Panel","func":"","active":false,"button":"","outputs":1,"continue":false,"noerr":0,"x":246,"y":801,"wires":[["1d419384.2242cc","8450cd7f.2a2e1"]]},{"id":"1d419384.2242cc","type":"soql","z":"17887126.a83fff","name":"Existing Program Member MVN lookup (optional)","query":"","connection":"","fetchAll":false,"x":603,"y":726,"wires":[["5ccee631.7cc598"]]},{"id":"5ccee631.7cc598","type":"function","z":"17887126.a83fff","name":"removes zStack record from queue to Stack Complete list view","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1024,"y":811,"wires":[[]]},{"id":"c58a5908.448e78","type":"zFax","z":"17887126.a83fff","name":"678-948-9708","link":"","format":"text","template":"","x":160,"y":200,"wires":[["314184e4.e7eb0c"]]},{"id":"8450cd7f.2a2e1","type":"soql","z":"17887126.a83fff","name":"Create New Program Member","query":"","connection":"","fetchAll":false,"x":552,"y":848,"wires":[["5ccee631.7cc598"]]},{"id":"cfdcbac7.65f668","type":"zAction","z":"42d93f5e.be1e3","name":"From Program Member Send a Doc Button","func":"\nreturn msg;","active":true,"button":"","outputs":1,"continue":false,"noerr":0,"x":268,"y":62,"wires":[["ad733cd7.7d952"]]},{"id":"ad733cd7.7d952","type":"zAction","z":"42d93f5e.be1e3","name":"Manually attach doc from drive","func":"\nreturn msg;","active":true,"button":"","outputs":1,"continue":false,"noerr":0,"x":640,"y":228,"wires":[["7a07aede.7aad"]]},{"id":"6662f946.1ee138","type":"zComment","z":"42d93f5e.be1e3","name":"Took button off layout for profile","link":"","info":"","x":470,"y":143,"wires":[]},{"id":"7a07aede.7aad","type":"zAction","z":"42d93f5e.be1e3","name":"After delivered task under History","func":"\nreturn msg;","active":true,"button":"","outputs":1,"continue":false,"noerr":0,"x":321,"y":380,"wires":[[]]},{"id":"295d72bf.14154e","type":"function","z":"17887126.a83fff","name":"Select Triage Link","func":"\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":660,"wires":[["59e39da7.626a44"]]},{"id":"afc6424a.be608","type":"soql","z":"17887126.a83fff","name":"Orphan Rare Disease","query":"","connection":"","fetchAll":false,"x":560,"y":380,"wires":[["bc0e5c3a.a4b5e"]]},{"id":"42087496.90081c","type":"soql","z":"17887126.a83fff","name":"Rheumatology","query":"","connection":"","fetchAll":false,"x":480,"y":460,"wires":[["bc0e5c3a.a4b5e"]]},{"id":"d223654a.ada778","type":"zAction","z":"87f3043f.6f8f48","name":"Create Stack from Fax","func":"//ERS170804 docType by OCR\nvar keywords=[\"REG:Regulation~\",\"REF:REFERRAL\",\"REF:Referral\",\"PAPP:Patient Assistance\",\"PAUTH:Prior~ Authorization~\",\"ENRL:Enrollment~\",\"FAX:\"];\n\n//ERS171012 keywords for demo\nkeywords=[\"ENRL:Enrollment~\",\"CON:Consent~\",\"CON:consent~\",\"PAPP:Patient Assistance\",\"PAUTH:Prior~ Authorization~\",\"REG:Regulation~\",\"REF:REFERRAL\",\"REF:Referral\",\"FAX:\"];\n\nzData.docTypeOCR=zData.docTyper(doc,keywords); //ERS171012 TODO missing for MP\n//zData.docTypeOCR=zData.docTyper(doc,{\"REG\":\"Regulation~\",\"PAPP\":\"Patient~ Assistance~\",\"PAUTH\":\"Prior~ Authorization~\",\"ENRL\":\"Enrollment~\",\"FAX\":\"\"});\nalert(\"docType was \"+doc.docType+\" now \"+ zData.docTypeOCR);\nvar zType=doc.X(\"X_docType\");\nif (doc.docType != zData.docTypeOCR) {\n    var arrOfPairs0 = [];\n    arrOfPairs0.push(\"X_docTypeOCR\",zData.docTypeOCR);\n\tarrOfPairs0.push(\"X_docType\",zData.docTypeOCR);\n    zType=zData.docTypeOCR; //ERS170330 saved below into SF faxType__c field\n    updateDB(doc, arrOfPairs0);\n}\n\nzData.setbrandprogram(doc); //who and where\n\nvar formatNow = getCurDateAndTime(doc);\nvar arrOfPairs = [];\nvar zp=\"ZPAPER__\"; //ERS170626 now in the package\nvar zStack=zp+\"zStack__c\"; //\"Stack__c\"\narrOfPairs.push(zp+\"faxType__c\", zType);\narrOfPairs.push(zp+\"Status__c\", \"New Stack\");\narrOfPairs.push(zp+\"Channel__c\", \"Fax\");\narrOfPairs.push(zp+\"latestFax__c\", formatNow);\narrOfPairs.push(zp+\"receivedId__c\", doc.dbID);\narrOfPairs.push(zp+\"newFax__c\", \"true\");\narrOfPairs.push(zp+\"Pages__c\", X(doc, \"X_pages\"));\nif (zData.patEnrollQueueId) arrOfPairs.push(\"OwnerId\",zData.patEnrollQueueId);\nif (zData.programName === \"zCharta\") {\n\tarrOfPairs.push(zp+\"Priority__c\", \"Urgent\");\n}\nelse {\n\tarrOfPairs.push(zp+\"Priority__c\", \"Medium\");\n}\narrOfPairs.push(zp+\"Program_Name__c\", zData.programName);\narrOfPairs.push(zp+\"sentFaxTo__c\",doc.deliveredTo); //ERS170628 caller id\narrOfPairs.push(zp+\"From__c\",doc.deliveredFrom);\narrOfPairs.push(zp+\"Stage__c\", \"Received\"); //ERS170731 #40593\n\nvar sfId = createAndAttach(doc, zStack, \"New Stack received on \" + formatNow, arrOfPairs);\nalert(\"#### Stack Received. Attached to: \" + sfId);\narrOfPairs = [];\narrOfPairs.push(\"db-label\", \"New Stack received on \" + formatNow);\narrOfPairs.push(\"db-BATES\", sfId + \"-STACK\");\narrOfPairs.push(\"X_sfStackId\",sfId); //ERS170727 #40447\nif (1===1) { //ERS180103 set as Received #41155\n    var ba=\"Received\";\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by agent at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc, arrOfPairs);\n /* END */","active":true,"button":"","outputs":1,"noerr":0,"x":380,"y":140,"wires":[["4dd8b4de.db262c","b28e4c5b.3915f","9e0f8f1d.2d677","132e35b1.f1ef8a","223c0f4e.67f11","d1dc722a.0116d"]]},{"id":"4dd8b4de.db262c","type":"zAction","z":"87f3043f.6f8f48","name":"zStack Library","func":"//global variables\n\n\nzData.patEnrollQueueId = \"\"; \n\nzData.programName = \"\";\n\n//CRN170324 TODO doc.clone() done right;\nzData.clone=function(doc) {\n   var doc0=[];\n   for (var i in doc) doc0[i]=doc[i];\n   return doc0;\n}\n\nzData.setbrandprogram = function(doc) {\n    alert(\"+++ STARTING zData.setbrandprogram +++\");\n    alert(\"@@@ doc.deliveredTo = \" + doc.deliveredTo);\n    if (doc.deliveredTo.indexOf(\"6782356995\")>-1) { //ERS70421 indexOf is safer #36411\n        zData.programName = \"zCharta\";\n        zData.patEnrollQueueId = \"00Gf4000000VnBEEA0\";\n    } else if (doc.deliveredTo.indexOf(\"6787270123\")>-1) {\n        zData.programName = \"zPapyrus\";\n        zData.patEnrollQueueId = \"00Gf4000000VnBJEA0\";\n    } \n    alert(\"+++ ENDING zData.setbrandprogram +++\");\n    alert(\"@@@ zData.programName = \" + zData.programName);\n  \n}\n\n/* This function needs to be added to every rule to help assure that rules do not get accidentally triggered */\n/* Add this functionality to the rules engine itself? */\nzData.clearTriggerCondition=function(doc,triggerField) {  //ERS170512 moved to library\n  var arrOfPairs = [];\n  arrOfPairs.push(triggerField, \"\");\n  updateDB(doc,arrOfPairs);\n}\n\nzData.initializeStack=function(doc,stackFolder,stackId) { //ERS170512 moved to library\n  var arrOfPairs = [];\n  var today = new Date();\n  var curMonth = today.getMonth() + 1;\n  var finalRootFolder = zData.programName+\"-Archive\"; //bates of the Archive folder\n  var yyyyMMFolderName = today.getFullYear() + (curMonth > 9 ? curMonth+\"\" : \"0\"+curMonth);\n  var yyyyMMFolder = finalRootFolder + \"-\" + yyyyMMFolderName;\n  alert(\"@@@ stackFolder is - \" + stackFolder);\n  alert(\"@@@ finalRootFolder is - \" + finalRootFolder);\n  alert(\"@@@ yyMMFolder is - \" + yyyyMMFolder);\n  alert(\"@@@ creating new stack destination folder with name - \" + stackFolder);\n  /* Refresh the current folder */\n  reloadById(doc, X(doc,\"X_curFolder\"));\n  /* same value for BATES and label */\n  /* The folder structure will look like this: /201608/3CX3CX/123456789-STACK */\n  createFolder(doc, finalRootFolder, yyyyMMFolder, yyyyMMFolderName);\n  createFolder(doc, yyyyMMFolder, stackFolder, stackFolder);\n  alert(\"@@@@ Moving the stack document into the stack folder: \" + stackFolder);\n  moveDocument(doc,\"\",stackFolder);\n  arrOfPairs.push(\"X_indexInitialized\", \"true\");\n  arrOfPairs.push(\"X_stack\", stackId);\n  arrOfPairs.push(\"db-BATES\", doc.kbData.groupID.substring(1) + \"-\" + stackId + \"-STACK\");\n  /* Stack Labelling Change */\n  var dtStamp = getCurDateAndTime(doc, false);\n  /* arrOfPairs.push(\"db-label\",\"Stack - \" + dtStamp); */\n  updateDB(doc,arrOfPairs);\n}\n\nzData.countPages=function(doc,pageRange) {  //ERS170512 moved to library\n  var pages = pageRange.split(\",\");\n  if (!pages) pages=[pageRange];\n  return pages.length + \"\";\n}\n\n/* END */","active":true,"button":"","outputs":1,"noerr":0,"x":636,"y":140,"wires":[[]]},{"id":"b28e4c5b.3915f","type":"zAction","z":"87f3043f.6f8f48","name":"zPaper OCR Library","func":"//ERS170328 use OCRed text to identify document type especially when no barcodes\nzData.docTyper=function(doc,keywords) {\n    var keywords2=keywords;\n    if (!keywords && zData.keywords) keywords2=zData.keywords;\n    if (!keywords) keywords2=[\"REF:REFERRAL\",\"REF:Referral\",\"PAPP:Patient Assistance\",\"PAUTH:Prior~ Authorization~\",\"ENRL:Enrollment~\",\"FAX:\"];\n\n    //alert(\"keywords2.length=\"+keywords2.length);\n    //alert(\"keywords2 = \"+keywords2[0]+\",\"+keywords2[1]+\",\"+keywords2[\"REF\"]);\n    zData.keywords=keywords2;\n    \n    for (var k in keywords2) {\n        var parts=keywords2[k].split(\":\");\n        var term=parts[1];\n        alert(\"OCR still searching \"+term + \" a \"+ parts[0]);\n        if (searchIndex(doc,doc.dbID,term).indexOf(doc.dbID)>-1) return parts[0];\n    }\n    \n    return \"FAX\";\n}","active":true,"button":"","outputs":1,"noerr":0,"x":654,"y":172,"wires":[[]]},{"id":"750ba315.453c7c","type":"zAction","z":"87f3043f.6f8f48","name":"Index Page","func":"alert(\"@@@@ Index Rule Fired @@@#\");\n/* double-quote, newline characters */\nvar dq = String.fromCharCode(34);\nvar nl = String.fromCharCode(10);\nvar formatNow=getCurDateAndTime(doc);\n\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\n// Does the user want to attach indexed pages to Case?\nvar caseId = X(doc, \"X_ZPAPER__Case__c\");\nvar contactId = X(doc, \"X_ZPAPER__Patient__c\");\nvar patientId=contactId; //TODO\nvar providerId = X(doc, \"X_ZPAPER__Provider__c\");\nvar patientFirstName = X(doc, \"X_ZPAPER__FirstName__c\");\nvar patientLastName = X(doc, \"X_ZPAPER__LastName__c\");\nvar patientDOB = X(doc, \"X_ZPAPER__Birthdate__c\");\n//CRN180214 Judson wants this to be part of the attachment label\nvar faxType = X(doc, \"X_ZPAPER__faxType__c\");\n// Get the document type (will be used to route to next folder)\nvar docType = X(doc, \"X_Document_Type__c\");\nvar nextFolder = \"20500Triage-S2\";\t\t\t\t// Other folder is the default\nvar prevIndexPages = X(doc, \"X_indexedPages\");\nvar curIndexPages = X(doc, \"X_idxPages\");\nif (prevIndexPages && prevIndexPages.length > 0 && curIndexPages && curIndexPages.length > 0) {\n\tprevIndexPages += \",\";\n}\ncurIndexPages = prevIndexPages + curIndexPages;\nvar arrOfPairs = [];\narrOfPairs.push(\"X_indexedPages\", curIndexPages);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    if (!ba.endsWith(\"ed\") && ba !== \"\") { ba+=\"ed\"; } //ERS180103 #41155\n    if (ba !== \"\") { //ERS180103 #41155\n        var now0 = getCurDateAndTime(doc,false,true);\n        arrOfPairs.push(\"X_reviewedStatus\",ba);\n        arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n        arrOfPairs.push(\"X_buttonAction\",\"\");\n    }\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\");\nif (sfStackId ===\"\") { //ERS170731 #40593\n    X(doc,\"X_attachedTo\");\n    if (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n    }\n}\nvar attachPath = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ Currently attached to ZPAPER__zStack__c with ID: \" + sfStackId);\n\n/* SPLIT OFF NEW SNIPPET HERE */\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"index\", pageRange);\nalert(\"Case '\"+caseId+\"' and len=\"+caseId.length);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* Attach the split document to a new Case record, if it wasn't passed in */\nvar priority=X(doc,\"X_ZPAPER__Priority__c\"); //ERS170626\nvar label0=\"\";\nvar triageType=doc.docType;\nvar patientName;\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\t\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, contactId);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, ctcArrOfPairs);\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//JPB180215 now attach to stack record\nattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, sfStackId);\n\n\nif (!caseId || 0 === caseId.length) {\n\talert(\"@@@@ creating new Case\");\n\tarrOfPairs = [];\n\t//ERS170520 arrOfPairs.push(\"OwnerId\", queuesMapKludge[X(doc,\"X_Assign_to_Queue__c\")]);\n\tarrOfPairs.push(\"ContactId\", contactId);\n\tarrOfPairs.push(\"ZPAPER__newFax__c\", \"true\"); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__latestFax__c\", formatNow); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__receivedId__c\", doc.dbID); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"Status\", X(doc,\"X_Status\"));\n\tarrOfPairs.push(\"Type\", \"New Fax\"); //JPB 170512 added these workflow fields\n\tif (1==1) { //ERS170523 #37162 after dryrun\n\t\t//arrOfPairs.push(\"RecordTypeId\",\"012Q00000005Ahj\"); //ERS170523 Prior Auth\n\t\tif (priority != \"Normal\") arrOfPairs.push(\"Priority\",priority);  //ERS170524 #37162 priority on Case\n\t\telse arrOfPairs.push(\"Priority\",\"Medium\");\n\t\tarrOfPairs.push(\"Origin\",\"Fax\");\n\t}\n\t//name=\"X_ZPAPER__Patient__c\"\n\t//name=\"X_ZPAPER__FirstName__c\"\n\t//name=\"X_ZPAPER__LastName__c\"\n\tvar caseId = createAndAttach(doc, \"Case\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, arrOfPairs);\n\talert(\"Created Case with ID: \" + caseId);\n\tif (caseId == \"null\" || caseId == \"NEW\") caseId=null; //ERS170621 TODO need a standard\n}\nelse {\n\talert(\"@@@@ attaching to existing Case: \" + caseId);\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, caseId);\n}\nif (attachPath.indexOf(caseId)==-1) attachPath+=\",\"+caseId;\n\narrOfPairs = [];\nif (providerId && providerId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Provider__c\", providerId);\n\tif (attachPath.indexOf(providerId)==-1) attachPath+=\",\"+providerId;\n}\nif (patientId && patientId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Patient__c\", patientId);\n\tif (attachPath.indexOf(patientId)==-1) attachPath+=\",\"+patientId;\n}\nif (caseId && caseId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Case__c\", caseId);\n}\nupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\nattach(doc, \"Indexed-\"+formatNow+\"-\"+triageType, sfStackId);\nalert(\"@@@@ updated and attached to zStack Record, id = \" + sfStackId);\n\nif (1===0) { //ERS170627 TODO refactor\n    //CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\n    var provider = X(doc, \"X_Primary_Care_Physician__c\");\n    if (contactId && contactId.length > 0 && provider && provider.length > 0) {\n    \tarrOfPairs = [];\n    \tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n    \tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n    }\n}\n\nunlockDocument(doc);\n\narrOfPairs = [];\n//ERS170909 arrOfPairs.push(\"X_reviewedStatus\", \"Indexed\");\nif (1===1 && 1===0) { //ERS170909 #40592 for zDocSet statuses //ERS180103 #41155 set above\n//    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n//    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n//    var now0 = getCurDateAndTime(doc,false,true);\n//    arrOfPairs.push(\"X_reviewedStatus\",ba);\n//    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = zData.countPages(doc,pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (!patientFirstName || 0 == patientFirstName.length) { patientFirstName = \"Unknown\"; }\nif (!patientLastName || 0 == patientLastName.length) { patientLastName = \"Name\"; }\narrOfPairs.push(\"db-label\", patientFirstName + patientLastName + \" - \" + companyCode + \" - \" + stackId);\narrOfPairs.push(\"X_docType\",faxType); //JPB180215 changed doctype and faxtype name\narrOfPairs.push(\"X_attachedTo\",attachPath); //ERS170628\nupdateDB(doc,arrOfPairs);\n\ntrack(doc, \"Doc Indexed \", \"Document with Id: \" + doc.dbID, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ready~);updateDEStatus(~indexed:\" + pageRange + \"~);\");\n\n/* end of rule */","active":true,"button":"Index","outputs":1,"noerr":0,"x":494,"y":643,"wires":[["c71da17.f197f6"]]},{"id":"9f436ab1.ee88d8","type":"zAction","z":"87f3043f.6f8f48","name":"Reject Page","func":"alert(\"@@@@ Reject Page Rule Fired @@@#\");\n\nfunction countPages(pageRange) {\n  var pages = pageRange.split(\",\");\n  return pages.length + \"\";\n}\n\nvar caseId = null;\nvar stackId = X(doc, \"X_stack\");\nvar contactId = X(doc, \"X_Patient__c\");\nvar patientFirstName = X(doc, \"X_Labeler_Patient_First_Name__c\");\nvar patientLastName = X(doc, \"X_Labeler_Patient_Last_Name__c\");\nvar patientDOB = X(doc, \"X_Labeler_Patient_DoB__c\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 see X_reviews work zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_rejectedPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_rejectedPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"reject\", pageRange);\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = countPages(pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\nupdateDB(doc,arrOfPairs);\n\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\tattach(doc, \"Rejected-\" + stackId, contactId);\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", \"Rejected-\" + stackId, ctcArrOfPairs);\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\nvar providerFirstName = \"\";\nvar providerLastName = \"\";\nvar provider = X(doc, \"X_Primary_Care_Physician__c\");\nif (provider && provider.length > 0) {\n\tvar providerFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, provider);\n\tproviderFirstName = X(doc, \"FirstName\", providerFlds);\n\tproviderLastName = X(doc, \"LastName\", providerFlds);\n}\nif (1===0) { //ERS170909 #40592 not standard\n/*\nif (contactId && contactId.length > 0 && provider && provider.length > 0) {\n\tarrOfPairs = [];\n\tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n\tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n} */\n}\n\narrOfPairs = [];\narrOfPairs.push(\"Status\", \"New\");\narrOfPairs.push(\"Origin\", \"Fax\");\narrOfPairs.push(\"Description\", doc.kbData.comments);\narrOfPairs.push(\"Subject\", \"Document Rejected\");\nif (1===0) { //ERS170909 #40592 not standard\n/*    arrOfPairs.push(\"Notes__c\", doc.kbData.comments);\n    arrOfPairs.push(\"Provider_First_Name__c\", providerFirstName);\n    arrOfPairs.push(\"Provider_Last_Name__c\", providerLastName);*/\n}\nalert(\"@@@@@@@ SETTING ContactId on Case creation? \" + contactId);\nif (contactId && contactId.length > 0) {\n\tarrOfPairs.push(\"ContactId\", contactId);\n}\ncaseId = createAndAttach(doc, \"Case\", \"Rejected-\" + stackId, arrOfPairs);\nalert(\"@@@@@ caseId for Rejecton: \" + caseId);\nif (caseId && caseId.length > 0) {\n\tarrOfPairs = [];\n\tif (contactId && contactId.length > 0) {\n\t\tarrOfPairs.push(\"WhoId\", contactId);\n\t}\n\tarrOfPairs.push(\"WhatId\", caseId);\n\tarrOfPairs.push(\"Subject\", \"Incoming Document Rejected\");\n\tarrOfPairs.push(\"Status\", \"In Progress\");\n\tvar sfId = createAndAttach(doc, \"Task\", \"Rejected-\" + stackId, arrOfPairs);\n}\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the rejected pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"rejected\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~rejected~);updateDEStatus(~rejected:\" + pageRange + \"~);\");\n\n/* end of rule */\n\n","active":true,"button":"Reject","outputs":1,"noerr":0,"x":897,"y":768,"wires":[[]]},{"id":"decdba69.2b3fd8","type":"zAction","z":"87f3043f.6f8f48","name":"Stack Complete","func":"alert(\"@@@@ Stack Complete Rule Fired @@@#\");\n\n/* Clear the trigger that invoked this rule */\nvar arrOfPairs = [];\narrOfPairs.push(\"X_buttonAction\", \"\");\narrOfPairs.push(\"X_triageStatus\", \"Complete\");\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\".replace(\"Completeed\",\"Completed\");\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\"); //ERS170727 #40447\n//CRN170626 Also save the status in the zStack record.\nif (sfStackId===\"\") sfStackId = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ COMPLETE STACK -- Currently attached to Stack__c with ID: \" + sfStackId);\nif (sfStackId && sfStackId.length > 0) {\n\tif (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n\t}\n}\nif (sfStackId && sfStackId.length > 0) {\n\tarrOfPairs = [];\n\t//arrOfPairs.push(\"Triage_Status__c\", \"Complete\");\n\tarrOfPairs.push(\"ZPAPER__Status__c\", \"Complete\");\n\tupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\n}\n\n\nvar companyCode = doc.deliveredTo;\nalert(\"##### COMPLETE STACK: companyCode = \" + companyCode);\nvar oldFolder = companyCode.indexOf(\"1306\") > 0 ? \"20500Triage-S1A\" : \"20500Triage-S1B\";\n\nalert(\"##### COMPLETE STACK: moving from oldFolder: \" + oldFolder);\nmoveDocument(doc,oldFolder,\"\");\nreloadByBATES(doc,oldFolder);\nunlockDocument(doc);\n\ntrack(doc, \"Stack completed\", doc.BATES, doc.numPages);\nhideDocument(doc);\n//CRN161005 Case #30173 Clear label bar when Stack is completed\naddPostExecutionScript(doc, \"; $('#recordLabel').html(''); $('#DEFormsList').hide(); $('#dataEntryDIV').hide();\");\n\n//AN20180220 attempting to jury rig this - THIS WORKS AS A FALLBACK - redirects to Home Page\n//addPostExecutionScript(doc, \"; window.location.href='https://zpaperpapdemo-dev-ed.lightning.force.com/';\");\n\n//AN20180220 redirect to the zStack to which this is attached\naddPostExecutionScript(doc, \"; window.location.href='\"+ X(doc,\"X_attachedTo\") + \"';\");\n\nalert(\"@@@@@@ doc.kbData.sfServer: \" + doc.kbData.sfServer);\n\n/* end of rule */\n","active":true,"button":"Stack Complete","outputs":1,"noerr":0,"x":903,"y":802,"wires":[["3bcf72ef.753d8e"]]},{"id":"5b3ae629.2a6838","type":"zAction","z":"87f3043f.6f8f48","name":"Ignore Page","func":"alert(\"@@@@ Ignore Page Rule Fired @@@#\");\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\nzData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_ignoredPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_ignoredPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"ignore\", pageRange);\nalert(\"@@@ pageRange = \" + pageRange);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nalert(\"@@@ BEFORE CALL TO COUNTPAGES @@@\");\nvar pageCount = zData.countPages(doc, pageRange);  //CRN180102 Added missing zData reference\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nupdateDB(doc,arrOfPairs);\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the ignored pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"ignored\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ignored~);updateDEStatus(~ignored:\" + pageRange + \"~);\");\n/* end of rule */\n","active":true,"button":"Ignore","outputs":1,"noerr":0,"x":896,"y":734,"wires":[[]]},{"id":"9e0f8f1d.2d677","type":"zAction","z":"87f3043f.6f8f48","name":"Priority Urgent set","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":644,"y":205,"wires":[[]]},{"id":"d1dc722a.0116d","type":"zAction","z":"87f3043f.6f8f48","name":"Queue set by fax #","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":641,"y":300,"wires":[["1a70acac.2c7bd3"]]},{"id":"1a70acac.2c7bd3","type":"function","z":"87f3043f.6f8f48","name":"User triages zCharta documents in queue","func":"\nreturn msg;","outputs":1,"noerr":0,"x":718,"y":358,"wires":[["e233cfd6.f870f"]]},{"id":"132e35b1.f1ef8a","type":"zAction","z":"87f3043f.6f8f48","name":"Set all required Stack attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":682,"y":236,"wires":[[]]},{"id":"e233cfd6.f870f","type":"zAction","z":"87f3043f.6f8f48","name":"Select Triage Link","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1075,"y":358,"wires":[["44961d65.b8ddf4"]]},{"id":"14db13cc.78471c","type":"comment","z":"87f3043f.6f8f48","name":"Enrollment Keywords OCR","info":"","x":869,"y":172,"wires":[]},{"id":"44961d65.b8ddf4","type":"zAction","z":"87f3043f.6f8f48","name":"Intake Triage Panel","func":"X_ZPAPER__Provider__r.Name $ZPAPER__Provider__r.Name$\nX_ZPAPER__Case__c $ZPAPER__zStack__c.ZPAPER__Case__c$\nX_ZPAPER__Patient__c $ZPAPER__zStack__c.ZPAPER__Patient__c$\nX_ZPAPER__Provider__c $ZPAPER__zStack__c.ZPAPER__Provider__c$\nX_ZPAPER__LastName__c $ZPAPER__zStack__c.ZPAPER__LastName__c$\nX_ZPAPER__Case__r.CaseNumber $ZPAPER__Case__r.CaseNumber$\nX_ZPAPER__faxType__c $ZPAPER__zStack__c.ZPAPER__faxType__c$\nX_ZPAPER__Birthdate__c $ZPAPER__zStack__c.ZPAPER__Birthdate__c$\nX_ZPAPER__Patient__r.Name $ZPAPER__Patient__r.Name$\nX_ZPAPER__Priority__c $ZPAPER__zStack__c.ZPAPER__Priority__c$\nX_ZPAPER__Classification__c $ZPAPER__zStack__c.ZPAPER__Classification__c$\nX_ZPAPER__FirstName__c $ZPAPER__zStack__c.ZPAPER__FirstName__c$\n","active":true,"button":"","outputs":1,"noerr":0,"x":205,"y":481,"wires":[["2a5fcb06.425e14","409f97c0.eae528","2cd9aa8d.06acc6","8ad5cef0.0a437","750ba315.453c7c","fe68600.3a7e2a","50be54ee.aca67c","1c2986cb.471449","5daefe59.d3657","7c1458c0.301d58","551dc4e6.b732ec","898df7.54e38208","82d580dd.9ac6b","c7125552.639cb8"]]},{"id":"5bda6817.d2c2a8","type":"comment","z":"87f3043f.6f8f48","name":"User captures zStack Attributes","info":"","x":222,"y":400,"wires":[]},{"id":"df233380.ff6f5","type":"zAction","z":"87f3043f.6f8f48","name":"New Enrollment Case created with initial docType selected","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1439,"y":1535,"wires":[["ecd2b520.b1e988"]]},{"id":"223c0f4e.67f11","type":"zAction","z":"87f3043f.6f8f48","name":"zStack DocType set to Enrollment","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":690,"y":268,"wires":[[]]},{"id":"8ad5cef0.0a437","type":"zAction","z":"87f3043f.6f8f48","name":"docType selected (required)","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":543,"y":609,"wires":[["c71da17.f197f6"]]},{"id":"2a5fcb06.425e14","type":"soql","z":"87f3043f.6f8f48","name":"Existing Case lookup (optional)","query":"","connection":"","x":553,"y":510,"wires":[[]]},{"id":"409f97c0.eae528","type":"soql","z":"87f3043f.6f8f48","name":"Existing Provider lookup Person Account record (optional)","query":"","connection":"","x":631,"y":543,"wires":[["c71da17.f197f6"]]},{"id":"2cd9aa8d.06acc6","type":"soql","z":"87f3043f.6f8f48","name":"Existing Patient lookup Contact record (required)","query":"","connection":"","x":603,"y":576,"wires":[["c71da17.f197f6"]]},{"id":"5defe663.f5ea18","type":"soql","z":"87f3043f.6f8f48","name":"Firstname required","query":"","connection":"","x":750,"y":1452,"wires":[["fc321594.0d99d8"]]},{"id":"5daefe59.d3657","type":"zAction","z":"87f3043f.6f8f48","name":"Create New Patient Split","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":517,"y":1488,"wires":[["5defe663.f5ea18","cd0a239a.c96d","fb3cc8d7.357e18"]]},{"id":"cd0a239a.c96d","type":"soql","z":"87f3043f.6f8f48","name":"Lastname required","query":"","connection":"","x":750,"y":1484,"wires":[["fc321594.0d99d8"]]},{"id":"fb3cc8d7.357e18","type":"soql","z":"87f3043f.6f8f48","name":"DOB required","query":"","connection":"","x":742,"y":1517,"wires":[["fc321594.0d99d8"]]},{"id":"fc321594.0d99d8","type":"zAction","z":"87f3043f.6f8f48","name":"Create new patient (Contact record)","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1065,"y":1483,"wires":[["df233380.ff6f5"]]},{"id":"c71da17.f197f6","type":"zAction","z":"87f3043f.6f8f48","name":"New Enrollment Case created with initial docType selected","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1187,"y":592,"wires":[["29a67055.38b67"]]},{"id":"fe68600.3a7e2a","type":"zAction","z":"87f3043f.6f8f48","name":"Additional Indexed pages with attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":583,"y":676,"wires":[["29a67055.38b67"]]},{"id":"29a67055.38b67","type":"zAction","z":"87f3043f.6f8f48","name":"Additional indexed pages with docTypes attached to newly created case","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1243,"y":657,"wires":[[]]},{"id":"50be54ee.aca67c","type":"function","z":"87f3043f.6f8f48","name":"Selection of zAction buttons for per page indexing","func":"\nreturn msg;","outputs":1,"noerr":0,"x":599,"y":744,"wires":[["5b3ae629.2a6838","9f436ab1.ee88d8"]]},{"id":"1c2986cb.471449","type":"function","z":"87f3043f.6f8f48","name":"Once user indexes all pages they can complete index","func":"\nreturn msg;","outputs":1,"noerr":0,"x":608,"y":814,"wires":[["decdba69.2b3fd8"]]},{"id":"3bcf72ef.753d8e","type":"function","z":"87f3043f.6f8f48","name":"removes zStack record from queue to Stack Complete list view","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1303,"y":812,"wires":[[]]},{"id":"f8e4a7be.0b9c18","type":"comment","z":"87f3043f.6f8f48","name":"Look up existing Patient record","info":"","x":222,"y":365,"wires":[]},{"id":"deff583b.cada28","type":"comment","z":"87f3043f.6f8f48","name":"Create new Patient record","info":"","x":225,"y":1446,"wires":[]},{"id":"551dc4e6.b732ec","type":"zAction","z":"87f3043f.6f8f48","name":"Index Page","func":"alert(\"@@@@ Index Rule Fired @@@#\");\n/* double-quote, newline characters */\nvar dq = String.fromCharCode(34);\nvar nl = String.fromCharCode(10);\nvar formatNow=getCurDateAndTime(doc);\n\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\n// Does the user want to attach indexed pages to Case?\nvar caseId = X(doc, \"X_ZPAPER__Case__c\");\nvar contactId = X(doc, \"X_ZPAPER__Patient__c\");\nvar patientId=contactId; //TODO\nvar providerId = X(doc, \"X_ZPAPER__Provider__c\");\nvar patientFirstName = X(doc, \"X_ZPAPER__FirstName__c\");\nvar patientLastName = X(doc, \"X_ZPAPER__LastName__c\");\nvar patientDOB = X(doc, \"X_ZPAPER__Birthdate__c\");\n//CRN180214 Judson wants this to be part of the attachment label\nvar faxType = X(doc, \"X_ZPAPER__faxType__c\");\n// Get the document type (will be used to route to next folder)\nvar docType = X(doc, \"X_Document_Type__c\");\nvar nextFolder = \"20500Triage-S2\";\t\t\t\t// Other folder is the default\nvar prevIndexPages = X(doc, \"X_indexedPages\");\nvar curIndexPages = X(doc, \"X_idxPages\");\nif (prevIndexPages && prevIndexPages.length > 0 && curIndexPages && curIndexPages.length > 0) {\n\tprevIndexPages += \",\";\n}\ncurIndexPages = prevIndexPages + curIndexPages;\nvar arrOfPairs = [];\narrOfPairs.push(\"X_indexedPages\", curIndexPages);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    if (!ba.endsWith(\"ed\") && ba !== \"\") { ba+=\"ed\"; } //ERS180103 #41155\n    if (ba !== \"\") { //ERS180103 #41155\n        var now0 = getCurDateAndTime(doc,false,true);\n        arrOfPairs.push(\"X_reviewedStatus\",ba);\n        arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n        arrOfPairs.push(\"X_buttonAction\",\"\");\n    }\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\");\nif (sfStackId ===\"\") { //ERS170731 #40593\n    X(doc,\"X_attachedTo\");\n    if (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n    }\n}\nvar attachPath = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ Currently attached to ZPAPER__zStack__c with ID: \" + sfStackId);\n\n/* SPLIT OFF NEW SNIPPET HERE */\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"index\", pageRange);\nalert(\"Case '\"+caseId+\"' and len=\"+caseId.length);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* Attach the split document to a new Case record, if it wasn't passed in */\nvar priority=X(doc,\"X_ZPAPER__Priority__c\"); //ERS170626\nvar label0=\"\";\nvar triageType=doc.docType;\nvar patientName;\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\t\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, contactId);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, ctcArrOfPairs);\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//JPB180215 now attach to stack record\nattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, sfStackId);\n\n\nif (!caseId || 0 === caseId.length) {\n\talert(\"@@@@ creating new Case\");\n\tarrOfPairs = [];\n\t//ERS170520 arrOfPairs.push(\"OwnerId\", queuesMapKludge[X(doc,\"X_Assign_to_Queue__c\")]);\n\tarrOfPairs.push(\"ContactId\", contactId);\n\tarrOfPairs.push(\"ZPAPER__newFax__c\", \"true\"); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__latestFax__c\", formatNow); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__receivedId__c\", doc.dbID); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"Status\", X(doc,\"X_Status\"));\n\tarrOfPairs.push(\"Type\", \"New Fax\"); //JPB 170512 added these workflow fields\n\tif (1==1) { //ERS170523 #37162 after dryrun\n\t\t//arrOfPairs.push(\"RecordTypeId\",\"012Q00000005Ahj\"); //ERS170523 Prior Auth\n\t\tif (priority != \"Normal\") arrOfPairs.push(\"Priority\",priority);  //ERS170524 #37162 priority on Case\n\t\telse arrOfPairs.push(\"Priority\",\"Medium\");\n\t\tarrOfPairs.push(\"Origin\",\"Fax\");\n\t}\n\t//name=\"X_ZPAPER__Patient__c\"\n\t//name=\"X_ZPAPER__FirstName__c\"\n\t//name=\"X_ZPAPER__LastName__c\"\n\tvar caseId = createAndAttach(doc, \"Case\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, arrOfPairs);\n\talert(\"Created Case with ID: \" + caseId);\n\tif (caseId == \"null\" || caseId == \"NEW\") caseId=null; //ERS170621 TODO need a standard\n}\nelse {\n\talert(\"@@@@ attaching to existing Case: \" + caseId);\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, caseId);\n}\nif (attachPath.indexOf(caseId)==-1) attachPath+=\",\"+caseId;\n\narrOfPairs = [];\nif (providerId && providerId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Provider__c\", providerId);\n\tif (attachPath.indexOf(providerId)==-1) attachPath+=\",\"+providerId;\n}\nif (patientId && patientId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Patient__c\", patientId);\n\tif (attachPath.indexOf(patientId)==-1) attachPath+=\",\"+patientId;\n}\nif (caseId && caseId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Case__c\", caseId);\n}\nupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\nattach(doc, \"Indexed-\"+formatNow+\"-\"+triageType, sfStackId);\nalert(\"@@@@ updated and attached to zStack Record, id = \" + sfStackId);\n\nif (1===0) { //ERS170627 TODO refactor\n    //CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\n    var provider = X(doc, \"X_Primary_Care_Physician__c\");\n    if (contactId && contactId.length > 0 && provider && provider.length > 0) {\n    \tarrOfPairs = [];\n    \tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n    \tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n    }\n}\n\nunlockDocument(doc);\n\narrOfPairs = [];\n//ERS170909 arrOfPairs.push(\"X_reviewedStatus\", \"Indexed\");\nif (1===1 && 1===0) { //ERS170909 #40592 for zDocSet statuses //ERS180103 #41155 set above\n//    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n//    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n//    var now0 = getCurDateAndTime(doc,false,true);\n//    arrOfPairs.push(\"X_reviewedStatus\",ba);\n//    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = zData.countPages(doc,pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (!patientFirstName || 0 == patientFirstName.length) { patientFirstName = \"Unknown\"; }\nif (!patientLastName || 0 == patientLastName.length) { patientLastName = \"Name\"; }\narrOfPairs.push(\"db-label\", patientFirstName + patientLastName + \" - \" + companyCode + \" - \" + stackId);\narrOfPairs.push(\"X_docType\",faxType); //JPB180215 changed doctype and faxtype name\narrOfPairs.push(\"X_attachedTo\",attachPath); //ERS170628\nupdateDB(doc,arrOfPairs);\n\ntrack(doc, \"Doc Indexed \", \"Document with Id: \" + doc.dbID, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ready~);updateDEStatus(~indexed:\" + pageRange + \"~);\");\n\n/* end of rule */","active":true,"button":"Index","outputs":1,"noerr":0,"x":474,"y":1641,"wires":[["df233380.ff6f5"]]},{"id":"24026b60.9d6254","type":"zAction","z":"87f3043f.6f8f48","name":"Reject Page","func":"alert(\"@@@@ Reject Page Rule Fired @@@#\");\n\nfunction countPages(pageRange) {\n  var pages = pageRange.split(\",\");\n  return pages.length + \"\";\n}\n\nvar caseId = null;\nvar stackId = X(doc, \"X_stack\");\nvar contactId = X(doc, \"X_Patient__c\");\nvar patientFirstName = X(doc, \"X_Labeler_Patient_First_Name__c\");\nvar patientLastName = X(doc, \"X_Labeler_Patient_Last_Name__c\");\nvar patientDOB = X(doc, \"X_Labeler_Patient_DoB__c\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 see X_reviews work zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_rejectedPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_rejectedPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"reject\", pageRange);\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = countPages(pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\nupdateDB(doc,arrOfPairs);\n\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\tattach(doc, \"Rejected-\" + stackId, contactId);\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", \"Rejected-\" + stackId, ctcArrOfPairs);\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\nvar providerFirstName = \"\";\nvar providerLastName = \"\";\nvar provider = X(doc, \"X_Primary_Care_Physician__c\");\nif (provider && provider.length > 0) {\n\tvar providerFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, provider);\n\tproviderFirstName = X(doc, \"FirstName\", providerFlds);\n\tproviderLastName = X(doc, \"LastName\", providerFlds);\n}\nif (1===0) { //ERS170909 #40592 not standard\n/*\nif (contactId && contactId.length > 0 && provider && provider.length > 0) {\n\tarrOfPairs = [];\n\tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n\tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n} */\n}\n\narrOfPairs = [];\narrOfPairs.push(\"Status\", \"New\");\narrOfPairs.push(\"Origin\", \"Fax\");\narrOfPairs.push(\"Description\", doc.kbData.comments);\narrOfPairs.push(\"Subject\", \"Document Rejected\");\nif (1===0) { //ERS170909 #40592 not standard\n/*    arrOfPairs.push(\"Notes__c\", doc.kbData.comments);\n    arrOfPairs.push(\"Provider_First_Name__c\", providerFirstName);\n    arrOfPairs.push(\"Provider_Last_Name__c\", providerLastName);*/\n}\nalert(\"@@@@@@@ SETTING ContactId on Case creation? \" + contactId);\nif (contactId && contactId.length > 0) {\n\tarrOfPairs.push(\"ContactId\", contactId);\n}\ncaseId = createAndAttach(doc, \"Case\", \"Rejected-\" + stackId, arrOfPairs);\nalert(\"@@@@@ caseId for Rejecton: \" + caseId);\nif (caseId && caseId.length > 0) {\n\tarrOfPairs = [];\n\tif (contactId && contactId.length > 0) {\n\t\tarrOfPairs.push(\"WhoId\", contactId);\n\t}\n\tarrOfPairs.push(\"WhatId\", caseId);\n\tarrOfPairs.push(\"Subject\", \"Incoming Document Rejected\");\n\tarrOfPairs.push(\"Status\", \"In Progress\");\n\tvar sfId = createAndAttach(doc, \"Task\", \"Rejected-\" + stackId, arrOfPairs);\n}\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the rejected pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"rejected\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~rejected~);updateDEStatus(~rejected:\" + pageRange + \"~);\");\n\n/* end of rule */\n\n","active":true,"button":"Reject","outputs":1,"noerr":0,"x":877,"y":1655,"wires":[[]]},{"id":"a4754fab.313bd","type":"zAction","z":"87f3043f.6f8f48","name":"Stack Complete","func":"alert(\"@@@@ Stack Complete Rule Fired @@@#\");\n\n/* Clear the trigger that invoked this rule */\nvar arrOfPairs = [];\narrOfPairs.push(\"X_buttonAction\", \"\");\narrOfPairs.push(\"X_triageStatus\", \"Complete\");\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\".replace(\"Completeed\",\"Completed\");\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\"); //ERS170727 #40447\n//CRN170626 Also save the status in the zStack record.\nif (sfStackId===\"\") sfStackId = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ COMPLETE STACK -- Currently attached to Stack__c with ID: \" + sfStackId);\nif (sfStackId && sfStackId.length > 0) {\n\tif (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n\t}\n}\nif (sfStackId && sfStackId.length > 0) {\n\tarrOfPairs = [];\n\t//arrOfPairs.push(\"Triage_Status__c\", \"Complete\");\n\tarrOfPairs.push(\"ZPAPER__Status__c\", \"Complete\");\n\tupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\n}\n\n\nvar companyCode = doc.deliveredTo;\nalert(\"##### COMPLETE STACK: companyCode = \" + companyCode);\nvar oldFolder = companyCode.indexOf(\"1306\") > 0 ? \"20500Triage-S1A\" : \"20500Triage-S1B\";\n\nalert(\"##### COMPLETE STACK: moving from oldFolder: \" + oldFolder);\nmoveDocument(doc,oldFolder,\"\");\nreloadByBATES(doc,oldFolder);\nunlockDocument(doc);\n\ntrack(doc, \"Stack completed\", doc.BATES, doc.numPages);\nhideDocument(doc);\n//CRN161005 Case #30173 Clear label bar when Stack is completed\naddPostExecutionScript(doc, \"; $('#recordLabel').html(''); $('#DEFormsList').hide(); $('#dataEntryDIV').hide();\");\n\n//AN20180220 attempting to jury rig this - THIS WORKS AS A FALLBACK - redirects to Home Page\n//addPostExecutionScript(doc, \"; window.location.href='https://zpaperpapdemo-dev-ed.lightning.force.com/';\");\n\n//AN20180220 redirect to the zStack to which this is attached\naddPostExecutionScript(doc, \"; window.location.href='\"+ X(doc,\"X_attachedTo\") + \"';\");\n\nalert(\"@@@@@@ doc.kbData.sfServer: \" + doc.kbData.sfServer);\n\n/* end of rule */\n","active":true,"button":"Stack Complete","outputs":1,"noerr":0,"x":904,"y":1701,"wires":[["d78c7324.bf7c8"]]},{"id":"87b71e0f.f93eb","type":"zAction","z":"87f3043f.6f8f48","name":"Ignore Page","func":"alert(\"@@@@ Ignore Page Rule Fired @@@#\");\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\nzData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_ignoredPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_ignoredPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"ignore\", pageRange);\nalert(\"@@@ pageRange = \" + pageRange);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nalert(\"@@@ BEFORE CALL TO COUNTPAGES @@@\");\nvar pageCount = zData.countPages(doc, pageRange);  //CRN180102 Added missing zData reference\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nupdateDB(doc,arrOfPairs);\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the ignored pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"ignored\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ignored~);updateDEStatus(~ignored:\" + pageRange + \"~);\");\n/* end of rule */\n","active":true,"button":"Ignore","outputs":1,"noerr":0,"x":876,"y":1621,"wires":[[]]},{"id":"7c1458c0.301d58","type":"zAction","z":"87f3043f.6f8f48","name":"docType selected (required)","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":523,"y":1575,"wires":[["df233380.ff6f5"]]},{"id":"898df7.54e38208","type":"zAction","z":"87f3043f.6f8f48","name":"Additional Indexed pages with attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":563,"y":1674,"wires":[["ecd2b520.b1e988"]]},{"id":"ecd2b520.b1e988","type":"zAction","z":"87f3043f.6f8f48","name":"Additional indexed pages with docTypes attached to newly created case","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1382,"y":1652,"wires":[[]]},{"id":"82d580dd.9ac6b","type":"function","z":"87f3043f.6f8f48","name":"Selection of zAction buttons for per page indexing","func":"\nreturn msg;","outputs":1,"noerr":0,"x":589,"y":1608,"wires":[["87b71e0f.f93eb","24026b60.9d6254"]]},{"id":"c7125552.639cb8","type":"function","z":"87f3043f.6f8f48","name":"Once user indexes all pages they can complete index","func":"\nreturn msg;","outputs":1,"noerr":0,"x":603,"y":1710,"wires":[["a4754fab.313bd"]]},{"id":"d78c7324.bf7c8","type":"function","z":"87f3043f.6f8f48","name":"removes zStack record from queue to Stack Complete list view","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1283,"y":1699,"wires":[[]]},{"id":"57457090.5f779","type":"comment","z":"87f3043f.6f8f48","name":"Index Multiple Patients","info":"","x":192,"y":914,"wires":[]},{"id":"520a01a6.347af","type":"zAction","z":"87f3043f.6f8f48","name":"Index Page","func":"alert(\"@@@@ Index Rule Fired @@@#\");\n/* double-quote, newline characters */\nvar dq = String.fromCharCode(34);\nvar nl = String.fromCharCode(10);\nvar formatNow=getCurDateAndTime(doc);\n\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\n// Does the user want to attach indexed pages to Case?\nvar caseId = X(doc, \"X_ZPAPER__Case__c\");\nvar contactId = X(doc, \"X_ZPAPER__Patient__c\");\nvar patientId=contactId; //TODO\nvar providerId = X(doc, \"X_ZPAPER__Provider__c\");\nvar patientFirstName = X(doc, \"X_ZPAPER__FirstName__c\");\nvar patientLastName = X(doc, \"X_ZPAPER__LastName__c\");\nvar patientDOB = X(doc, \"X_ZPAPER__Birthdate__c\");\n//CRN180214 Judson wants this to be part of the attachment label\nvar faxType = X(doc, \"X_ZPAPER__faxType__c\");\n// Get the document type (will be used to route to next folder)\nvar docType = X(doc, \"X_Document_Type__c\");\nvar nextFolder = \"20500Triage-S2\";\t\t\t\t// Other folder is the default\nvar prevIndexPages = X(doc, \"X_indexedPages\");\nvar curIndexPages = X(doc, \"X_idxPages\");\nif (prevIndexPages && prevIndexPages.length > 0 && curIndexPages && curIndexPages.length > 0) {\n\tprevIndexPages += \",\";\n}\ncurIndexPages = prevIndexPages + curIndexPages;\nvar arrOfPairs = [];\narrOfPairs.push(\"X_indexedPages\", curIndexPages);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    if (!ba.endsWith(\"ed\") && ba !== \"\") { ba+=\"ed\"; } //ERS180103 #41155\n    if (ba !== \"\") { //ERS180103 #41155\n        var now0 = getCurDateAndTime(doc,false,true);\n        arrOfPairs.push(\"X_reviewedStatus\",ba);\n        arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n        arrOfPairs.push(\"X_buttonAction\",\"\");\n    }\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\");\nif (sfStackId ===\"\") { //ERS170731 #40593\n    X(doc,\"X_attachedTo\");\n    if (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n    }\n}\nvar attachPath = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ Currently attached to ZPAPER__zStack__c with ID: \" + sfStackId);\n\n/* SPLIT OFF NEW SNIPPET HERE */\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"index\", pageRange);\nalert(\"Case '\"+caseId+\"' and len=\"+caseId.length);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* Attach the split document to a new Case record, if it wasn't passed in */\nvar priority=X(doc,\"X_ZPAPER__Priority__c\"); //ERS170626\nvar label0=\"\";\nvar triageType=doc.docType;\nvar patientName;\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\t\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, contactId);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, ctcArrOfPairs);\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//JPB180215 now attach to stack record\nattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, sfStackId);\n\n\nif (!caseId || 0 === caseId.length) {\n\talert(\"@@@@ creating new Case\");\n\tarrOfPairs = [];\n\t//ERS170520 arrOfPairs.push(\"OwnerId\", queuesMapKludge[X(doc,\"X_Assign_to_Queue__c\")]);\n\tarrOfPairs.push(\"ContactId\", contactId);\n\tarrOfPairs.push(\"ZPAPER__newFax__c\", \"true\"); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__latestFax__c\", formatNow); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__receivedId__c\", doc.dbID); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"Status\", X(doc,\"X_Status\"));\n\tarrOfPairs.push(\"Type\", \"New Fax\"); //JPB 170512 added these workflow fields\n\tif (1==1) { //ERS170523 #37162 after dryrun\n\t\t//arrOfPairs.push(\"RecordTypeId\",\"012Q00000005Ahj\"); //ERS170523 Prior Auth\n\t\tif (priority != \"Normal\") arrOfPairs.push(\"Priority\",priority);  //ERS170524 #37162 priority on Case\n\t\telse arrOfPairs.push(\"Priority\",\"Medium\");\n\t\tarrOfPairs.push(\"Origin\",\"Fax\");\n\t}\n\t//name=\"X_ZPAPER__Patient__c\"\n\t//name=\"X_ZPAPER__FirstName__c\"\n\t//name=\"X_ZPAPER__LastName__c\"\n\tvar caseId = createAndAttach(doc, \"Case\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, arrOfPairs);\n\talert(\"Created Case with ID: \" + caseId);\n\tif (caseId == \"null\" || caseId == \"NEW\") caseId=null; //ERS170621 TODO need a standard\n}\nelse {\n\talert(\"@@@@ attaching to existing Case: \" + caseId);\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, caseId);\n}\nif (attachPath.indexOf(caseId)==-1) attachPath+=\",\"+caseId;\n\narrOfPairs = [];\nif (providerId && providerId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Provider__c\", providerId);\n\tif (attachPath.indexOf(providerId)==-1) attachPath+=\",\"+providerId;\n}\nif (patientId && patientId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Patient__c\", patientId);\n\tif (attachPath.indexOf(patientId)==-1) attachPath+=\",\"+patientId;\n}\nif (caseId && caseId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Case__c\", caseId);\n}\nupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\nattach(doc, \"Indexed-\"+formatNow+\"-\"+triageType, sfStackId);\nalert(\"@@@@ updated and attached to zStack Record, id = \" + sfStackId);\n\nif (1===0) { //ERS170627 TODO refactor\n    //CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\n    var provider = X(doc, \"X_Primary_Care_Physician__c\");\n    if (contactId && contactId.length > 0 && provider && provider.length > 0) {\n    \tarrOfPairs = [];\n    \tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n    \tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n    }\n}\n\nunlockDocument(doc);\n\narrOfPairs = [];\n//ERS170909 arrOfPairs.push(\"X_reviewedStatus\", \"Indexed\");\nif (1===1 && 1===0) { //ERS170909 #40592 for zDocSet statuses //ERS180103 #41155 set above\n//    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n//    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n//    var now0 = getCurDateAndTime(doc,false,true);\n//    arrOfPairs.push(\"X_reviewedStatus\",ba);\n//    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = zData.countPages(doc,pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (!patientFirstName || 0 == patientFirstName.length) { patientFirstName = \"Unknown\"; }\nif (!patientLastName || 0 == patientLastName.length) { patientLastName = \"Name\"; }\narrOfPairs.push(\"db-label\", patientFirstName + patientLastName + \" - \" + companyCode + \" - \" + stackId);\narrOfPairs.push(\"X_docType\",faxType); //JPB180215 changed doctype and faxtype name\narrOfPairs.push(\"X_attachedTo\",attachPath); //ERS170628\nupdateDB(doc,arrOfPairs);\n\ntrack(doc, \"Doc Indexed \", \"Document with Id: \" + doc.dbID, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ready~);updateDEStatus(~indexed:\" + pageRange + \"~);\");\n\n/* end of rule */","active":true,"button":"Index","outputs":1,"noerr":0,"x":480,"y":1049,"wires":[["be994f16.f0a0d"]]},{"id":"8ce84913.c18cc8","type":"zAction","z":"87f3043f.6f8f48","name":"Reject Page","func":"alert(\"@@@@ Reject Page Rule Fired @@@#\");\n\nfunction countPages(pageRange) {\n  var pages = pageRange.split(\",\");\n  return pages.length + \"\";\n}\n\nvar caseId = null;\nvar stackId = X(doc, \"X_stack\");\nvar contactId = X(doc, \"X_Patient__c\");\nvar patientFirstName = X(doc, \"X_Labeler_Patient_First_Name__c\");\nvar patientLastName = X(doc, \"X_Labeler_Patient_Last_Name__c\");\nvar patientDOB = X(doc, \"X_Labeler_Patient_DoB__c\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 see X_reviews work zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_rejectedPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_rejectedPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"reject\", pageRange);\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = countPages(pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\nupdateDB(doc,arrOfPairs);\n\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\tattach(doc, \"Rejected-\" + stackId, contactId);\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", \"Rejected-\" + stackId, ctcArrOfPairs);\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\nvar providerFirstName = \"\";\nvar providerLastName = \"\";\nvar provider = X(doc, \"X_Primary_Care_Physician__c\");\nif (provider && provider.length > 0) {\n\tvar providerFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, provider);\n\tproviderFirstName = X(doc, \"FirstName\", providerFlds);\n\tproviderLastName = X(doc, \"LastName\", providerFlds);\n}\nif (1===0) { //ERS170909 #40592 not standard\n/*\nif (contactId && contactId.length > 0 && provider && provider.length > 0) {\n\tarrOfPairs = [];\n\tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n\tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n} */\n}\n\narrOfPairs = [];\narrOfPairs.push(\"Status\", \"New\");\narrOfPairs.push(\"Origin\", \"Fax\");\narrOfPairs.push(\"Description\", doc.kbData.comments);\narrOfPairs.push(\"Subject\", \"Document Rejected\");\nif (1===0) { //ERS170909 #40592 not standard\n/*    arrOfPairs.push(\"Notes__c\", doc.kbData.comments);\n    arrOfPairs.push(\"Provider_First_Name__c\", providerFirstName);\n    arrOfPairs.push(\"Provider_Last_Name__c\", providerLastName);*/\n}\nalert(\"@@@@@@@ SETTING ContactId on Case creation? \" + contactId);\nif (contactId && contactId.length > 0) {\n\tarrOfPairs.push(\"ContactId\", contactId);\n}\ncaseId = createAndAttach(doc, \"Case\", \"Rejected-\" + stackId, arrOfPairs);\nalert(\"@@@@@ caseId for Rejecton: \" + caseId);\nif (caseId && caseId.length > 0) {\n\tarrOfPairs = [];\n\tif (contactId && contactId.length > 0) {\n\t\tarrOfPairs.push(\"WhoId\", contactId);\n\t}\n\tarrOfPairs.push(\"WhatId\", caseId);\n\tarrOfPairs.push(\"Subject\", \"Incoming Document Rejected\");\n\tarrOfPairs.push(\"Status\", \"In Progress\");\n\tvar sfId = createAndAttach(doc, \"Task\", \"Rejected-\" + stackId, arrOfPairs);\n}\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the rejected pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"rejected\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~rejected~);updateDEStatus(~rejected:\" + pageRange + \"~);\");\n\n/* end of rule */\n\n","active":true,"button":"Reject","outputs":1,"noerr":0,"x":883,"y":1174,"wires":[[]]},{"id":"5b4d2f0c.02c4a","type":"zAction","z":"87f3043f.6f8f48","name":"Stack Complete","func":"alert(\"@@@@ Stack Complete Rule Fired @@@#\");\n\n/* Clear the trigger that invoked this rule */\nvar arrOfPairs = [];\narrOfPairs.push(\"X_buttonAction\", \"\");\narrOfPairs.push(\"X_triageStatus\", \"Complete\");\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\".replace(\"Completeed\",\"Completed\");\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\"); //ERS170727 #40447\n//CRN170626 Also save the status in the zStack record.\nif (sfStackId===\"\") sfStackId = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ COMPLETE STACK -- Currently attached to Stack__c with ID: \" + sfStackId);\nif (sfStackId && sfStackId.length > 0) {\n\tif (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n\t}\n}\nif (sfStackId && sfStackId.length > 0) {\n\tarrOfPairs = [];\n\t//arrOfPairs.push(\"Triage_Status__c\", \"Complete\");\n\tarrOfPairs.push(\"ZPAPER__Status__c\", \"Complete\");\n\tupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\n}\n\n\nvar companyCode = doc.deliveredTo;\nalert(\"##### COMPLETE STACK: companyCode = \" + companyCode);\nvar oldFolder = companyCode.indexOf(\"1306\") > 0 ? \"20500Triage-S1A\" : \"20500Triage-S1B\";\n\nalert(\"##### COMPLETE STACK: moving from oldFolder: \" + oldFolder);\nmoveDocument(doc,oldFolder,\"\");\nreloadByBATES(doc,oldFolder);\nunlockDocument(doc);\n\ntrack(doc, \"Stack completed\", doc.BATES, doc.numPages);\nhideDocument(doc);\n//CRN161005 Case #30173 Clear label bar when Stack is completed\naddPostExecutionScript(doc, \"; $('#recordLabel').html(''); $('#DEFormsList').hide(); $('#dataEntryDIV').hide();\");\n\n//AN20180220 attempting to jury rig this - THIS WORKS AS A FALLBACK - redirects to Home Page\n//addPostExecutionScript(doc, \"; window.location.href='https://zpaperpapdemo-dev-ed.lightning.force.com/';\");\n\n//AN20180220 redirect to the zStack to which this is attached\naddPostExecutionScript(doc, \"; window.location.href='\"+ X(doc,\"X_attachedTo\") + \"';\");\n\nalert(\"@@@@@@ doc.kbData.sfServer: \" + doc.kbData.sfServer);\n\n/* end of rule */\n","active":true,"button":"Stack Complete","outputs":1,"noerr":0,"x":889,"y":1208,"wires":[["ac6378f9.0fe958"]]},{"id":"73772d4a.30c9f4","type":"zAction","z":"87f3043f.6f8f48","name":"Ignore Page","func":"alert(\"@@@@ Ignore Page Rule Fired @@@#\");\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\nzData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_ignoredPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_ignoredPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"ignore\", pageRange);\nalert(\"@@@ pageRange = \" + pageRange);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nalert(\"@@@ BEFORE CALL TO COUNTPAGES @@@\");\nvar pageCount = zData.countPages(doc, pageRange);  //CRN180102 Added missing zData reference\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nupdateDB(doc,arrOfPairs);\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the ignored pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"ignored\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ignored~);updateDEStatus(~ignored:\" + pageRange + \"~);\");\n/* end of rule */\n","active":true,"button":"Ignore","outputs":1,"noerr":0,"x":882,"y":1140,"wires":[[]]},{"id":"858e0b5b.e2ac28","type":"zAction","z":"87f3043f.6f8f48","name":"docType selected (required)","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":529,"y":1015,"wires":[["be994f16.f0a0d"]]},{"id":"c2363269.dca81","type":"soql","z":"87f3043f.6f8f48","name":"Existing Case lookup (optional)","query":"","connection":"","x":539,"y":916,"wires":[[]]},{"id":"dfb79930.3f5038","type":"soql","z":"87f3043f.6f8f48","name":"Existing Provider lookup Person Account record (required)","query":"","connection":"","x":617,"y":949,"wires":[["be994f16.f0a0d"]]},{"id":"ea7951f0.076f3","type":"soql","z":"87f3043f.6f8f48","name":"Existing Patient lookup Contact record (required)","query":"","connection":"","x":589,"y":982,"wires":[["be994f16.f0a0d"]]},{"id":"be994f16.f0a0d","type":"zAction","z":"87f3043f.6f8f48","name":"New Enrollment Case created with initial docType selected","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1173,"y":998,"wires":[["abaca52b.2624f8"]]},{"id":"805d1da9.f9f4f","type":"zAction","z":"87f3043f.6f8f48","name":"Additional Indexed pages with attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":569,"y":1082,"wires":[["abaca52b.2624f8"]]},{"id":"abaca52b.2624f8","type":"zAction","z":"87f3043f.6f8f48","name":"Additional indexed pages with docTypes attached to newly created case","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1229,"y":1063,"wires":[[]]},{"id":"f012c4a.d201038","type":"function","z":"87f3043f.6f8f48","name":"Selection of zAction buttons for per page indexing","func":"\nreturn msg;","outputs":1,"noerr":0,"x":585,"y":1150,"wires":[["73772d4a.30c9f4","8ce84913.c18cc8"]]},{"id":"df3c1af7.444768","type":"function","z":"87f3043f.6f8f48","name":"Once user indexes all pages they can complete index","func":"\nreturn msg;","outputs":1,"noerr":0,"x":594,"y":1220,"wires":[["5b4d2f0c.02c4a"]]},{"id":"ac6378f9.0fe958","type":"function","z":"87f3043f.6f8f48","name":"removes zStack record from queue to Stack Complete list view","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1289,"y":1218,"wires":[[]]},{"id":"8b0b71f1.1d498","type":"comment","z":"87f3043f.6f8f48","name":"New sub zStack created for multiple patients","info":"","x":262,"y":1309,"wires":[]},{"id":"a6301f03.09db1","type":"zAction","z":"87f3043f.6f8f48","name":"Split original zStack record into sub zStack records all pointing to original ","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":757,"y":1306,"wires":[[]]},{"id":"c8ff85cb.c0fb88","type":"zFax","z":"87f3043f.6f8f48","name":"zCharta","link":"","format":"text","template":"","x":147,"y":140,"wires":[["d223654a.ada778"]]},{"id":"6ee18200.ed7dac","type":"zComment","z":"87f3043f.6f8f48","name":"@Corey and @Carson to finish","link":"","info":"","x":200,"y":60,"wires":[]}],"rev":0}