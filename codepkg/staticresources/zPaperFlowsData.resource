{"flows":[{"id":"e8179419.0b9718","type":"tab","label":"Sample Inbound","disabled":false,"showlanes":false,"swimlanes":[],"info":""},{"id":"377839f3.494686","type":"tab","label":"zEnroll2020","disabled":false,"showlanes":true,"swimlanes":[{"colour":"#00770040","title":"mobile","height":400},{"colour":"#0000ff40","title":"zExtract","height":120},{"colour":"#0077ff40","title":"zippi","height":80},{"colour":"#ff000040","title":"Force.com","height":120}],"info":""},{"id":"f80d9d65.4d239","type":"swagger-doc","z":"","summary":"Retrieve a small image of the requrested file","description":"","tags":"","consumes":"","produces":"","parameters":[{"name":"file","in":"path","required":true,"type":"string"},{"name":"mime","in":"path","required":true,"type":"string"},{"name":"type","in":"path","required":true,"type":"string"},{"name":"size","in":"path","required":true,"type":"string"}],"responses":{},"deprecated":false},{"id":"fe205d02.4ccb2","type":"http in","z":"377839f3.494686","name":"","url":"/z/enroll2020","method":"post","upload":true,"swaggerDoc":"","x":160,"y":140,"wires":[["d4d00ad.24f03f8","d31c4acd.0a0358","95480091.71dc6","d58a4f9.3291bb"]]},{"id":"66f57240.543dac","type":"http response","z":"377839f3.494686","name":"","statusCode":"","headers":{},"x":550,"y":80,"wires":[]},{"id":"eadef2e4.2c446","type":"http in","z":"377839f3.494686","name":"","url":"/z/enroll2020","method":"get","upload":true,"swaggerDoc":"","x":160,"y":80,"wires":[["7f2adc7c.199a74"]]},{"id":"7f2adc7c.199a74","type":"template","z":"377839f3.494686","name":"Upload form","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<html>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/purecss@1.0.0/build/pure-min.css\" integrity=\"sha384-nn4HPE8lTHyVtfCBi5yW9d20FjT8BJwUXyWZT9InLYax14RDjBj46LmSztkmNP9w\" crossorigin=\"anonymous\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Secure Mobile zCapture</title>\n    <table><tr><td align=center>\n    <h1>Secure Mobile zCapture</h1>\n    <form action=\"\" method=\"post\" enctype=\"multipart/form-data\">\n        <br><b>Name:</b> {{payload.name}}\n        <br><b>ID:</b> <input readonly type=\"text\" name=\"reservation\" id=\"reservation\" value=\"****SECURED****\">\n        <br><b>Carrier:</b> <select name=\"carrier\" id=\"carrier\"><option value=\"BCBSMI\">BCBS Michigan</option><option value=\"UHCGA\">United Healthcare of Georgia</option><option value=\"BCAGA\">BC Anthem of Georgia</option></select>\n        <br><b>Front:</b> <input type=\"file\" name=\"photo\" accept=\"image/*\" capture0>\n        <br><b>Back:</b> <input type=\"file\" name=\"photoBack\" accept=\"image/*\" capture0>\n        <br><input type=\"submit\" value=\"Encrypt and Send\">\n    </form>\n    </td></tr>\n    </table>\n    <img width=\"400\" src=\"https://www.columbiabank.com/images/default-source/default-album/mobile_capture.jpg\">\n    <script>\ndocument.getElementsByTagName(\"BODY\")[0].style.backgroundColor=\"#C6E1FF\"; //ERS161206\nif(\"{{payload.reservation}}\"!=\"\") document.getElementById(\"reservation\").value=\"{{payload.reservation}}\"; //ERS180915\nvar sfID=\"URL=\"+document.location;\nif (navigator.userAgent.toLowerCase().indexOf(\"mobile\")==-1) {\n   var loc=\"https://edge.zpaper.com/kb/views/phoneFrame/index.html#\"+sfID;\n   document.write(\"<li>mobile <a href='\"+loc+\"'>preview</a>\");\n} else if (1==0) alert(\"navigator=\"+navigator.userAgent);\n</script>\n</html>","output":"str","x":350,"y":80,"wires":[["66f57240.543dac"]]},{"id":"247eefd1.35489","type":"file","z":"377839f3.494686","name":"save photo file","filename":"zcard.jpg","appendNewline":false,"createDir":true,"overwriteFile":"true","x":780,"y":181,"wires":[[]],"inputLabels":["msg.req.files[0].buffer"]},{"id":"d4d00ad.24f03f8","type":"template","z":"377839f3.494686","name":"Upload Thanks!","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<h2>Thanks</h2>\n<img width=\"200\" \n    src=\"shrink/{{{req.files.0.mimetype}}}/200/zcard.jpg\"\n    src0=\"shrink/{{{req.files.0.mimetype}}}/200/{{{req.files.0.originalname}}}\"\n    \n>\n</br>\n<img width=\"200\" \n    src=\"shrink/{{{req.files.0.mimetype}}}/200/zcardBack.jpg\"\n    src0=\"shrink/{{{req.files.0.mimetype}}}/200/{{{req.files.0.originalname}}}\"\n    \n>","output":"str","x":560,"y":141,"wires":[["b83f9f22.6089e"]]},{"id":"b83f9f22.6089e","type":"http response","z":"377839f3.494686","name":"","statusCode":"","headers":{},"x":750,"y":141,"wires":[]},{"id":"d31c4acd.0a0358","type":"debug","z":"377839f3.494686","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"req","x":380,"y":120,"wires":[]},{"id":"14e8d100.81788f","type":"dml","z":"377839f3.494686","name":"update Case","object":"","action":"insert","connection":"","x":770,"y":621,"wires":[[]]},{"id":"1f41efb2.4aeb","type":"zAction","z":"377839f3.494686","name":"Create/Update a Case and attachments","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":620,"y":561,"wires":[["14e8d100.81788f","6cc986cf.54af18","4e1ba27b.d9ca0c"]]},{"id":"6cc986cf.54af18","type":"dml","z":"377839f3.494686","name":"attach photo","object":"","action":"insert","connection":"","x":770,"y":661,"wires":[[]]},{"id":"4e1ba27b.d9ca0c","type":"dml","z":"377839f3.494686","name":"attach zPDF with metadata","object":"","action":"insert","connection":"","x":820,"y":701,"wires":[[]]},{"id":"49fc3cd7.1215f4","type":"zItem","z":"377839f3.494686","name":"Insurance card template","link":"","sftype":"","format":"text","template":"","x":770,"y":461,"wires":[[]]},{"id":"14f4b227.116a1e","type":"zStack","z":"377839f3.494686","name":"","link":"https://www.zpaper.com/products","format":"text","template":"","x":370,"y":561,"wires":[["1f41efb2.4aeb"]]},{"id":"5cef0c04.7269d4","type":"zItem","z":"377839f3.494686","name":"zSend uploaded photo","link":"","sftype":"","format":"text","template":"","x":180,"y":481,"wires":[["f849f760.ac90b8"]]},{"id":"f849f760.ac90b8","type":"zAction","z":"377839f3.494686","name":"search templates","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":410,"y":461,"wires":[["49fc3cd7.1215f4","6a4d544.fe53bac","fd404207.5cfe6"]]},{"id":"6a4d544.fe53bac","type":"file","z":"377839f3.494686","name":"newPDF","filename":"uploadedFile.pdf","appendNewline":true,"createDir":true,"overwriteFile":"true","x":720,"y":501,"wires":[[]],"inputLabels":["msg.req.files[0].buffer"]},{"id":"fd404207.5cfe6","type":"zAction","z":"377839f3.494686","name":"get card data","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":490,"y":501,"wires":[["dfba1ced.16094"]]},{"id":"dcb4a24e.c3dce","type":"change","z":"377839f3.494686","name":"maxwidth+filename","rules":[{"t":"set","p":"maxwidth","pt":"msg","to":"req.params.size","tot":"msg"},{"t":"set","p":"filename","pt":"msg","to":"req.params.file","tot":"msg"},{"t":"set","p":"headers.mimetype","pt":"msg","to":"req.params.mime & \"/\" & req.params.type","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":490,"y":300,"wires":[["2b1a32e5.cd255e"]]},{"id":"18a2d273.93a30e","type":"http response","z":"377839f3.494686","name":"","statusCode":"","headers":{},"x":790,"y":340,"wires":[]},{"id":"c5692e03.390f3","type":"http in","z":"377839f3.494686","name":"","url":"/z/shrink2020/:mime/:type/:size/:file","method":"get","upload":false,"swaggerDoc":"f80d9d65.4d239","x":190,"y":300,"wires":[["dcb4a24e.c3dce"]]},{"id":"95480091.71dc6","type":"change","z":"377839f3.494686","name":"frontCard","rules":[{"t":"set","p":"filename","pt":"msg","to":"req.files[0].originalname","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"req.files[0].buffer","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":380,"y":181,"wires":[["247eefd1.35489","c2b73461.569168","f2f672fc.c686f"]],"outputLabels":["files"]},{"id":"cc2e0138.51e13","type":"zComment","z":"377839f3.494686","name":"Jimp code to resize image (TBD)","link":"","info":"```\n// NPM module exposed as variable, npm_module\nvar jimp = npm_module;\nvar fname = msg.filename;\nvar width = msg.maxwidth;\n\njimp.read(fname, function(error, image) {\n    if (error) {\n        console.log(\"Image:\", error);\n        return null;\n    }\n    console.log(\"Image size: \", image.bitmap.width + \"x\" + image.bitmap.height);\n    image.resize(width, jimp.AUTO, function(error, thumb) {\n        if (error) {\n            console.log(\"Resize:\", error);\n            return null;\n        }\n        console.log(\"Thumb size: \", thumb.bitmap.width + \"x\" + thumb.bitmap.height);\n        thumb.getBuffer(jimp.AUTO, function(error, buff) {\n            if (error) {\n                console.log(\"Buffer:\", error);\n                return null;\n            }\n            console.log(\"bytes = \", buff.length);\n            msg.payload = buff;\n            send(msg);\n        });\n    });\n});\n```","x":350,"y":340,"wires":[]},{"id":"2b1a32e5.cd255e","type":"file in","z":"377839f3.494686","name":"get photo buffer","filename":"","format":"","chunk":false,"sendError":false,"x":600,"y":340,"wires":[["18a2d273.93a30e","468dcd44.2c8c44"]]},{"id":"468dcd44.2c8c44","type":"debug","z":"377839f3.494686","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":770,"y":300,"wires":[]},{"id":"df9c7d64.37cbb","type":"zComment","z":"377839f3.494686","name":"zExtract the data","link":"https://files.slack.com/files-pri/T89D2H2UT-FBSQVRUM8/image.png","info":"Recognizing text and logo [data with OCR](https://files.slack.com/files-pri/T89D2H2UT-FBSQVRUM8/image.png)\n![data with OCR](https://files.slack.com/files-pri/T89D2H2UT-FBSQVRUM8/image.png)","x":880,"y":501,"wires":[]},{"id":"879e2c3d.98031","type":"zComment","z":"377839f3.494686","name":"Get started","link":"https://reddev.zpaper.com/red/z/enroll2020","info":"Demo from a desktop or mobile device.\n - [ ] Need to put a version in a mobile mockup.\n - [ ] Create a secure link\n - [ ] read UnitedHealthcare barcodes\n - [x] Simple browser [test](https://reddev.zpaper.com/red/z/enroll2020)","x":130,"y":41,"wires":[]},{"id":"43580237.71a68c","type":"function","z":"377839f3.494686","name":"Merge with data from template","func":"msg.payload = JSON.stringify({\n    \"page_url\": \"https://s3.amazonaws.com/zocr/patrick-insurance.jpg\",\n    \"page_id\": \"patrick-insurance\"\n});\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":901,"wires":[["25ef3dc3.2cf432"]]},{"id":"25ef3dc3.2cf432","type":"AWS Lambda","z":"377839f3.494686","aws":"","operation":"Invoke","FunctionName":"zOCR-PDF","StatementId":"","Action":"","Principal":"","Name":"","FunctionVersion":"","EventSourceArn":"","Runtime":"","Role":"","Handler":"","Code":"","UUID":"","InvokeArgs":"123","Resource":"","ReservedConcurrentExecutions":"","Tags":"","TagKeys":"","name":"OCR to PDF","x":490,"y":861,"wires":[["a064d3ac.044cc"],[]]},{"id":"50598c6e.8ca804","type":"debug","z":"377839f3.494686","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":810,"y":861,"wires":[]},{"id":"a064d3ac.044cc","type":"function","z":"377839f3.494686","name":"Decode from string","func":"msg.payload = JSON.parse(msg.payload.Payload);\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":901,"wires":[["50598c6e.8ca804"]]},{"id":"2cce59ba.ba2e36","type":"inject","z":"377839f3.494686","name":"create PDF from JPG","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":180,"y":861,"wires":[["43580237.71a68c"]]},{"id":"f2f672fc.c686f","type":"function","z":"377839f3.494686","name":"send URL to zExtract","func":"msg.payload = JSON.stringify({\n    \"page_url0\": \"https://s3.amazonaws.com/zocr/patrick-insurance.jpg\",\n    \"page_id0\": \"patrick-insurance\",\n    \"page_url\": \"https://reddev.zpaper.com/red/z/shrink2020/image/jpeg/200/zcard.jpg\",\n    \"page_id\": \"zcard-insurance\",\n    \"page_urlBack\": \"https://reddev.zpaper.com/red/z/shrink2020/image/jpeg/200/zcardBack.jpg\",\n    \"page_idBack\": \"zcard-insuranceBack\"\n});\nreturn msg;","outputs":1,"noerr":0,"x":500,"y":241,"wires":[["7cb93b4.dfe40c4"]]},{"id":"7cb93b4.dfe40c4","type":"AWS Lambda","z":"377839f3.494686","aws":"","operation":"Invoke","FunctionName":"zOCR-PDF","StatementId":"","Action":"","Principal":"","Name":"","FunctionVersion":"","EventSourceArn":"","Runtime":"","Role":"","Handler":"","Code":"","UUID":"","InvokeArgs":"123","Resource":"","ReservedConcurrentExecutions":"","Tags":"","TagKeys":"","name":"OCR to PDF","x":150,"y":422,"wires":[["6b779dec.74f424","994c74d9.4a9198"],[]]},{"id":"994c74d9.4a9198","type":"debug","z":"377839f3.494686","name":"S3 PDF URL","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":350,"y":381,"wires":[]},{"id":"6b779dec.74f424","type":"function","z":"377839f3.494686","name":"recode for zippi","func":"msg.payload = JSON.parse(msg.payload.Payload);\nmsg.headers={'content-type':'application/x-www-form-urlencoded'};\nmsg.payload={\n    'orgFax':'18553433802',\n    'znode':'zenroll',\n    'fileURL':msg.payload.url\n}\nreturn msg;","outputs":1,"noerr":0,"x":340,"y":422,"wires":[["dfba1ced.16094"]]},{"id":"c2b73461.569168","type":"debug","z":"377839f3.494686","name":"photoFile","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":740,"y":241,"wires":[]},{"id":"dfba1ced.16094","type":"http request","z":"377839f3.494686","name":"/zippi/item (PDF)","method":"POST","ret":"txt","url":"https://edge.zpaper.com/kb/jsp/zippiUpload.jsp","tls":"","x":170,"y":561,"wires":[["14f4b227.116a1e","871005fb.918a48"]]},{"id":"ae40ef66.ed51c","type":"inject","z":"377839f3.494686","name":"recent jpg","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":240,"y":241,"wires":[["f2f672fc.c686f"]]},{"id":"cccca97a.9ff798","type":"zComment","z":"377839f3.494686","name":"zSMS secure link to Patient","link":"","info":"- Contact in SF\n- HealthCloud lightning action\n- zRedirect.jsp to save /red/z/enroll?Name=George Burdell&Registration=ContactId\n- Action sendSMS to Contact.mobile with msg that includes short https://qa01.zpaper.com/kb/zzz/shu87874328","x":340,"y":41,"wires":[]},{"id":"c0529345.fd75c","type":"zAction","z":"377839f3.494686","name":"Secure SMS","func":"//ERS180920 #51935 text secure link and capture new insurance card\n//TODO name and phone needed\nvar contactName=\"George P Burdell\";\nvar n=1;\nalert(\"calling the secure zSMS method\");\nvar sfId=X(doc, \"X_attachedTo\");\nsfId=sfId.substring(1+sfId.lastIndexOf(\"/\"));\nvar link=\"https://reddev.zpaper.com/red/z/enroll?name=\"+contactName+\"%26reservation=\"+sfId;\n/* TODO call zRedirect.jsp to get short URL */\nvar results=wget(doc, \"https://qa01.zpaper.com/kb/jsp/zRedirect.jsp?save=\"+link);\nvar i=results.indexOf(\"URL\");\nif (i>-1 && results.indexOf(\"ERROR\")==-1){\n    link=results.substring(i+6,results.length()-3);\n    link=link.replace(\"localhost:8080\",\"qa01.zpaper.com\").replace(\":8080\",\"\").replace(\"http:\",\"https:\");\n /*body might be a sfID:communicationTemplateId someday*/\n    var to=X(doc,\"X_invitePhone\"+n);\n    if (to===\"\") to=\"7703095554\";\n    var from=\"+15712972737\";\n    body=\"Securely update your insurance card using \" + link;\n    alert(\"SMS with \"+body);\n    if (1==1) sendSMS(doc, from, to, body);\n    track(doc, \"INVITE.ZENROLL\", \"zEnroll \"+contactName+\" at \"+to, 1);\n}","active":true,"button":"","outputs":1,"noerr":0,"x":570,"y":41,"wires":[["683b815.3484e8"]]},{"id":"683b815.3484e8","type":"twilio out","z":"377839f3.494686","twilioType":"sms","url":"","number":"","name":"","x":740,"y":41,"wires":[]},{"id":"77c4d162.b36de","type":"file","z":"377839f3.494686","name":"save back","filename":"zcardBack.jpg","appendNewline":false,"createDir":true,"overwriteFile":"true","x":940,"y":201,"wires":[[]],"inputLabels":["msg.req.files[0].buffer"]},{"id":"d58a4f9.3291bb","type":"change","z":"377839f3.494686","name":"backFile","rules":[{"t":"set","p":"filename","pt":"msg","to":"req.files[1].originalname","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"req.files[1].buffer","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":180,"y":201,"wires":[["77c4d162.b36de"]],"outputLabels":["files"]},{"id":"871005fb.918a48","type":"debug","z":"377839f3.494686","name":"uploadResults","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":350,"y":641,"wires":[]},{"id":"a9b9d02.9c5663","type":"zComment","z":"377839f3.494686","name":"TODO /zippi/","link":"","info":"","x":170,"y":600,"wires":[]},{"id":"e83c96cb.865548","type":"zAction","z":"e8179419.0b9718","name":"Create Stack from Fax","func":"//ERS170804 docType by OCR\nvar keywords=[\"REG:Regulation~\",\"REF:REFERRAL\",\"REF:Referral\",\"PAPP:Patient Assistance\",\"PAUTH:Prior~ Authorization~\",\"ENRL:Enrollment~\",\"FAX:\"];\n\n//ERS171012 keywords for demo\nkeywords=[\"ENRL:Enrollment~\",\"CON:Consent~\",\"CON:consent~\",\"PAPP:Patient Assistance\",\"PAUTH:Prior~ Authorization~\",\"REG:Regulation~\",\"REF:REFERRAL\",\"REF:Referral\",\"FAX:\"];\n\nzData.docTypeOCR=zData.docTyper(doc,keywords); //ERS171012 TODO missing for MP\n//zData.docTypeOCR=zData.docTyper(doc,{\"REG\":\"Regulation~\",\"PAPP\":\"Patient~ Assistance~\",\"PAUTH\":\"Prior~ Authorization~\",\"ENRL\":\"Enrollment~\",\"FAX\":\"\"});\nalert(\"docType was \"+doc.docType+\" now \"+ zData.docTypeOCR);\nvar zType=doc.X(\"X_docType\");\nif (doc.docType != zData.docTypeOCR) {\n    var arrOfPairs0 = [];\n    arrOfPairs0.push(\"X_docTypeOCR\",zData.docTypeOCR);\n\tarrOfPairs0.push(\"X_docType\",zData.docTypeOCR);\n    zType=zData.docTypeOCR; //ERS170330 saved below into SF faxType__c field\n    updateDB(doc, arrOfPairs0);\n}\n\nzData.setbrandprogram(doc); //who and where\n\nvar formatNow = getCurDateAndTime(doc);\nvar arrOfPairs = [];\nvar zp=\"ZPAPER__\"; //ERS170626 now in the package\nvar zStack=zp+\"zStack__c\"; //\"Stack__c\"\narrOfPairs.push(zp+\"faxType__c\", zType);\narrOfPairs.push(zp+\"Status__c\", \"New Stack\");\narrOfPairs.push(zp+\"Channel__c\", \"Fax\");\narrOfPairs.push(zp+\"latestFax__c\", formatNow);\narrOfPairs.push(zp+\"receivedId__c\", doc.dbID);\narrOfPairs.push(zp+\"newFax__c\", \"true\");\narrOfPairs.push(zp+\"Pages__c\", X(doc, \"X_pages\"));\nif (zData.patEnrollQueueId) arrOfPairs.push(\"OwnerId\",zData.patEnrollQueueId);\nif (zData.programName === \"zCharta\") {\n\tarrOfPairs.push(zp+\"Priority__c\", \"Urgent\");\n}\nelse {\n\tarrOfPairs.push(zp+\"Priority__c\", \"Medium\");\n}\narrOfPairs.push(zp+\"Program_Name__c\", zData.programName);\narrOfPairs.push(zp+\"sentFaxTo__c\",doc.deliveredTo); //ERS170628 caller id\narrOfPairs.push(zp+\"From__c\",doc.deliveredFrom);\narrOfPairs.push(zp+\"Stage__c\", \"Received\"); //ERS170731 #40593\n\nvar sfId = createAndAttach(doc, zStack, \"New Stack received on \" + formatNow, arrOfPairs);\nalert(\"#### Stack Received. Attached to: \" + sfId);\narrOfPairs = [];\narrOfPairs.push(\"db-label\", \"New Stack received on \" + formatNow);\narrOfPairs.push(\"db-BATES\", sfId + \"-STACK\");\narrOfPairs.push(\"X_sfStackId\",sfId); //ERS170727 #40447\nif (1===1) { //ERS180103 set as Received #41155\n    var ba=\"Received\";\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by agent at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc, arrOfPairs);\n /* END */","active":true,"button":"","outputs":1,"noerr":0,"x":320,"y":60,"wires":[["48393155.f45eb","269bb10e.15f14e","169f2150.75db9f","ebbd28a9.9e4628","aa216e7f.9b79f","f010b5f9.e1e798"]]},{"id":"48393155.f45eb","type":"zAction","z":"e8179419.0b9718","name":"zStack Library","func":"//global variables\n\n\nzData.patEnrollQueueId = \"\"; \n\nzData.programName = \"\";\n\n//CRN170324 TODO doc.clone() done right;\nzData.clone=function(doc) {\n   var doc0=[];\n   for (var i in doc) doc0[i]=doc[i];\n   return doc0;\n}\n\nzData.setbrandprogram = function(doc) {\n    alert(\"+++ STARTING zData.setbrandprogram +++\");\n    alert(\"@@@ doc.deliveredTo = \" + doc.deliveredTo);\n    if (doc.deliveredTo.indexOf(\"6782356995\")>-1) { //ERS70421 indexOf is safer #36411\n        zData.programName = \"zCharta\";\n        zData.patEnrollQueueId = \"00Gf4000000VnBEEA0\";\n    } else if (doc.deliveredTo.indexOf(\"6787270123\")>-1) {\n        zData.programName = \"zPapyrus\";\n        zData.patEnrollQueueId = \"00Gf4000000VnBJEA0\";\n    } \n    alert(\"+++ ENDING zData.setbrandprogram +++\");\n    alert(\"@@@ zData.programName = \" + zData.programName);\n  \n}\n\n/* This function needs to be added to every rule to help assure that rules do not get accidentally triggered */\n/* Add this functionality to the rules engine itself? */\nzData.clearTriggerCondition=function(doc,triggerField) {  //ERS170512 moved to library\n  var arrOfPairs = [];\n  arrOfPairs.push(triggerField, \"\");\n  updateDB(doc,arrOfPairs);\n}\n\nzData.initializeStack=function(doc,stackFolder,stackId) { //ERS170512 moved to library\n  var arrOfPairs = [];\n  var today = new Date();\n  var curMonth = today.getMonth() + 1;\n  var finalRootFolder = zData.programName+\"-Archive\"; //bates of the Archive folder\n  var yyyyMMFolderName = today.getFullYear() + (curMonth > 9 ? curMonth+\"\" : \"0\"+curMonth);\n  var yyyyMMFolder = finalRootFolder + \"-\" + yyyyMMFolderName;\n  alert(\"@@@ stackFolder is - \" + stackFolder);\n  alert(\"@@@ finalRootFolder is - \" + finalRootFolder);\n  alert(\"@@@ yyMMFolder is - \" + yyyyMMFolder);\n  alert(\"@@@ creating new stack destination folder with name - \" + stackFolder);\n  /* Refresh the current folder */\n  reloadById(doc, X(doc,\"X_curFolder\"));\n  /* same value for BATES and label */\n  /* The folder structure will look like this: /201608/3CX3CX/123456789-STACK */\n  createFolder(doc, finalRootFolder, yyyyMMFolder, yyyyMMFolderName);\n  createFolder(doc, yyyyMMFolder, stackFolder, stackFolder);\n  alert(\"@@@@ Moving the stack document into the stack folder: \" + stackFolder);\n  moveDocument(doc,\"\",stackFolder);\n  arrOfPairs.push(\"X_indexInitialized\", \"true\");\n  arrOfPairs.push(\"X_stack\", stackId);\n  arrOfPairs.push(\"db-BATES\", doc.kbData.groupID.substring(1) + \"-\" + stackId + \"-STACK\");\n  /* Stack Labelling Change */\n  var dtStamp = getCurDateAndTime(doc, false);\n  /* arrOfPairs.push(\"db-label\",\"Stack - \" + dtStamp); */\n  updateDB(doc,arrOfPairs);\n}\n\nzData.countPages=function(doc,pageRange) {  //ERS170512 moved to library\n  var pages = pageRange.split(\",\");\n  if (!pages) pages=[pageRange];\n  return pages.length + \"\";\n}\n\n/* END */","active":true,"button":"","outputs":1,"noerr":0,"x":576,"y":60,"wires":[[]]},{"id":"269bb10e.15f14e","type":"zAction","z":"e8179419.0b9718","name":"zPaper OCR Library","func":"//ERS170328 use OCRed text to identify document type especially when no barcodes\nzData.docTyper=function(doc,keywords) {\n    var keywords2=keywords;\n    if (!keywords && zData.keywords) keywords2=zData.keywords;\n    if (!keywords) keywords2=[\"REF:REFERRAL\",\"REF:Referral\",\"PAPP:Patient Assistance\",\"PAUTH:Prior~ Authorization~\",\"ENRL:Enrollment~\",\"FAX:\"];\n\n    //alert(\"keywords2.length=\"+keywords2.length);\n    //alert(\"keywords2 = \"+keywords2[0]+\",\"+keywords2[1]+\",\"+keywords2[\"REF\"]);\n    zData.keywords=keywords2;\n    \n    for (var k in keywords2) {\n        var parts=keywords2[k].split(\":\");\n        var term=parts[1];\n        alert(\"OCR still searching \"+term + \" a \"+ parts[0]);\n        if (searchIndex(doc,doc.dbID,term).indexOf(doc.dbID)>-1) return parts[0];\n    }\n    \n    return \"FAX\";\n}","active":true,"button":"","outputs":1,"noerr":0,"x":594,"y":92,"wires":[[]]},{"id":"5b4fcc6c.7fa704","type":"zAction","z":"e8179419.0b9718","name":"Index Page","func":"alert(\"@@@@ Index Rule Fired @@@#\");\n/* double-quote, newline characters */\nvar dq = String.fromCharCode(34);\nvar nl = String.fromCharCode(10);\nvar formatNow=getCurDateAndTime(doc);\n\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\n// Does the user want to attach indexed pages to Case?\nvar caseId = X(doc, \"X_ZPAPER__Case__c\");\nvar contactId = X(doc, \"X_ZPAPER__Patient__c\");\nvar patientId=contactId; //TODO\nvar providerId = X(doc, \"X_ZPAPER__Provider__c\");\nvar patientFirstName = X(doc, \"X_ZPAPER__FirstName__c\");\nvar patientLastName = X(doc, \"X_ZPAPER__LastName__c\");\nvar patientDOB = X(doc, \"X_ZPAPER__Birthdate__c\");\n//CRN180214 Judson wants this to be part of the attachment label\nvar faxType = X(doc, \"X_ZPAPER__faxType__c\");\n// Get the document type (will be used to route to next folder)\nvar docType = X(doc, \"X_Document_Type__c\");\nvar nextFolder = \"20500Triage-S2\";\t\t\t\t// Other folder is the default\nvar prevIndexPages = X(doc, \"X_indexedPages\");\nvar curIndexPages = X(doc, \"X_idxPages\");\nif (prevIndexPages && prevIndexPages.length > 0 && curIndexPages && curIndexPages.length > 0) {\n\tprevIndexPages += \",\";\n}\ncurIndexPages = prevIndexPages + curIndexPages;\nvar arrOfPairs = [];\narrOfPairs.push(\"X_indexedPages\", curIndexPages);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    if (!ba.endsWith(\"ed\") && ba !== \"\") { ba+=\"ed\"; } //ERS180103 #41155\n    if (ba !== \"\") { //ERS180103 #41155\n        var now0 = getCurDateAndTime(doc,false,true);\n        arrOfPairs.push(\"X_reviewedStatus\",ba);\n        arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n        arrOfPairs.push(\"X_buttonAction\",\"\");\n    }\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\");\nif (sfStackId ===\"\") { //ERS170731 #40593\n    X(doc,\"X_attachedTo\");\n    if (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n    }\n}\nvar attachPath = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ Currently attached to ZPAPER__zStack__c with ID: \" + sfStackId);\n\n/* SPLIT OFF NEW SNIPPET HERE */\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"index\", pageRange);\nalert(\"Case '\"+caseId+\"' and len=\"+caseId.length);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* Attach the split document to a new Case record, if it wasn't passed in */\nvar priority=X(doc,\"X_ZPAPER__Priority__c\"); //ERS170626\nvar label0=\"\";\nvar triageType=doc.docType;\nvar patientName;\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\t\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, contactId);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, ctcArrOfPairs);\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//JPB180215 now attach to stack record\nattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, sfStackId);\n\n\nif (!caseId || 0 === caseId.length) {\n\talert(\"@@@@ creating new Case\");\n\tarrOfPairs = [];\n\t//ERS170520 arrOfPairs.push(\"OwnerId\", queuesMapKludge[X(doc,\"X_Assign_to_Queue__c\")]);\n\tarrOfPairs.push(\"ContactId\", contactId);\n\tarrOfPairs.push(\"ZPAPER__newFax__c\", \"true\"); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__latestFax__c\", formatNow); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__receivedId__c\", doc.dbID); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"Status\", X(doc,\"X_Status\"));\n\tarrOfPairs.push(\"Type\", \"New Fax\"); //JPB 170512 added these workflow fields\n\tif (1==1) { //ERS170523 #37162 after dryrun\n\t\t//arrOfPairs.push(\"RecordTypeId\",\"012Q00000005Ahj\"); //ERS170523 Prior Auth\n\t\tif (priority != \"Normal\") arrOfPairs.push(\"Priority\",priority);  //ERS170524 #37162 priority on Case\n\t\telse arrOfPairs.push(\"Priority\",\"Medium\");\n\t\tarrOfPairs.push(\"Origin\",\"Fax\");\n\t}\n\t//name=\"X_ZPAPER__Patient__c\"\n\t//name=\"X_ZPAPER__FirstName__c\"\n\t//name=\"X_ZPAPER__LastName__c\"\n\tvar caseId = createAndAttach(doc, \"Case\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, arrOfPairs);\n\talert(\"Created Case with ID: \" + caseId);\n\tif (caseId == \"null\" || caseId == \"NEW\") caseId=null; //ERS170621 TODO need a standard\n}\nelse {\n\talert(\"@@@@ attaching to existing Case: \" + caseId);\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, caseId);\n}\nif (attachPath.indexOf(caseId)==-1) attachPath+=\",\"+caseId;\n\narrOfPairs = [];\nif (providerId && providerId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Provider__c\", providerId);\n\tif (attachPath.indexOf(providerId)==-1) attachPath+=\",\"+providerId;\n}\nif (patientId && patientId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Patient__c\", patientId);\n\tif (attachPath.indexOf(patientId)==-1) attachPath+=\",\"+patientId;\n}\nif (caseId && caseId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Case__c\", caseId);\n}\nupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\nattach(doc, \"Indexed-\"+formatNow+\"-\"+triageType, sfStackId);\nalert(\"@@@@ updated and attached to zStack Record, id = \" + sfStackId);\n\nif (1===0) { //ERS170627 TODO refactor\n    //CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\n    var provider = X(doc, \"X_Primary_Care_Physician__c\");\n    if (contactId && contactId.length > 0 && provider && provider.length > 0) {\n    \tarrOfPairs = [];\n    \tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n    \tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n    }\n}\n\nunlockDocument(doc);\n\narrOfPairs = [];\n//ERS170909 arrOfPairs.push(\"X_reviewedStatus\", \"Indexed\");\nif (1===1 && 1===0) { //ERS170909 #40592 for zDocSet statuses //ERS180103 #41155 set above\n//    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n//    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n//    var now0 = getCurDateAndTime(doc,false,true);\n//    arrOfPairs.push(\"X_reviewedStatus\",ba);\n//    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = zData.countPages(doc,pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (!patientFirstName || 0 == patientFirstName.length) { patientFirstName = \"Unknown\"; }\nif (!patientLastName || 0 == patientLastName.length) { patientLastName = \"Name\"; }\narrOfPairs.push(\"db-label\", patientFirstName + patientLastName + \" - \" + companyCode + \" - \" + stackId);\narrOfPairs.push(\"X_docType\",faxType); //JPB180215 changed doctype and faxtype name\narrOfPairs.push(\"X_attachedTo\",attachPath); //ERS170628\nupdateDB(doc,arrOfPairs);\n\ntrack(doc, \"Doc Indexed \", \"Document with Id: \" + doc.dbID, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ready~);updateDEStatus(~indexed:\" + pageRange + \"~);\");\n\n/* end of rule */","active":true,"button":"Index","outputs":1,"noerr":0,"x":434,"y":563,"wires":[["eb9e8275.c8a46"]]},{"id":"c0b5217b.0210a","type":"zAction","z":"e8179419.0b9718","name":"Reject Page","func":"alert(\"@@@@ Reject Page Rule Fired @@@#\");\n\nfunction countPages(pageRange) {\n  var pages = pageRange.split(\",\");\n  return pages.length + \"\";\n}\n\nvar caseId = null;\nvar stackId = X(doc, \"X_stack\");\nvar contactId = X(doc, \"X_Patient__c\");\nvar patientFirstName = X(doc, \"X_Labeler_Patient_First_Name__c\");\nvar patientLastName = X(doc, \"X_Labeler_Patient_Last_Name__c\");\nvar patientDOB = X(doc, \"X_Labeler_Patient_DoB__c\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 see X_reviews work zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_rejectedPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_rejectedPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"reject\", pageRange);\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = countPages(pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\nupdateDB(doc,arrOfPairs);\n\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\tattach(doc, \"Rejected-\" + stackId, contactId);\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", \"Rejected-\" + stackId, ctcArrOfPairs);\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\nvar providerFirstName = \"\";\nvar providerLastName = \"\";\nvar provider = X(doc, \"X_Primary_Care_Physician__c\");\nif (provider && provider.length > 0) {\n\tvar providerFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, provider);\n\tproviderFirstName = X(doc, \"FirstName\", providerFlds);\n\tproviderLastName = X(doc, \"LastName\", providerFlds);\n}\nif (1===0) { //ERS170909 #40592 not standard\n/*\nif (contactId && contactId.length > 0 && provider && provider.length > 0) {\n\tarrOfPairs = [];\n\tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n\tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n} */\n}\n\narrOfPairs = [];\narrOfPairs.push(\"Status\", \"New\");\narrOfPairs.push(\"Origin\", \"Fax\");\narrOfPairs.push(\"Description\", doc.kbData.comments);\narrOfPairs.push(\"Subject\", \"Document Rejected\");\nif (1===0) { //ERS170909 #40592 not standard\n/*    arrOfPairs.push(\"Notes__c\", doc.kbData.comments);\n    arrOfPairs.push(\"Provider_First_Name__c\", providerFirstName);\n    arrOfPairs.push(\"Provider_Last_Name__c\", providerLastName);*/\n}\nalert(\"@@@@@@@ SETTING ContactId on Case creation? \" + contactId);\nif (contactId && contactId.length > 0) {\n\tarrOfPairs.push(\"ContactId\", contactId);\n}\ncaseId = createAndAttach(doc, \"Case\", \"Rejected-\" + stackId, arrOfPairs);\nalert(\"@@@@@ caseId for Rejecton: \" + caseId);\nif (caseId && caseId.length > 0) {\n\tarrOfPairs = [];\n\tif (contactId && contactId.length > 0) {\n\t\tarrOfPairs.push(\"WhoId\", contactId);\n\t}\n\tarrOfPairs.push(\"WhatId\", caseId);\n\tarrOfPairs.push(\"Subject\", \"Incoming Document Rejected\");\n\tarrOfPairs.push(\"Status\", \"In Progress\");\n\tvar sfId = createAndAttach(doc, \"Task\", \"Rejected-\" + stackId, arrOfPairs);\n}\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the rejected pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"rejected\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~rejected~);updateDEStatus(~rejected:\" + pageRange + \"~);\");\n\n/* end of rule */\n\n","active":true,"button":"Reject","outputs":1,"noerr":0,"x":837,"y":688,"wires":[[]]},{"id":"ab3e2a61.ddd748","type":"zAction","z":"e8179419.0b9718","name":"Stack Complete","func":"alert(\"@@@@ Stack Complete Rule Fired @@@#\");\n\n/* Clear the trigger that invoked this rule */\nvar arrOfPairs = [];\narrOfPairs.push(\"X_buttonAction\", \"\");\narrOfPairs.push(\"X_triageStatus\", \"Complete\");\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\".replace(\"Completeed\",\"Completed\");\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\"); //ERS170727 #40447\n//CRN170626 Also save the status in the zStack record.\nif (sfStackId===\"\") sfStackId = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ COMPLETE STACK -- Currently attached to Stack__c with ID: \" + sfStackId);\nif (sfStackId && sfStackId.length > 0) {\n\tif (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n\t}\n}\nif (sfStackId && sfStackId.length > 0) {\n\tarrOfPairs = [];\n\t//arrOfPairs.push(\"Triage_Status__c\", \"Complete\");\n\tarrOfPairs.push(\"ZPAPER__Status__c\", \"Complete\");\n\tupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\n}\n\n\nvar companyCode = doc.deliveredTo;\nalert(\"##### COMPLETE STACK: companyCode = \" + companyCode);\nvar oldFolder = companyCode.indexOf(\"1306\") > 0 ? \"20500Triage-S1A\" : \"20500Triage-S1B\";\n\nalert(\"##### COMPLETE STACK: moving from oldFolder: \" + oldFolder);\nmoveDocument(doc,oldFolder,\"\");\nreloadByBATES(doc,oldFolder);\nunlockDocument(doc);\n\ntrack(doc, \"Stack completed\", doc.BATES, doc.numPages);\nhideDocument(doc);\n//CRN161005 Case #30173 Clear label bar when Stack is completed\naddPostExecutionScript(doc, \"; $('#recordLabel').html(''); $('#DEFormsList').hide(); $('#dataEntryDIV').hide();\");\n\n//AN20180220 attempting to jury rig this - THIS WORKS AS A FALLBACK - redirects to Home Page\n//addPostExecutionScript(doc, \"; window.location.href='https://zpaperpapdemo-dev-ed.lightning.force.com/';\");\n\n//AN20180220 redirect to the zStack to which this is attached\naddPostExecutionScript(doc, \"; window.location.href='\"+ X(doc,\"X_attachedTo\") + \"';\");\n\nalert(\"@@@@@@ doc.kbData.sfServer: \" + doc.kbData.sfServer);\n\n/* end of rule */\n","active":true,"button":"Stack Complete","outputs":1,"noerr":0,"x":843,"y":722,"wires":[["8906cf29.6b792"]]},{"id":"1a676ee4.be38b1","type":"zAction","z":"e8179419.0b9718","name":"Ignore Page","func":"alert(\"@@@@ Ignore Page Rule Fired @@@#\");\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\nzData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_ignoredPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_ignoredPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"ignore\", pageRange);\nalert(\"@@@ pageRange = \" + pageRange);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nalert(\"@@@ BEFORE CALL TO COUNTPAGES @@@\");\nvar pageCount = zData.countPages(doc, pageRange);  //CRN180102 Added missing zData reference\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nupdateDB(doc,arrOfPairs);\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the ignored pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"ignored\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ignored~);updateDEStatus(~ignored:\" + pageRange + \"~);\");\n/* end of rule */\n","active":true,"button":"Ignore","outputs":1,"noerr":0,"x":836,"y":654,"wires":[[]]},{"id":"169f2150.75db9f","type":"zAction","z":"e8179419.0b9718","name":"Priority Urgent set","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":584,"y":125,"wires":[[]]},{"id":"f010b5f9.e1e798","type":"zAction","z":"e8179419.0b9718","name":"Queue set by fax #","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":581,"y":220,"wires":[["4f68c354.7ee06c"]]},{"id":"4f68c354.7ee06c","type":"function","z":"e8179419.0b9718","name":"User triages zCharta documents in queue","func":"\nreturn msg;","outputs":1,"noerr":0,"x":658,"y":278,"wires":[["2c93d311.60419c"]]},{"id":"ebbd28a9.9e4628","type":"zAction","z":"e8179419.0b9718","name":"Set all required Stack attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":622,"y":156,"wires":[[]]},{"id":"2c93d311.60419c","type":"zAction","z":"e8179419.0b9718","name":"Select Triage Link","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1015,"y":278,"wires":[["915466ff.efb0c8"]]},{"id":"c207400a.91a91","type":"comment","z":"e8179419.0b9718","name":"Enrollment Keywords OCR","info":"","x":809,"y":92,"wires":[]},{"id":"915466ff.efb0c8","type":"zAction","z":"e8179419.0b9718","name":"Intake Triage Panel","func":"X_ZPAPER__Provider__r.Name $ZPAPER__Provider__r.Name$\nX_ZPAPER__Case__c $ZPAPER__zStack__c.ZPAPER__Case__c$\nX_ZPAPER__Patient__c $ZPAPER__zStack__c.ZPAPER__Patient__c$\nX_ZPAPER__Provider__c $ZPAPER__zStack__c.ZPAPER__Provider__c$\nX_ZPAPER__LastName__c $ZPAPER__zStack__c.ZPAPER__LastName__c$\nX_ZPAPER__Case__r.CaseNumber $ZPAPER__Case__r.CaseNumber$\nX_ZPAPER__faxType__c $ZPAPER__zStack__c.ZPAPER__faxType__c$\nX_ZPAPER__Birthdate__c $ZPAPER__zStack__c.ZPAPER__Birthdate__c$\nX_ZPAPER__Patient__r.Name $ZPAPER__Patient__r.Name$\nX_ZPAPER__Priority__c $ZPAPER__zStack__c.ZPAPER__Priority__c$\nX_ZPAPER__Classification__c $ZPAPER__zStack__c.ZPAPER__Classification__c$\nX_ZPAPER__FirstName__c $ZPAPER__zStack__c.ZPAPER__FirstName__c$\n","active":true,"button":"","outputs":1,"noerr":0,"x":145,"y":401,"wires":[["24e5b33a.4b274c","52a3cec9.231ee","c4206965.083ed8","127c87eb.6c6b98","5b4fcc6c.7fa704","dcc40b85.a1adf8","ea05c3c4.1a35a","f7793d93.86e85","38e32614.05057a","8f604082.2b44e","86367526.afba68","d2e73863.99bf38","6e1b2c01.931254","bc8cdade.19c788"]]},{"id":"d8e10717.8b2fc8","type":"comment","z":"e8179419.0b9718","name":"User captures zStack Attributes","info":"","x":162,"y":320,"wires":[]},{"id":"4d62ee0a.61f32","type":"zAction","z":"e8179419.0b9718","name":"New Enrollment Case created with initial docType selected","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1379,"y":1455,"wires":[["bc7cb5c4.3b4ae8"]]},{"id":"aa216e7f.9b79f","type":"zAction","z":"e8179419.0b9718","name":"zStack DocType set to Enrollment","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":630,"y":188,"wires":[[]]},{"id":"127c87eb.6c6b98","type":"zAction","z":"e8179419.0b9718","name":"docType selected (required)","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":483,"y":529,"wires":[["eb9e8275.c8a46"]]},{"id":"24e5b33a.4b274c","type":"soql","z":"e8179419.0b9718","name":"Existing Case lookup (optional)","query":"","connection":"","x":493,"y":430,"wires":[[]]},{"id":"52a3cec9.231ee","type":"soql","z":"e8179419.0b9718","name":"Existing Provider lookup Person Account record (optional)","query":"","connection":"","x":571,"y":463,"wires":[["eb9e8275.c8a46"]]},{"id":"c4206965.083ed8","type":"soql","z":"e8179419.0b9718","name":"Existing Patient lookup Contact record (required)","query":"","connection":"","x":543,"y":496,"wires":[["eb9e8275.c8a46"]]},{"id":"e4c722da.2a0ea","type":"soql","z":"e8179419.0b9718","name":"Firstname required","query":"","connection":"","x":690,"y":1372,"wires":[["f5e5bff6.95ec9"]]},{"id":"38e32614.05057a","type":"zAction","z":"e8179419.0b9718","name":"Create New Patient Split","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":457,"y":1408,"wires":[["e4c722da.2a0ea","2a0125ed.209d4a","24a1746d.625c5c"]]},{"id":"2a0125ed.209d4a","type":"soql","z":"e8179419.0b9718","name":"Lastname required","query":"","connection":"","x":690,"y":1404,"wires":[["f5e5bff6.95ec9"]]},{"id":"24a1746d.625c5c","type":"soql","z":"e8179419.0b9718","name":"DOB required","query":"","connection":"","x":682,"y":1437,"wires":[["f5e5bff6.95ec9"]]},{"id":"f5e5bff6.95ec9","type":"zAction","z":"e8179419.0b9718","name":"Create new patient (Contact record)","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1005,"y":1403,"wires":[["4d62ee0a.61f32"]]},{"id":"eb9e8275.c8a46","type":"zAction","z":"e8179419.0b9718","name":"New Enrollment Case created with initial docType selected","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1127,"y":512,"wires":[["d4c3d1c7.5dc38"]]},{"id":"dcc40b85.a1adf8","type":"zAction","z":"e8179419.0b9718","name":"Additional Indexed pages with attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":523,"y":596,"wires":[["d4c3d1c7.5dc38"]]},{"id":"d4c3d1c7.5dc38","type":"zAction","z":"e8179419.0b9718","name":"Additional indexed pages with docTypes attached to newly created case","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1183,"y":577,"wires":[[]]},{"id":"ea05c3c4.1a35a","type":"function","z":"e8179419.0b9718","name":"Selection of zAction buttons for per page indexing","func":"\nreturn msg;","outputs":1,"noerr":0,"x":539,"y":664,"wires":[["1a676ee4.be38b1","c0b5217b.0210a"]]},{"id":"f7793d93.86e85","type":"function","z":"e8179419.0b9718","name":"Once user indexes all pages they can complete index","func":"\nreturn msg;","outputs":1,"noerr":0,"x":548,"y":734,"wires":[["ab3e2a61.ddd748"]]},{"id":"8906cf29.6b792","type":"function","z":"e8179419.0b9718","name":"removes zStack record from queue to Stack Complete list view","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1243,"y":732,"wires":[[]]},{"id":"ba72fe.8ac43d","type":"comment","z":"e8179419.0b9718","name":"Look up existing Patient record","info":"","x":162,"y":285,"wires":[]},{"id":"1596f539.3e816b","type":"comment","z":"e8179419.0b9718","name":"Create new Patient record","info":"","x":165,"y":1366,"wires":[]},{"id":"86367526.afba68","type":"zAction","z":"e8179419.0b9718","name":"Index Page","func":"alert(\"@@@@ Index Rule Fired @@@#\");\n/* double-quote, newline characters */\nvar dq = String.fromCharCode(34);\nvar nl = String.fromCharCode(10);\nvar formatNow=getCurDateAndTime(doc);\n\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\n// Does the user want to attach indexed pages to Case?\nvar caseId = X(doc, \"X_ZPAPER__Case__c\");\nvar contactId = X(doc, \"X_ZPAPER__Patient__c\");\nvar patientId=contactId; //TODO\nvar providerId = X(doc, \"X_ZPAPER__Provider__c\");\nvar patientFirstName = X(doc, \"X_ZPAPER__FirstName__c\");\nvar patientLastName = X(doc, \"X_ZPAPER__LastName__c\");\nvar patientDOB = X(doc, \"X_ZPAPER__Birthdate__c\");\n//CRN180214 Judson wants this to be part of the attachment label\nvar faxType = X(doc, \"X_ZPAPER__faxType__c\");\n// Get the document type (will be used to route to next folder)\nvar docType = X(doc, \"X_Document_Type__c\");\nvar nextFolder = \"20500Triage-S2\";\t\t\t\t// Other folder is the default\nvar prevIndexPages = X(doc, \"X_indexedPages\");\nvar curIndexPages = X(doc, \"X_idxPages\");\nif (prevIndexPages && prevIndexPages.length > 0 && curIndexPages && curIndexPages.length > 0) {\n\tprevIndexPages += \",\";\n}\ncurIndexPages = prevIndexPages + curIndexPages;\nvar arrOfPairs = [];\narrOfPairs.push(\"X_indexedPages\", curIndexPages);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    if (!ba.endsWith(\"ed\") && ba !== \"\") { ba+=\"ed\"; } //ERS180103 #41155\n    if (ba !== \"\") { //ERS180103 #41155\n        var now0 = getCurDateAndTime(doc,false,true);\n        arrOfPairs.push(\"X_reviewedStatus\",ba);\n        arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n        arrOfPairs.push(\"X_buttonAction\",\"\");\n    }\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\");\nif (sfStackId ===\"\") { //ERS170731 #40593\n    X(doc,\"X_attachedTo\");\n    if (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n    }\n}\nvar attachPath = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ Currently attached to ZPAPER__zStack__c with ID: \" + sfStackId);\n\n/* SPLIT OFF NEW SNIPPET HERE */\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"index\", pageRange);\nalert(\"Case '\"+caseId+\"' and len=\"+caseId.length);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* Attach the split document to a new Case record, if it wasn't passed in */\nvar priority=X(doc,\"X_ZPAPER__Priority__c\"); //ERS170626\nvar label0=\"\";\nvar triageType=doc.docType;\nvar patientName;\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\t\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, contactId);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, ctcArrOfPairs);\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//JPB180215 now attach to stack record\nattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, sfStackId);\n\n\nif (!caseId || 0 === caseId.length) {\n\talert(\"@@@@ creating new Case\");\n\tarrOfPairs = [];\n\t//ERS170520 arrOfPairs.push(\"OwnerId\", queuesMapKludge[X(doc,\"X_Assign_to_Queue__c\")]);\n\tarrOfPairs.push(\"ContactId\", contactId);\n\tarrOfPairs.push(\"ZPAPER__newFax__c\", \"true\"); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__latestFax__c\", formatNow); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__receivedId__c\", doc.dbID); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"Status\", X(doc,\"X_Status\"));\n\tarrOfPairs.push(\"Type\", \"New Fax\"); //JPB 170512 added these workflow fields\n\tif (1==1) { //ERS170523 #37162 after dryrun\n\t\t//arrOfPairs.push(\"RecordTypeId\",\"012Q00000005Ahj\"); //ERS170523 Prior Auth\n\t\tif (priority != \"Normal\") arrOfPairs.push(\"Priority\",priority);  //ERS170524 #37162 priority on Case\n\t\telse arrOfPairs.push(\"Priority\",\"Medium\");\n\t\tarrOfPairs.push(\"Origin\",\"Fax\");\n\t}\n\t//name=\"X_ZPAPER__Patient__c\"\n\t//name=\"X_ZPAPER__FirstName__c\"\n\t//name=\"X_ZPAPER__LastName__c\"\n\tvar caseId = createAndAttach(doc, \"Case\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, arrOfPairs);\n\talert(\"Created Case with ID: \" + caseId);\n\tif (caseId == \"null\" || caseId == \"NEW\") caseId=null; //ERS170621 TODO need a standard\n}\nelse {\n\talert(\"@@@@ attaching to existing Case: \" + caseId);\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, caseId);\n}\nif (attachPath.indexOf(caseId)==-1) attachPath+=\",\"+caseId;\n\narrOfPairs = [];\nif (providerId && providerId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Provider__c\", providerId);\n\tif (attachPath.indexOf(providerId)==-1) attachPath+=\",\"+providerId;\n}\nif (patientId && patientId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Patient__c\", patientId);\n\tif (attachPath.indexOf(patientId)==-1) attachPath+=\",\"+patientId;\n}\nif (caseId && caseId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Case__c\", caseId);\n}\nupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\nattach(doc, \"Indexed-\"+formatNow+\"-\"+triageType, sfStackId);\nalert(\"@@@@ updated and attached to zStack Record, id = \" + sfStackId);\n\nif (1===0) { //ERS170627 TODO refactor\n    //CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\n    var provider = X(doc, \"X_Primary_Care_Physician__c\");\n    if (contactId && contactId.length > 0 && provider && provider.length > 0) {\n    \tarrOfPairs = [];\n    \tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n    \tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n    }\n}\n\nunlockDocument(doc);\n\narrOfPairs = [];\n//ERS170909 arrOfPairs.push(\"X_reviewedStatus\", \"Indexed\");\nif (1===1 && 1===0) { //ERS170909 #40592 for zDocSet statuses //ERS180103 #41155 set above\n//    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n//    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n//    var now0 = getCurDateAndTime(doc,false,true);\n//    arrOfPairs.push(\"X_reviewedStatus\",ba);\n//    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = zData.countPages(doc,pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (!patientFirstName || 0 == patientFirstName.length) { patientFirstName = \"Unknown\"; }\nif (!patientLastName || 0 == patientLastName.length) { patientLastName = \"Name\"; }\narrOfPairs.push(\"db-label\", patientFirstName + patientLastName + \" - \" + companyCode + \" - \" + stackId);\narrOfPairs.push(\"X_docType\",faxType); //JPB180215 changed doctype and faxtype name\narrOfPairs.push(\"X_attachedTo\",attachPath); //ERS170628\nupdateDB(doc,arrOfPairs);\n\ntrack(doc, \"Doc Indexed \", \"Document with Id: \" + doc.dbID, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ready~);updateDEStatus(~indexed:\" + pageRange + \"~);\");\n\n/* end of rule */","active":true,"button":"Index","outputs":1,"noerr":0,"x":414,"y":1561,"wires":[["4d62ee0a.61f32"]]},{"id":"e6cfc8ea.f73238","type":"zAction","z":"e8179419.0b9718","name":"Reject Page","func":"alert(\"@@@@ Reject Page Rule Fired @@@#\");\n\nfunction countPages(pageRange) {\n  var pages = pageRange.split(\",\");\n  return pages.length + \"\";\n}\n\nvar caseId = null;\nvar stackId = X(doc, \"X_stack\");\nvar contactId = X(doc, \"X_Patient__c\");\nvar patientFirstName = X(doc, \"X_Labeler_Patient_First_Name__c\");\nvar patientLastName = X(doc, \"X_Labeler_Patient_Last_Name__c\");\nvar patientDOB = X(doc, \"X_Labeler_Patient_DoB__c\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 see X_reviews work zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_rejectedPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_rejectedPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"reject\", pageRange);\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = countPages(pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\nupdateDB(doc,arrOfPairs);\n\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\tattach(doc, \"Rejected-\" + stackId, contactId);\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", \"Rejected-\" + stackId, ctcArrOfPairs);\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\nvar providerFirstName = \"\";\nvar providerLastName = \"\";\nvar provider = X(doc, \"X_Primary_Care_Physician__c\");\nif (provider && provider.length > 0) {\n\tvar providerFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, provider);\n\tproviderFirstName = X(doc, \"FirstName\", providerFlds);\n\tproviderLastName = X(doc, \"LastName\", providerFlds);\n}\nif (1===0) { //ERS170909 #40592 not standard\n/*\nif (contactId && contactId.length > 0 && provider && provider.length > 0) {\n\tarrOfPairs = [];\n\tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n\tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n} */\n}\n\narrOfPairs = [];\narrOfPairs.push(\"Status\", \"New\");\narrOfPairs.push(\"Origin\", \"Fax\");\narrOfPairs.push(\"Description\", doc.kbData.comments);\narrOfPairs.push(\"Subject\", \"Document Rejected\");\nif (1===0) { //ERS170909 #40592 not standard\n/*    arrOfPairs.push(\"Notes__c\", doc.kbData.comments);\n    arrOfPairs.push(\"Provider_First_Name__c\", providerFirstName);\n    arrOfPairs.push(\"Provider_Last_Name__c\", providerLastName);*/\n}\nalert(\"@@@@@@@ SETTING ContactId on Case creation? \" + contactId);\nif (contactId && contactId.length > 0) {\n\tarrOfPairs.push(\"ContactId\", contactId);\n}\ncaseId = createAndAttach(doc, \"Case\", \"Rejected-\" + stackId, arrOfPairs);\nalert(\"@@@@@ caseId for Rejecton: \" + caseId);\nif (caseId && caseId.length > 0) {\n\tarrOfPairs = [];\n\tif (contactId && contactId.length > 0) {\n\t\tarrOfPairs.push(\"WhoId\", contactId);\n\t}\n\tarrOfPairs.push(\"WhatId\", caseId);\n\tarrOfPairs.push(\"Subject\", \"Incoming Document Rejected\");\n\tarrOfPairs.push(\"Status\", \"In Progress\");\n\tvar sfId = createAndAttach(doc, \"Task\", \"Rejected-\" + stackId, arrOfPairs);\n}\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the rejected pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"rejected\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~rejected~);updateDEStatus(~rejected:\" + pageRange + \"~);\");\n\n/* end of rule */\n\n","active":true,"button":"Reject","outputs":1,"noerr":0,"x":817,"y":1575,"wires":[[]]},{"id":"a38c2f87.47b7e","type":"zAction","z":"e8179419.0b9718","name":"Stack Complete","func":"alert(\"@@@@ Stack Complete Rule Fired @@@#\");\n\n/* Clear the trigger that invoked this rule */\nvar arrOfPairs = [];\narrOfPairs.push(\"X_buttonAction\", \"\");\narrOfPairs.push(\"X_triageStatus\", \"Complete\");\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\".replace(\"Completeed\",\"Completed\");\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\"); //ERS170727 #40447\n//CRN170626 Also save the status in the zStack record.\nif (sfStackId===\"\") sfStackId = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ COMPLETE STACK -- Currently attached to Stack__c with ID: \" + sfStackId);\nif (sfStackId && sfStackId.length > 0) {\n\tif (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n\t}\n}\nif (sfStackId && sfStackId.length > 0) {\n\tarrOfPairs = [];\n\t//arrOfPairs.push(\"Triage_Status__c\", \"Complete\");\n\tarrOfPairs.push(\"ZPAPER__Status__c\", \"Complete\");\n\tupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\n}\n\n\nvar companyCode = doc.deliveredTo;\nalert(\"##### COMPLETE STACK: companyCode = \" + companyCode);\nvar oldFolder = companyCode.indexOf(\"1306\") > 0 ? \"20500Triage-S1A\" : \"20500Triage-S1B\";\n\nalert(\"##### COMPLETE STACK: moving from oldFolder: \" + oldFolder);\nmoveDocument(doc,oldFolder,\"\");\nreloadByBATES(doc,oldFolder);\nunlockDocument(doc);\n\ntrack(doc, \"Stack completed\", doc.BATES, doc.numPages);\nhideDocument(doc);\n//CRN161005 Case #30173 Clear label bar when Stack is completed\naddPostExecutionScript(doc, \"; $('#recordLabel').html(''); $('#DEFormsList').hide(); $('#dataEntryDIV').hide();\");\n\n//AN20180220 attempting to jury rig this - THIS WORKS AS A FALLBACK - redirects to Home Page\n//addPostExecutionScript(doc, \"; window.location.href='https://zpaperpapdemo-dev-ed.lightning.force.com/';\");\n\n//AN20180220 redirect to the zStack to which this is attached\naddPostExecutionScript(doc, \"; window.location.href='\"+ X(doc,\"X_attachedTo\") + \"';\");\n\nalert(\"@@@@@@ doc.kbData.sfServer: \" + doc.kbData.sfServer);\n\n/* end of rule */\n","active":true,"button":"Stack Complete","outputs":1,"noerr":0,"x":844,"y":1621,"wires":[["de265619.856ce8"]]},{"id":"6c315a53.790e04","type":"zAction","z":"e8179419.0b9718","name":"Ignore Page","func":"alert(\"@@@@ Ignore Page Rule Fired @@@#\");\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\nzData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_ignoredPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_ignoredPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"ignore\", pageRange);\nalert(\"@@@ pageRange = \" + pageRange);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nalert(\"@@@ BEFORE CALL TO COUNTPAGES @@@\");\nvar pageCount = zData.countPages(doc, pageRange);  //CRN180102 Added missing zData reference\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nupdateDB(doc,arrOfPairs);\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the ignored pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"ignored\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ignored~);updateDEStatus(~ignored:\" + pageRange + \"~);\");\n/* end of rule */\n","active":true,"button":"Ignore","outputs":1,"noerr":0,"x":816,"y":1541,"wires":[[]]},{"id":"8f604082.2b44e","type":"zAction","z":"e8179419.0b9718","name":"docType selected (required)","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":463,"y":1495,"wires":[["4d62ee0a.61f32"]]},{"id":"d2e73863.99bf38","type":"zAction","z":"e8179419.0b9718","name":"Additional Indexed pages with attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":503,"y":1594,"wires":[["bc7cb5c4.3b4ae8"]]},{"id":"bc7cb5c4.3b4ae8","type":"zAction","z":"e8179419.0b9718","name":"Additional indexed pages with docTypes attached to newly created case","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1322,"y":1572,"wires":[[]]},{"id":"6e1b2c01.931254","type":"function","z":"e8179419.0b9718","name":"Selection of zAction buttons for per page indexing","func":"\nreturn msg;","outputs":1,"noerr":0,"x":529,"y":1528,"wires":[["6c315a53.790e04","e6cfc8ea.f73238"]]},{"id":"bc8cdade.19c788","type":"function","z":"e8179419.0b9718","name":"Once user indexes all pages they can complete index","func":"\nreturn msg;","outputs":1,"noerr":0,"x":543,"y":1630,"wires":[["a38c2f87.47b7e"]]},{"id":"de265619.856ce8","type":"function","z":"e8179419.0b9718","name":"removes zStack record from queue to Stack Complete list view","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1223,"y":1619,"wires":[[]]},{"id":"d75efd6c.11229","type":"comment","z":"e8179419.0b9718","name":"Index Multiple Patients","info":"","x":132,"y":834,"wires":[]},{"id":"f54087f8.7b0f78","type":"zAction","z":"e8179419.0b9718","name":"Index Page","func":"alert(\"@@@@ Index Rule Fired @@@#\");\n/* double-quote, newline characters */\nvar dq = String.fromCharCode(34);\nvar nl = String.fromCharCode(10);\nvar formatNow=getCurDateAndTime(doc);\n\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\n// Does the user want to attach indexed pages to Case?\nvar caseId = X(doc, \"X_ZPAPER__Case__c\");\nvar contactId = X(doc, \"X_ZPAPER__Patient__c\");\nvar patientId=contactId; //TODO\nvar providerId = X(doc, \"X_ZPAPER__Provider__c\");\nvar patientFirstName = X(doc, \"X_ZPAPER__FirstName__c\");\nvar patientLastName = X(doc, \"X_ZPAPER__LastName__c\");\nvar patientDOB = X(doc, \"X_ZPAPER__Birthdate__c\");\n//CRN180214 Judson wants this to be part of the attachment label\nvar faxType = X(doc, \"X_ZPAPER__faxType__c\");\n// Get the document type (will be used to route to next folder)\nvar docType = X(doc, \"X_Document_Type__c\");\nvar nextFolder = \"20500Triage-S2\";\t\t\t\t// Other folder is the default\nvar prevIndexPages = X(doc, \"X_indexedPages\");\nvar curIndexPages = X(doc, \"X_idxPages\");\nif (prevIndexPages && prevIndexPages.length > 0 && curIndexPages && curIndexPages.length > 0) {\n\tprevIndexPages += \",\";\n}\ncurIndexPages = prevIndexPages + curIndexPages;\nvar arrOfPairs = [];\narrOfPairs.push(\"X_indexedPages\", curIndexPages);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    if (!ba.endsWith(\"ed\") && ba !== \"\") { ba+=\"ed\"; } //ERS180103 #41155\n    if (ba !== \"\") { //ERS180103 #41155\n        var now0 = getCurDateAndTime(doc,false,true);\n        arrOfPairs.push(\"X_reviewedStatus\",ba);\n        arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n        arrOfPairs.push(\"X_buttonAction\",\"\");\n    }\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\");\nif (sfStackId ===\"\") { //ERS170731 #40593\n    X(doc,\"X_attachedTo\");\n    if (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n    }\n}\nvar attachPath = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ Currently attached to ZPAPER__zStack__c with ID: \" + sfStackId);\n\n/* SPLIT OFF NEW SNIPPET HERE */\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"index\", pageRange);\nalert(\"Case '\"+caseId+\"' and len=\"+caseId.length);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* Attach the split document to a new Case record, if it wasn't passed in */\nvar priority=X(doc,\"X_ZPAPER__Priority__c\"); //ERS170626\nvar label0=\"\";\nvar triageType=doc.docType;\nvar patientName;\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\t\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, contactId);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tpatientName = patientFirstName + \" \" + patientLastName;\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, ctcArrOfPairs);\n\tif (attachPath.indexOf(contactId)==-1) attachPath+=\",\"+contactId;\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//JPB180215 now attach to stack record\nattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, sfStackId);\n\n\nif (!caseId || 0 === caseId.length) {\n\talert(\"@@@@ creating new Case\");\n\tarrOfPairs = [];\n\t//ERS170520 arrOfPairs.push(\"OwnerId\", queuesMapKludge[X(doc,\"X_Assign_to_Queue__c\")]);\n\tarrOfPairs.push(\"ContactId\", contactId);\n\tarrOfPairs.push(\"ZPAPER__newFax__c\", \"true\"); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__latestFax__c\", formatNow); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"ZPAPER__receivedId__c\", doc.dbID); //JPB 170512 added these workflow fields\n\tarrOfPairs.push(\"Status\", X(doc,\"X_Status\"));\n\tarrOfPairs.push(\"Type\", \"New Fax\"); //JPB 170512 added these workflow fields\n\tif (1==1) { //ERS170523 #37162 after dryrun\n\t\t//arrOfPairs.push(\"RecordTypeId\",\"012Q00000005Ahj\"); //ERS170523 Prior Auth\n\t\tif (priority != \"Normal\") arrOfPairs.push(\"Priority\",priority);  //ERS170524 #37162 priority on Case\n\t\telse arrOfPairs.push(\"Priority\",\"Medium\");\n\t\tarrOfPairs.push(\"Origin\",\"Fax\");\n\t}\n\t//name=\"X_ZPAPER__Patient__c\"\n\t//name=\"X_ZPAPER__FirstName__c\"\n\t//name=\"X_ZPAPER__LastName__c\"\n\tvar caseId = createAndAttach(doc, \"Case\", label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, arrOfPairs);\n\talert(\"Created Case with ID: \" + caseId);\n\tif (caseId == \"null\" || caseId == \"NEW\") caseId=null; //ERS170621 TODO need a standard\n}\nelse {\n\talert(\"@@@@ attaching to existing Case: \" + caseId);\n\tattach(doc, label0+\"Indexed-\" + patientName + \"-\" + faxType + \"-\" + stackId, caseId);\n}\nif (attachPath.indexOf(caseId)==-1) attachPath+=\",\"+caseId;\n\narrOfPairs = [];\nif (providerId && providerId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Provider__c\", providerId);\n\tif (attachPath.indexOf(providerId)==-1) attachPath+=\",\"+providerId;\n}\nif (patientId && patientId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Patient__c\", patientId);\n\tif (attachPath.indexOf(patientId)==-1) attachPath+=\",\"+patientId;\n}\nif (caseId && caseId.length > 0) {\n\tarrOfPairs.push(\"ZPAPER__Case__c\", caseId);\n}\nupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\nattach(doc, \"Indexed-\"+formatNow+\"-\"+triageType, sfStackId);\nalert(\"@@@@ updated and attached to zStack Record, id = \" + sfStackId);\n\nif (1===0) { //ERS170627 TODO refactor\n    //CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\n    var provider = X(doc, \"X_Primary_Care_Physician__c\");\n    if (contactId && contactId.length > 0 && provider && provider.length > 0) {\n    \tarrOfPairs = [];\n    \tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n    \tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n    }\n}\n\nunlockDocument(doc);\n\narrOfPairs = [];\n//ERS170909 arrOfPairs.push(\"X_reviewedStatus\", \"Indexed\");\nif (1===1 && 1===0) { //ERS170909 #40592 for zDocSet statuses //ERS180103 #41155 set above\n//    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n//    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n//    var now0 = getCurDateAndTime(doc,false,true);\n//    arrOfPairs.push(\"X_reviewedStatus\",ba);\n//    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = zData.countPages(doc,pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (!patientFirstName || 0 == patientFirstName.length) { patientFirstName = \"Unknown\"; }\nif (!patientLastName || 0 == patientLastName.length) { patientLastName = \"Name\"; }\narrOfPairs.push(\"db-label\", patientFirstName + patientLastName + \" - \" + companyCode + \" - \" + stackId);\narrOfPairs.push(\"X_docType\",faxType); //JPB180215 changed doctype and faxtype name\narrOfPairs.push(\"X_attachedTo\",attachPath); //ERS170628\nupdateDB(doc,arrOfPairs);\n\ntrack(doc, \"Doc Indexed \", \"Document with Id: \" + doc.dbID, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ready~);updateDEStatus(~indexed:\" + pageRange + \"~);\");\n\n/* end of rule */","active":true,"button":"Index","outputs":1,"noerr":0,"x":420,"y":969,"wires":[["b42c0098.f580e"]]},{"id":"d5bb7bef.746518","type":"zAction","z":"e8179419.0b9718","name":"Reject Page","func":"alert(\"@@@@ Reject Page Rule Fired @@@#\");\n\nfunction countPages(pageRange) {\n  var pages = pageRange.split(\",\");\n  return pages.length + \"\";\n}\n\nvar caseId = null;\nvar stackId = X(doc, \"X_stack\");\nvar contactId = X(doc, \"X_Patient__c\");\nvar patientFirstName = X(doc, \"X_Labeler_Patient_First_Name__c\");\nvar patientLastName = X(doc, \"X_Labeler_Patient_Last_Name__c\");\nvar patientDOB = X(doc, \"X_Labeler_Patient_DoB__c\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\n//ERS170909 see X_reviews work zData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_rejectedPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_rejectedPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"reject\", pageRange);\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nvar pageCount = countPages(pageRange);\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\";\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n    arrOfPairs.push(\"X_buttonAction\",\"\");\n}\nupdateDB(doc,arrOfPairs);\n\n/* Attach the split document to Contact record if required */\nalert(\"@@@@ attaching to a Contact? contactId = \" + contactId);\nif (contactId && contactId.length > 0) {\n\tattach(doc, \"Rejected-\" + stackId, contactId);\n\tvar contactFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, contactId);\n\tpatientFirstName = X(doc, \"FirstName\", contactFlds);\n\tpatientLastName = X(doc, \"LastName\", contactFlds);\n}\nelse if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {\n\tvar ctcArrOfPairs = [];\n\tctcArrOfPairs.push(\"FirstName\", patientFirstName);\n\tctcArrOfPairs.push(\"LastName\", patientLastName);\n\tctcArrOfPairs.push(\"BirthDate\", patientDOB);\n\tcontactId = createAndAttach(doc, \"Contact\", \"Rejected-\" + stackId, ctcArrOfPairs);\n\talert(\"@@@@@@@ NEW CONTACT CREATED WITH ID: \" + contactId);\n\t// clear out the \"New Patient\" fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_First_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_Last_Name__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c\" + dq + \").val(\" + dq + \"\" + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Labeler_Patient_DoB__c_readable\" + dq + \").val(\" + dq + \"NONE\" + dq + \"); \");\n\t// set the Patient lookup fields\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c\" + dq + \").val(\" + dq + contactId + dq + \"); \");\n\taddPostExecutionScript(doc, \" $(\" + dq + \"#Patient__c_Name\" + dq + \").val(\" + dq + patientFirstName + \" \" + patientLastName + dq + \"); \");\n}\n//CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.\nvar providerFirstName = \"\";\nvar providerLastName = \"\";\nvar provider = X(doc, \"X_Primary_Care_Physician__c\");\nif (provider && provider.length > 0) {\n\tvar providerFlds = getSFFields(doc, \"Contact\", \"FirstName,LastName\", null, provider);\n\tproviderFirstName = X(doc, \"FirstName\", providerFlds);\n\tproviderLastName = X(doc, \"LastName\", providerFlds);\n}\nif (1===0) { //ERS170909 #40592 not standard\n/*\nif (contactId && contactId.length > 0 && provider && provider.length > 0) {\n\tarrOfPairs = [];\n\tarrOfPairs.push(\"Primary_Care_Physician__c\", provider);\n\tupdateSFRecord(doc,\"Contact\",contactId,arrOfPairs);\n} */\n}\n\narrOfPairs = [];\narrOfPairs.push(\"Status\", \"New\");\narrOfPairs.push(\"Origin\", \"Fax\");\narrOfPairs.push(\"Description\", doc.kbData.comments);\narrOfPairs.push(\"Subject\", \"Document Rejected\");\nif (1===0) { //ERS170909 #40592 not standard\n/*    arrOfPairs.push(\"Notes__c\", doc.kbData.comments);\n    arrOfPairs.push(\"Provider_First_Name__c\", providerFirstName);\n    arrOfPairs.push(\"Provider_Last_Name__c\", providerLastName);*/\n}\nalert(\"@@@@@@@ SETTING ContactId on Case creation? \" + contactId);\nif (contactId && contactId.length > 0) {\n\tarrOfPairs.push(\"ContactId\", contactId);\n}\ncaseId = createAndAttach(doc, \"Case\", \"Rejected-\" + stackId, arrOfPairs);\nalert(\"@@@@@ caseId for Rejecton: \" + caseId);\nif (caseId && caseId.length > 0) {\n\tarrOfPairs = [];\n\tif (contactId && contactId.length > 0) {\n\t\tarrOfPairs.push(\"WhoId\", contactId);\n\t}\n\tarrOfPairs.push(\"WhatId\", caseId);\n\tarrOfPairs.push(\"Subject\", \"Incoming Document Rejected\");\n\tarrOfPairs.push(\"Status\", \"In Progress\");\n\tvar sfId = createAndAttach(doc, \"Task\", \"Rejected-\" + stackId, arrOfPairs);\n}\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the rejected pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"rejected\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~rejected~);updateDEStatus(~rejected:\" + pageRange + \"~);\");\n\n/* end of rule */\n\n","active":true,"button":"Reject","outputs":1,"noerr":0,"x":823,"y":1094,"wires":[[]]},{"id":"63682c87.c41984","type":"zAction","z":"e8179419.0b9718","name":"Stack Complete","func":"alert(\"@@@@ Stack Complete Rule Fired @@@#\");\n\n/* Clear the trigger that invoked this rule */\nvar arrOfPairs = [];\narrOfPairs.push(\"X_buttonAction\", \"\");\narrOfPairs.push(\"X_triageStatus\", \"Complete\");\nif (1===1) { //ERS170909 #40592 for zDocSet statuses\n    var ba=doc.X(\"X_buttonAction\")+\"ed\".replace(\"Completeed\",\"Completed\");\n    ba=ba.substring(1+ba.lastIndexOf(\" \"));\n    var now0 = getCurDateAndTime(doc,false,true);\n    arrOfPairs.push(\"X_reviewedStatus\",ba);\n    arrOfPairs.push(\"X_reviews\",X(doc,\"X_reviews\")+ba+\" by \"+doc.kbData.remoteUser+\" at \"+now0+\"<br/>\"); //ERS170909 #40592\n}\nupdateDB(doc,arrOfPairs);\n\nvar sfStackId = X(doc,\"X_sfStackId\"); //ERS170727 #40447\n//CRN170626 Also save the status in the zStack record.\nif (sfStackId===\"\") sfStackId = X(doc,\"X_attachedTo\");\nalert(\"@@@@@@ COMPLETE STACK -- Currently attached to Stack__c with ID: \" + sfStackId);\nif (sfStackId && sfStackId.length > 0) {\n\tif (sfStackId.lastIndexOf('/') >= 0) {\n\t\tsfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);\n\t\tif (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }\n\t}\n}\nif (sfStackId && sfStackId.length > 0) {\n\tarrOfPairs = [];\n\t//arrOfPairs.push(\"Triage_Status__c\", \"Complete\");\n\tarrOfPairs.push(\"ZPAPER__Status__c\", \"Complete\");\n\tupdateSFRecord(doc, \"ZPAPER__zStack__c\", sfStackId, arrOfPairs);\n}\n\n\nvar companyCode = doc.deliveredTo;\nalert(\"##### COMPLETE STACK: companyCode = \" + companyCode);\nvar oldFolder = companyCode.indexOf(\"1306\") > 0 ? \"20500Triage-S1A\" : \"20500Triage-S1B\";\n\nalert(\"##### COMPLETE STACK: moving from oldFolder: \" + oldFolder);\nmoveDocument(doc,oldFolder,\"\");\nreloadByBATES(doc,oldFolder);\nunlockDocument(doc);\n\ntrack(doc, \"Stack completed\", doc.BATES, doc.numPages);\nhideDocument(doc);\n//CRN161005 Case #30173 Clear label bar when Stack is completed\naddPostExecutionScript(doc, \"; $('#recordLabel').html(''); $('#DEFormsList').hide(); $('#dataEntryDIV').hide();\");\n\n//AN20180220 attempting to jury rig this - THIS WORKS AS A FALLBACK - redirects to Home Page\n//addPostExecutionScript(doc, \"; window.location.href='https://zpaperpapdemo-dev-ed.lightning.force.com/';\");\n\n//AN20180220 redirect to the zStack to which this is attached\naddPostExecutionScript(doc, \"; window.location.href='\"+ X(doc,\"X_attachedTo\") + \"';\");\n\nalert(\"@@@@@@ doc.kbData.sfServer: \" + doc.kbData.sfServer);\n\n/* end of rule */\n","active":true,"button":"Stack Complete","outputs":1,"noerr":0,"x":829,"y":1128,"wires":[["7a6f7327.76d9fc"]]},{"id":"1f145f54.6f9231","type":"zAction","z":"e8179419.0b9718","name":"Ignore Page","func":"alert(\"@@@@ Ignore Page Rule Fired @@@#\");\nvar stackId = X(doc, \"X_stack\");\nvar stackFolder = stackId + \"-STACK\";\nvar companyCode = doc.deliveredTo;\n/* Clear the trigger that invoked this rule */\nzData.clearTriggerCondition(doc,\"X_buttonAction\");\nvar indexInitialized = X(doc,\"X_indexInitialized\");\nif (!indexInitialized || 0 === indexInitialized.length) {\n\tstackId = new Date().getTime() + \"\";\n\tstackFolder = stackId + \"-STACK\";\n\tzData.initializeStack(doc,stackFolder, companyCode, stackId);\n}\nvar curIndexPages = X(doc, \"X_ignoredPages\");\nif (curIndexPages && curIndexPages.length > 0) {\n  curIndexPages += \",\";\n}\ncurIndexPages += X(doc, \"X_idxPages\");\nvar arrOfPairs = [];\narrOfPairs.push(\"X_ignoredPages\", curIndexPages);\nupdateDB(doc,arrOfPairs);\n\nvar pageRange = X(doc,\"X_idxPages\");\nsplitDocumentForIndex(doc, \"ignore\", pageRange);\nalert(\"@@@ pageRange = \" + pageRange);\n//*\n/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */\n//*\n\n/* CRN160825 Set the page count so that it does not have the parent page count */\nalert(\"@@@ BEFORE CALL TO COUNTPAGES @@@\");\nvar pageCount = zData.countPages(doc, pageRange);  //CRN180102 Added missing zData reference\nalert(\"@@@@ pageCount = \" + pageCount);\narrOfPairs.push(\"X_pages\",pageCount);\narrOfPairs.push(\"db-pages\",pageCount);\nupdateDB(doc,arrOfPairs);\n\n/* Place the split document into the stack folder */\nalert(\"@@@@@@ Moving the ignored pages document into the final stack folder: \" + stackFolder);\nmoveDocument(doc,\"\",stackFolder);\nunlockDocument(doc);\n\ntrack(doc, \"ignored\", doc.BATES, pageCount);\naddPostExecutionScript(doc, \"nextPage(~ignored~);updateDEStatus(~ignored:\" + pageRange + \"~);\");\n/* end of rule */\n","active":true,"button":"Ignore","outputs":1,"noerr":0,"x":822,"y":1060,"wires":[[]]},{"id":"1fa42ec8.912221","type":"zAction","z":"e8179419.0b9718","name":"docType selected (required)","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":469,"y":935,"wires":[["b42c0098.f580e"]]},{"id":"44eff689.7a1e88","type":"soql","z":"e8179419.0b9718","name":"Existing Case lookup (optional)","query":"","connection":"","x":479,"y":836,"wires":[[]]},{"id":"832b11b1.3e9d8","type":"soql","z":"e8179419.0b9718","name":"Existing Provider lookup Person Account record (required)","query":"","connection":"","x":557,"y":869,"wires":[["b42c0098.f580e"]]},{"id":"7b53bb79.b32b44","type":"soql","z":"e8179419.0b9718","name":"Existing Patient lookup Contact record (required)","query":"","connection":"","x":529,"y":902,"wires":[["b42c0098.f580e"]]},{"id":"b42c0098.f580e","type":"zAction","z":"e8179419.0b9718","name":"New Enrollment Case created with initial docType selected","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1113,"y":918,"wires":[["cf22c620.3ede28"]]},{"id":"6b09a949.81e0c8","type":"zAction","z":"e8179419.0b9718","name":"Additional Indexed pages with attributes","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":509,"y":1002,"wires":[["cf22c620.3ede28"]]},{"id":"cf22c620.3ede28","type":"zAction","z":"e8179419.0b9718","name":"Additional indexed pages with docTypes attached to newly created case","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":1169,"y":983,"wires":[[]]},{"id":"161c0365.58604d","type":"function","z":"e8179419.0b9718","name":"Selection of zAction buttons for per page indexing","func":"\nreturn msg;","outputs":1,"noerr":0,"x":525,"y":1070,"wires":[["1f145f54.6f9231","d5bb7bef.746518"]]},{"id":"ff0ba04c.6b078","type":"function","z":"e8179419.0b9718","name":"Once user indexes all pages they can complete index","func":"\nreturn msg;","outputs":1,"noerr":0,"x":534,"y":1140,"wires":[["63682c87.c41984"]]},{"id":"7a6f7327.76d9fc","type":"function","z":"e8179419.0b9718","name":"removes zStack record from queue to Stack Complete list view","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1229,"y":1138,"wires":[[]]},{"id":"921e319.81c3cd","type":"comment","z":"e8179419.0b9718","name":"New sub zStack created for multiple patients","info":"","x":202,"y":1229,"wires":[]},{"id":"d199e545.dcffc8","type":"zAction","z":"e8179419.0b9718","name":"Split original zStack record into sub zStack records all pointing to original ","func":"\nreturn msg;","active":true,"button":"","outputs":1,"noerr":0,"x":697,"y":1226,"wires":[[]]},{"id":"38bf65c0.d5607a","type":"zFax","z":"e8179419.0b9718","name":"zCharta","link":"","format":"text","template":"","x":87,"y":60,"wires":[["e83c96cb.865548"]]}],"rev":"0"}