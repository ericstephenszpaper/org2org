<!--
// Name: Index Page
// Committer: Prathyusha.vasireddy2zpaper.com
// Update: Updated the record type for person account Pv190718
-->
<script>
//--- RULE JSON REPRESENTATION ---
var ruleJson = {"type":"rool","updated":"2019-07-19 23:34:38","active":true,"button":"Index","name":"Index Page","conditions":{"logic":"and","arguments":[{"name":"doc.X(\"X_buttonAction\")","value":"Index","operation":"equals"}]},"consequence":{"doit":""},"ordinal":6}

//--- RULE JSON REPRESENTATION - END ---

//--- RULE CONSEQUENCE CODE ---
alert("@@@@ Index Rule Fired @@@#"); //ERS190619 update the fields used
/* double-quote, newline characters */
var dq = String.fromCharCode(34);
var nl = String.fromCharCode(10);
var formatNow = getCurDateAndTime(doc);

/* MSH171130 #43649 created date for original doc */
var docCreatedDate = gmtFormatted(doc, "created");
var attachPath = X(doc, "X_attachedTo");

var accountFirstName="";
var accountLastName ="";
var patientDOB = "";
var patientId = "";
var accountName ="";
var stackId = X(doc, "X_stack"); //zPaper dbID
var sfStackId = X(doc, "X_sfStackId");
var orgDocId = doc.dbID;  //PV022618
if (sfStackId === "") { //ERS170731 #40593
    /* MSH170814 this doesn't do anything useful X(doc, "X_attachedTo"); */
    /* MSH171129 we already got attachPath, use it sfStackId = X(doc, "X_attachedTo"); */
    sfStackId = attachPath;
    if (sfStackId.lastIndexOf('/') >= 0) {
        sfStackId = sfStackId.substring(sfStackId.lastIndexOf('/') + 1);
        if (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }
    }
}
alert("@@@ Currently attached to ZPAPER__zStack__c with sfStackId: " + sfStackId);

//AN20180716 for code review - are these variables and IF statement still needed, since we are no longer user folders?

var stackFolder = stackId + "-STACK";
/* Clear the trigger that invoked this rule */
zData.clearTriggerCondition(doc, "X_buttonAction");
var indexInitialized = X(doc, "X_indexInitialized");
if (!indexInitialized || 0 === indexInitialized.length) {
    stackId = new Date().getTime() + "";
    stackFolder = stackId + "-STACK";
    /* MSH170814 mismatched param list */
    /* zData.initializeStack(doc, stackFolder, companyCode, stackId); */
    zData.initializeStack(doc, stackFolder, stackId);
}

var personAccountId = X(doc, "X_Person_Account__c");

alert("@@@ personAccountId = " + personAccountId);
// Pv190520 added to create person account
if (!personAccountId) {
    alert("@@@ creating PersonAccount @@@");
    accountFirstName = X(doc, "X_ZPAPER__FirstName__c");
    accountLastName = X(doc, "X_ZPAPER__LastName__c");
    var accountBirthDate = X(doc, "X_ZPAPER__Birthdate__c");
    var zpArrOfPairs =[];
    zpArrOfPairs.push("RecordTypeId", "0126A000000JE8yQAG");
    //zpArrOfPairs.push("Name",accountFirstName+" "+accountLastName);//PV190530
    zpArrOfPairs.push("FirstName",accountFirstName);//PV190530
    zpArrOfPairs.push("LastName",accountLastName);//PV190530
    
    zpArrOfPairs.push("PersonBirthdate",accountBirthDate);

    personAccountId = createSFRecord(doc, "Account", "Person - Account", zpArrOfPairs);
}

alert("@@@ AFTER CREATING PERSONACCOUNT");

    var accountFlds = getSFFields(doc, "Account", "Name,PersonBirthdate", null, personAccountId); //MSH170818 added Birthdate
    alert("@@@ calling SF for accountFlds :: " + accountFlds);
    accountName = X(doc, "Name", accountFlds);
    
    patientDOB = X(doc, "PersonBirthdate", accountFlds);

var MMddYYYY = zData.formatTodayMMddYYYY();
/*MSH171129 we already got docType, use it attachLabel = patientFirstName + patientLastName + " - " + X(doc,"X_ZPAPER__faxType__c") + " - " + MMddYYYY;*/
attachLabel = accountName + " - " + docType + " - " + MMddYYYY;

/* Get the document type (will be used to route to next folder) */
var docType = X(doc, "X_docType");
var attachLabel = ""; /* MSH170818 format should be "Patient Name - Doc Type - Date" */

var prevIndexPages = X(doc, "X_indexedPages");
var curIndexPages = X(doc, "X_idxPages");
if (prevIndexPages && prevIndexPages.length > 0 && curIndexPages && curIndexPages.length > 0) {
    prevIndexPages += ",";
}
curIndexPages = prevIndexPages + curIndexPages;
var arrOfPairs = [];
arrOfPairs.push("X_indexedPages", curIndexPages);
updateDB(doc, arrOfPairs);

/* SPLIT OFF NEW SNIPPET HERE */
var pageRange = X(doc, "X_idxPages");
alert("@@@ pageRange = " + pageRange);
var arrOfPairs1 = []; //PV280319 updated for copy on split
var pageCount =zData.countPages(doc, pageRange);
//var pageRange = "1-" + pageCount;
    alert("@@@ pageRange === " + pageRange);
   
var newDbId = splitDocumentForIndex(doc, "index", pageRange,arrOfPairs1);
alert("@@@ after splitDocumentForIndex");
alert("@@@ newDbId = " + newDbId);

/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */

/* MSH171115 #43613 */
 setDocumentContext(doc, newDbId);

docType = X(doc, "X_ZPAPER__faxType__c");
zData.docType = docType;
attachLabel = zData.nameFile(doc); //ERS170829 #41298

attachLabel = accountName + " - " + docType + " - " + MMddYYYY;

//PV190528 clear out the "New Patient" fields
addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__FirstName__c" + dq + ").val(" + dq + "" + dq + "); ");
addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__LastName__c" + dq + ").val(" + dq + "" + dq + "); ");
addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__Birthdate__c" + dq + ").val(" + dq + "" + dq + "); ");// PV190531 updated to clean the text fields
addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__Birthdate__c_readable" + dq + ").val(" + dq + "" + dq + "); ");

//MSH170829 set the Patient lookup fields
addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__Patient__c_Name" + dq + ").val(" + dq + accountFirstName + " " + accountLastName + dq + "); ");

arrOfPairs = [];

arrOfPairs.push("ZPAPER__FirstName__c", accountFirstName);
arrOfPairs.push("ZPAPER__LastName__c", accountLastName);
if (patientDOB && patientDOB.length > 0) {
    arrOfPairs.push("ZPAPER__Birthdate__c", patientDOB);
}

arrOfPairs.push("ZPAPER__faxType__c", docType);

alert("@@@ updating new stack with :: " + arrOfPairs);
updateSFRecord(doc, "ZPAPER__zStack__c", sfStackId, arrOfPairs);


arrOfPairs = [];


attach(doc, attachLabel, personAccountId);
attachPath = X(doc, "X_attachedTo");
arrOfPairs = [];
//Pv190520 update person account on zstack
if (personAccountId && personAccountId.length > 0) {
    arrOfPairs.push("Person_Account__c", personAccountId);
} 

updateSFRecord(doc, "ZPAPER__zStack__c", sfStackId, arrOfPairs);

attach(doc, attachLabel, sfStackId);
alert("@@@ updated and attached to zStack Record, id = " + sfStackId);

addPostExecutionScript(doc, " $(" + dq + "#Person_Account__c" + dq + ").val(" + dq + personAccountId + dq + "); ");
addPostExecutionScript(doc, " $(" + dq + "#Person_Account__c_Name" + dq + ").val(" + dq + accountFirstName +" " +accountLastName + dq + "); ");

arrOfPairs = [];
arrOfPairs.push("X_reviewedStatus", "Indexed");
/* CRN160825 Set the page count so that it does not have the parent page count */
 pageCount = zData.countPages(doc, pageRange);
alert("@@@@ pageCount = " + pageCount);
arrOfPairs.push("X_pages", pageCount);
arrOfPairs.push("X_docType", docType); /* MSH170927 get all the docTypes aligned */
arrOfPairs.push("db-pages", pageCount);
arrOfPairs.push("X_attachedTo", attachPath); //ERS170628
arrOfPairs.push("Person_Account__c", personAccountId); // Pv190520 update person account
arrOfPairs.push("db-label", attachLabel); //CRN171102

//CRN180726 Case #50469 -- Set the "Indexed" checkbox
var ba = "Indexed"; 
var now0 = getCurDateAndTime(doc,false,true);

arrOfPairs.push("X_reviewedStatus",ba);
arrOfPairs.push("X_reviews","Received by "+doc.kbData.remoteUser+" at "+now0+"<br/>"+ba+" by "+doc.kbData.remoteUser+" at "+now0+"<br/>"); //PV190420 updated for doc set components to check
updateDB(doc, arrOfPairs);
//unlockDocument(doc); // PV190603 updated to unlock the doc
track(doc, "Doc Indexed ", "Document with Id: " + doc.dbID, pageCount);
addPostExecutionScript(doc, "nextPage(~ready~);updateDEStatus(~indexed:" + pageRange + "~);");
/* end of rule */
//--- RULE CONSEQUENCE CODE - END ---

//--- RULE VALIDATION CODE ---

//--- RULE VALIDATION CODE - END ---

</script>
