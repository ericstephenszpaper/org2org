<!--
// Name: Create zStack from Fax
// Committer: eric.stephens@zpaper.com
// Update: ERS190119 autoDrive
-->
<script>
//--- RULE JSON REPRESENTATION ---
var ruleJson = {"type":"rool","updated":"2019-01-19 17:58:42","active":true,"button":"","name":"Create zStack from Fax","conditions":{"logic":"and","arguments":[{"name":"doc.X(\"X_field0\")","value":"","operation":"equals"}]},"consequence":{"doit":""},"ordinal":16}

//--- RULE JSON REPRESENTATION - END ---

//--- RULE CONSEQUENCE CODE ---
//ERS170804 docType by OCR
//ERS171012 keywords for demo
//JPB180808 addeed Start Form and Checklist for BIOGEN DEMO
//JPB181022 added Spinraza
//JPB181025 removed ~ from keywords and moved Enrollment to first position
var keywords=["ENRL:Enrollment","ENRL:ENROLLMENT","START:Start Form","TENR:TECFIDERA","TENR:TEC-US-0298","START:SPINRAZA","START:SPZ-US-0266V5","CHK:Checklist","CHK:3753128","CHK:infusion","CON:Consent","CON:consent","HIPAA:AUTHORIZATION","HIPAA:HIPAA","HIPAA:PORTABILITY","REF:REFERRAL","REF:Referral","FIN:W-2","IC:Member ID","OTH:"]; //JPB180828 changed to OTH for Other instead of FAX
var keywordMap={}; //JPB180808 added keywordMap to match docType
keywordMap["TENR"] ="TENR:Start Form"; //JPB190117 changed to match DEMO
keywordMap["CHK"] ="CHK:Checklist";
keywordMap["ENRL"] ="ENRL:Enrollment";
keywordMap["CON"] ="CON:Consent";
keywordMap["HIPAA"] ="HIPAA:AUTHORIZATION";
keywordMap["REF"] ="REF:REFERRAL";
keywordMap["FIN"] ="FIN:W-2";
keywordMap["IC"] ="IC:Member ID";
//ERS190119 TODO all of these docType keywordMap ideas need to be refactor

var zType=doc.X("X_docType"); //ERS190119 moved outside if
if (zData.docTypeOCR==="FAX" || zData.docTypeOCR==="") { //ERS190118 not needed if AutoDrive already run
    zData.docTypeOCR=zData.docTyper(doc,keywords); //ERS171012 TODO missing for MP
    alert("docType was "+doc.docType+" now "+ zData.docTypeOCR);
    zType=doc.X("X_docType");
    if (doc.docType != zData.docTypeOCR) {
        var arrOfPairs0 = [];
        arrOfPairs0.push("X_docTypeOCR",zData.docTypeOCR);
    	arrOfPairs0.push("X_docType",zData.docTypeOCR);
        zType=zData.docTypeOCR; //ERS170330 saved below into SF faxType__c field
        updateDB(doc, arrOfPairs0);
    }
} else { //ERS190119 TODO autoSplit #53000
    zType=zData.docTypeOCR; //ERS190119 #53000
    alert("ERS190119 AutoDrive found "+zType+" first or last. Which is it?");
}

zData.setbrandprogram(doc); //who and where

alert("#### fax was delivered to number: " + doc.deliveredTo); //JPB180626 added alert doc.deliveredTo
var formatNow = getCurDateAndTime(doc);
var arrOfPairs = [];
var zp="ZPAPER__"; //ERS170626 now in the package
var zStack=zp+"zStack__c"; //"Stack__c"

alert("@@@@zType="+zType);
arrOfPairs.push(zp+"faxType__c", keywordMap[zType]); //JPB180808 added keywordMap for zType
arrOfPairs.push(zp+"Status__c", "New zStack"); //JPB180709 added zStack

alert("ERS180505 doc.deliveredFrom="+doc.deliveredFrom);

//var channel="Fax"; 
//var channel="Email"; //JPB180523
var channel="Fax"; //JPB180523
if (doc.deliveredFrom.indexOf("@")>-1 || doc.deliveredFrom.indexOf(".")>-1) {channel="Email";} //ERS180505 #48101
else if (isNaN(doc.deliveredFrom)) { channel="Scan"; } //JPB180711 added NaN
arrOfPairs.push(zp+"Channel__c",channel);
arrOfPairs.push(zp+"latestFax__c", formatNow);
arrOfPairs.push(zp+"receivedId__c", doc.dbID);
arrOfPairs.push(zp+"newFax__c", "true");
arrOfPairs.push(zp+"Pages__c", X(doc, "X_pages"));
alert("@@@zData.programName="+zData.programName); //JPB180815 added alert #48339
arrOfPairs.push(zp+"Classification__c",zData.programName); //JPB180808 added back in Classification
arrOfPairs.push(zp+"Program_Name__c",zData.programName); //JPB180626 generalized program name //JPB180711 added program names
if (zData.patEnrollQueueId) arrOfPairs.push("OwnerId",zData.patEnrollQueueId);

if (zData.programName === zData.PROGRAM_ZCHARTA) {
	arrOfPairs.push(zp+"Priority__c", "Urgent"); //JPB180711 added Urgent Priority__c
}
else if (zData.programName === zData.PROGRAM_ZPAPYRUS) {  //JPB180711 added (zData.programName === "zPapyrus")
	arrOfPairs.push(zp+"Priority__c", "High"); //JPB180711 added High Priority__c
}
else if (zData.programName === zData.PROGRAM_ZREFERRAL) {  //JPB180711 added (zData.programName === "zReferral")
	arrOfPairs.push(zp+"Priority__c", "Medium"); //JPB180711 added Medium Priority__c
}
else if (zData.programName === zData.PROGRAM_ZCARTA) { //JPB180711 added (zData.programName === "zCARTa")
	arrOfPairs.push(zp+"Priority__c", "Critical");	//JPB180711 added Critical Priority__c
}
else if (zData.programName === zData.PROGRAM_TECFIDERA) { //JPB180806 added (zData.programName === "Tecfidera")
	arrOfPairs.push(zp+"Priority__c", "Special");	//JPB180806 added Special Priority__c
}
else if (zData.programName === zData.PROGRAM_SPINRAZA) { //JPB181022 added (zData.programName === "SPINRAZA")
	arrOfPairs.push(zp+"Priority__c", "Standard");	//JPB180808 added Standard Priority__c}
}
else 
{
	arrOfPairs.push(zp+"Priority__c", "Normal");
}

arrOfPairs.push(zp+"sentFaxTo__c",doc.deliveredTo); //ERS170628 caller id
arrOfPairs.push(zp+"From__c",doc.deliveredFrom);
if (zData.reviewedStatus) {arrOfPairs.push(zp+"Stage__c", zData.reviewedStatus); } else {//ERS190118 #53000
arrOfPairs.push(zp+"Stage__c", "Received"); //ERS170731 #40593
}

alert("Reviewed Status before setting it to Received: " + X(doc, "X_reviewedStatus"));
alert("zData.reviewedStatus = " + zData.reviewedStatus);
var sfId = createAndAttach(doc, zStack, "New " + zData.programName + " zStack received", arrOfPairs); //JPB180626 removed + formatNow from link
alert("#### Stack Received. Attached to: " + sfId);
arrOfPairs = [];
arrOfPairs.push("db-label", "New " + zData.programName + " zStack received "); //JPB180626 relabeled to program JPB180626 removed + formatNow
arrOfPairs.push("db-BATES", sfId + "-STACK");
arrOfPairs.push("X_sfStackId",sfId); //ERS170727 #40447
var signedStatus = "";  //JPB190117 added signature checkbox function
if ("Signed" === zData.reviewedStatus) {
    var now0 = getCurDateAndTime(doc,false,true);
    signedStatus = "Signed at "+now0+"<br/>"; //ERS170909 #40592
}
if (1===1) { //ERS180103 set as Received #41155
    var ba="Received";
    var now0 = getCurDateAndTime(doc,false,true);
	alert("$$$ now0 = " + now0 + ", ba = " + ba);
    arrOfPairs.push("X_reviewedStatus",ba);
    arrOfPairs.push("X_reviews",X(doc,"X_reviews")+ba+" by agent at "+now0+"<br/>" + signedStatus); //ERS170909 #40592
}
alert("@@@ calling updateDB with params: @@@@@@@@@@@@");
alert(arrOfPairs);
alert("@@@ calling updateDB with params: @@@@@@@@@@@@");
updateDB(doc, arrOfPairs);
 /* END */
//--- RULE CONSEQUENCE CODE - END ---

//--- RULE VALIDATION CODE ---
//--- RULE VALIDATION CODE - END ---

</script>
