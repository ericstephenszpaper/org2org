<!--
// Name: zStack Library
// Committer: Prathyusha.Vasireddy@zpaper.com
// Update: Added to update the caserecord type
-->
<script>
//--- RULE JSON REPRESENTATION ---
var ruleJson = {"type":"rool","updated":"2019-01-18 23:03:35","evalContinue":"true","active":true,"button":"","name":"zStack Library","conditions":{"logic":"and","arguments":[{"name":"doc.status","value":"DoNotStack","operation":"not-contains"}]},"consequence":{"doit":""},"ordinal":0}

//--- RULE JSON REPRESENTATION - END ---

//--- RULE CONSEQUENCE CODE ---

//global variables
zData.uploadDir = "integrationDir";

// Queue SFID
zData.patEnrollQueueId = ""; //Need to add this queue in Setup
zData.recTypeRequest = "0124C000000Cj5Y"; //ID of the Case Record Type Request_PS_MVN
zData.programName = null;
zData.Affiliate = "";
zData.sourceName = "Fax";
//MSH180408 zData.productId = "";
zData.productId = null;
//Queue SFID as owner for zStack
zData.ownerId = null;
//program SFID
zData.programId = null;
zData.classification = null;
zData.skipCaseTypeId = null;
zData.generateTiff = false;
zData.caseTypeMap = null;
//CRN170324 TODO doc.clone() done right;
zData.clone = function (doc) {
    var doc0 = [];
    for (var i in doc) {
        doc0[i] = doc[i];
    }
    return doc0;
};
// DEV config
zData.setDevConfig = function (doc) {
    alert("+++ STARTING zData.setDevConfig +++");
    alert("@@@ doc.deliveredTo = " + doc.deliveredTo);
    if (doc.deliveredTo.indexOf("6787271409") > -1) {
        zData.programName = "Entresto Central";
        //entresto Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000ynvB";
        //program SFID
        zData.programId = "a0g5C000000G7NA";
        //entresto Queue SFID
        zData.patEnrollQueueId = "00Gf4000000ynvB";
        zData.classification = "Entresto";
        zData.productId = "a2D5C000000IV8k";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("6787271766") > -1) {
        //zData for TOBI
        zData.programName = "TOBI PodCare";
        //TOBI Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000yz8T";
        //program SFID
        zData.programId = "a0g5C000000G7NA";
        //TOBI Queue SFID
        zData.patEnrollQueueId = "00Gf4000000yz8T";
        zData.classification = "TOBI";
        zData.productId = "a2D5C000000IV8j";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("6787270206") > -1) {
        //zData for NPAF
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDp";
        //program SFID
        zData.programId = "a0g5C000000G7NA";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDp";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270442") > -1) {
        //zData for NPAF Priority
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDq";
        //program SFID
        zData.programId = "a0g5C000000G7NA";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDq";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270207") > -1) {
        //zData for PANO
        zData.programName = "PANO";
        //PANO Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDr";
        //program SFID
        zData.programId = "a0g5C000000G7NA";
        //PANO Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDr";
        zData.classification = "PANO";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270219") > -1) {
        //zData for AIMOVIG
        zData.programName = "AIMOVIG";
        //AIMOVIG Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDn";
        //program SFID
        zData.programId = "a0g5C000000G7NA";
        //AIMOVIG Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDn";
        zData.classification = "AIMOVIG";
        zData.productId = "a2D5C000000IV7N";
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787271035") > -1 || doc.deliveredTo.indexOf("6787271042") > -1) {
        //zData for Cosentyx
        zData.programName = "Cosentyx";
        //Cosentyx Queue SFID as owner for zStack
        zData.ownerId = "00G5C000001UEnx";
        //program SFID
        zData.programId = "a0g5C000000G7NA";
        //Cosentyx Queue SFID
        zData.patEnrollQueueId = "00G5C000001UEnx";
        zData.classification = "Cosentyx";
        if(doc.deliveredTo.indexOf("6787271042") > -1){
            zData.classification = "Cosentyx Direct to SP"; 
        }
         zData.caseTypeMap={
            "012f4000000goyt" : "PEF",
            "012f4000000goyu" : "Copay Referral",
            "012f4000000goz0" : "PAP Referral",
            "0125C000000F1yk" : "Benefit Investigation"
        };
        //zData.productId = "a2D29000000SPLI";
        zData.productId = "a2D5C000000IV7l";
        zData.generateTiff = true;
        //Not create a case when case record type is hotline
        //zData.skipCaseTypeId = ["012f4000000goyy", "012f4000000goyy"];
    } else if (doc.deliveredTo.indexOf("6787271141") > -1) {
        //zData for Mayzent Support Program
        zData.programName = "Mayzent Support Program";
        //Mayzent Support Program Queue SFID as owner for zStack
        zData.ownerId = "00G5C000001UEo2";
        //program SFID
        zData.programId = "a0g5C000000G7NA";
        //Mayzent Support Program Queue SFID
        zData.patEnrollQueueId = "00G5C000001UEo2";
        zData.classification = "Mayzent Support Program";
        zData.productId = null;
        zData.generateTiff = true;
    } else {
        zData.programName = "No Program Identified";
    }
    alert("+++ ENDING zData.setDevConfig +++");
    alert("@@@ zData.programName = " + zData.programName);
    alert("@@@ zData.programId = " + zData.programId);
    alert("@@@ zData.ownerId = " + zData.ownerId);
    alert("@@@ zData.patEnrollQueueId = " + zData.patEnrollQueueId);
    alert("@@@ zData.classification = " + zData.classification);
};

// SIT config
zData.setSITConfig = function (doc) {
    alert("+++ STARTING zData.setSITConfig +++");
    alert("@@@ doc.deliveredTo = " + doc.deliveredTo);
    if (doc.deliveredTo.indexOf("6787271208") > -1) {
        zData.programName = "Entresto Central";
        //entresto Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000ynvB";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //entresto Queue SFID
        zData.patEnrollQueueId = "00Gf4000000ynvB";
        zData.classification = "Entresto";
        zData.productId = "a2Df4000000cDnP";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("6787271210") > -1) {
        //zData for TOBI
        zData.programName = "TOBI PodCare";
        //TOBI Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000yz8T";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //TOBI Queue SFID
        zData.patEnrollQueueId = "00Gf4000000yz8T";
        zData.classification = "TOBI";
        zData.productId = "a2Df4000000cESI";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("6787271216") > -1) {
        //zData for NPAF
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDp";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDp";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787271218") > -1) {
        //zData for NPAF
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDq";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDq";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787271221") > -1) {
        //zData for PANO
        zData.programName = "PANO";
        //PANO Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDr";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //PANO Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDr";
        zData.classification = "PANO";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787271225") > -1) {
        //zData for AIMOVIG
        zData.programName = "AIMOVIG";
        //AIMOVIG Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDn";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //AIMOVIG Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDn";
        zData.classification = "AIMOVIG";
        zData.productId = "a2Df40000009PEM";
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270937") > -1 || doc.deliveredTo.indexOf("6787270953") > -1) {
        //zData for Cosentyx
        zData.programName = "Cosentyx";
        //Cosentyx Queue SFID as owner for zStack
        zData.ownerId = "00G5B000001Dpyz";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Cosentyx Queue SFID
        zData.patEnrollQueueId = "00G5B000001Dpyz";
        zData.classification = "Cosentyx";
        if(doc.deliveredTo.indexOf("6787270953") > -1){
            zData.classification = "Cosentyx Direct to SP"; 
        }
        zData.caseTypeMap={
        "012f4000000goyt" : "PEF",
        "012f4000000goyu" : "Copay Referral",
        "012f4000000goz0" : "PAP Referral",
        "012f4000000OS0R" : "Benefit Investigation"
        };
        zData.productId = "a2Df40000009PEkEAM";
        zData.generateTiff = true;
        //Not create a case when case record type is hotline
        //zData.skipCaseTypeId = ["012f4000000goyy", "012f4000000goyy"];
    } else if (doc.deliveredTo.indexOf("6787271147") > -1) {
        //zData for Mayzent Support Program
        zData.programName = "Mayzent Support Program";
        //Mayzent Support Program Queue SFID as owner for zStack
        zData.ownerId = "00G5B000001DqUi";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Mayzent Support Program Queue SFID
        zData.patEnrollQueueId = "00G5B000001DqUi";
        zData.classification = "Mayzent Support Program";
        zData.productId = null;
        zData.generateTiff = true;
    } else {
        zData.programName = doc.deliveredTo; //ERS170626
    }
    alert("+++ ENDING zData.setSITConfig +++");
    alert("@@@ zData.programName = " + zData.programName);
    alert("@@@ zData.programId = " + zData.programId);
    alert("@@@ zData.ownerId = " + zData.ownerId);
    alert("@@@ zData.patEnrollQueueId = " + zData.patEnrollQueueId);
    alert("@@@ zData.classification = " + zData.classification);
};
// UAT config
zData.setUATConfig = function (doc) {
    alert("+++ STARTING zData.setUATConfig +++");
    alert("@@@ doc.deliveredTo = " + doc.deliveredTo);
    if (doc.deliveredTo.indexOf("6787271437") > -1) { //ERS70421 indexOf is safer #36411
        zData.programName = "Entresto Central";
        //entresto Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000ynvB";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //entresto Queue SFID
        zData.patEnrollQueueId = "00Gf4000000ynvB";
        zData.classification = "Entresto";
        zData.productId = "a2Df4000000cDnP";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("6787271785") > -1) {
        //zData for TOBI
        zData.programName = "TOBI PodCare";
        //TOBI Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000yz8T";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //TOBI Queue SFID
        zData.patEnrollQueueId = "00Gf4000000yz8T";
        zData.classification = "TOBI";
        zData.productId = "a2Df4000000cESI";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("6787270247") > -1) {
        //zData for NPAF
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDp";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDp";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270446") > -1) {
        //zData for NPAF
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDq";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDq";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270251") > -1) {
        //zData for PANO
        zData.programName = "PANO";
        //PANO Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDr";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //PANO Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDr";
        zData.classification = "PANO";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270256") > -1) {
        //zData for AIMOVIG
        zData.programName = "AIMOVIG";
        //AIMOVIG Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDn";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //AIMOVIG Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDn";
        zData.classification = "AIMOVIG";
        zData.productId = "a2Df40000009PEM";
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787271025") > -1 || doc.deliveredTo.indexOf("6787271033") > -1) {
        //zData for Cosentyx
        zData.programName = "Cosentyx";
        //Cosentyx Queue SFID as owner for zStack
        zData.ownerId = "00G1F000000JycS";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Cosentyx Queue SFID
        zData.patEnrollQueueId = "00G1F000000JycS";
        zData.classification = "Cosentyx";
        if(doc.deliveredTo.indexOf("6787271033") > -1){
            zData.classification = "Cosentyx Direct to SP"; 
        }
        zData.caseTypeMap={
         "012f4000000goyt" : "PEF",
         "012f4000000goyu" : "Copay Referral",
         "012f4000000goz0" : "PAP Referral",
         "0121F000000D98z" : "Benefit Investigation"
        };
        zData.productId = "a2Df40000009PEkEAM";
        zData.generateTiff = true;
        //Not create a case when case record type is hotline
        //zData.skipCaseTypeId = ["012f4000000goyy", "012f4000000goyy"];
    } else if (doc.deliveredTo.indexOf("6787271152") > -1) {
        //zData for Mayzent Support Program
        zData.programName = "Mayzent Support Program";
        //Mayzent Support Program Queue SFID as owner for zStack
        zData.ownerId = "00G29000001SOtF";
        //program SFID
        zData.programId = "a0g29000001A1j1";
        //Mayzent Support Program Queue SFID
        zData.patEnrollQueueId = "00G29000001SOtF";
        zData.classification = "Mayzent Support Program";
        zData.productId = "null";
        zData.generateTiff = true;
    } else {
        zData.programName = doc.deliveredTo; //ERS170626
    }
    alert("+++ ENDING zData.setUATConfig +++");
    alert("@@@ zData.programName = " + zData.programName);
    alert("@@@ zData.Affiliate = " + zData.Affiliate);
};

//Traning config
zData.setTrainingConfig = function (doc) {
    alert("+++ STARTING zData.setTrainingConfig +++");
    alert("@@@ doc.deliveredTo = " + doc.deliveredTo);
    if (doc.deliveredTo.indexOf("6787271286") > -1) { //ERS70421 indexOf is safer #36411
        zData.programName = "Entresto Central";
        //entresto Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000ynvB";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //entresto Queue SFID
        zData.patEnrollQueueId = "00Gf4000000ynvB";
        zData.classification = "Entresto";
        zData.productId = "a2Df4000000cDnP";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("6787271775") > -1) {
        //zData for TOBI
        zData.programName = "TOBI PodCare";
        //TOBI Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000yz8T";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //TOBI Queue SFID
        zData.patEnrollQueueId = "00Gf4000000yz8T";
        zData.classification = "TOBI";
        zData.productId = "a2Df4000000cESI";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("6787270206") > -1) {
        //zData for NPAF
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDp";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDp";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270454") > -1) {
        //zData for NPAF priority
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDq";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDq";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270207") > -1) {
        //zData for PANO
        zData.programName = "PANO";
        //PANO Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDr";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //PANO Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDr";
        zData.classification = "PANO";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270219") > -1) {
        //zData for AIMOVIG
        zData.programName = "AIMOVIG";
        //AIMOVIG Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDn";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //AIMOVIG Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDn";
        zData.classification = "AIMOVIG";
        zData.productId = "a2Df40000009PEM";
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270941") > -1 || doc.deliveredTo.indexOf("6787270950") > -1) {
        //zData for Cosentyx
        zData.programName = "Cosentyx";
        //Cosentyx Queue SFID as owner for zStack
        zData.ownerId = "00G0n000000rcxZ";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Cosentyx Queue SFID
        zData.patEnrollQueueId = "00G0n000000rcxZ";
        zData.classification = "Cosentyx";
        if(doc.deliveredTo.indexOf("6787270950") > -1){
            zData.classification = "Cosentyx Direct to SP"; 
        }
        zData.productId = null;
        zData.generateTiff = true;
        //Not create a case when case record type is hotline
        //zData.skipCaseTypeId = ["012f4000000goyy", "012f4000000goyy"];
    } else if (doc.deliveredTo.indexOf("-----------") > -1) {
        //zData for Mayzent Support Program
        zData.programName = "Mayzent Support Program";
        //Mayzent Support Program Queue SFID as owner for zStack
        zData.ownerId = "---------";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Mayzent Support Program Queue SFID
        zData.patEnrollQueueId = "-----------";
        zData.classification = "Mayzent Support Program";
        zData.productId = null;
        zData.generateTiff = true;
    } else {
        zData.programName = doc.deliveredTo; //ERS170626
    }
    alert("+++ ENDING zData.setTrainingConfig +++");
    alert("@@@ zData.programName = " + zData.programName);
    alert("@@@ zData.Affiliate = " + zData.Affiliate);
};
//HotFix config
zData.setProdConfig = function (doc) {
    alert("+++ STARTING zData.setProdConfig +++");
    alert("@@@ doc.deliveredTo = " + doc.deliveredTo);
    if (doc.deliveredTo.indexOf("6787271230") > -1 || doc.deliveredTo.indexOf("8442635644") > -1) { //ERS70421 indexOf is safer #36411
        zData.programName = "Entresto Central";
        //entresto Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000ynvB";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //entresto Queue SFID
        zData.patEnrollQueueId = "00Gf4000000ynvB";
        zData.classification = "Entresto";
        zData.productId = "a2Df4000000cDnP";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("8773108063") > -1 || doc.deliveredTo.indexOf("6787271779") > -1) {
        //zData for TOBI
        zData.programName = "TOBI PodCare";
        //TOBI Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000yz8T";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //TOBI Queue SFID
        zData.patEnrollQueueId = "00Gf4000000yz8T";
        zData.classification = "TOBI";
        zData.productId = "a2Df4000000cESI";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("8558172711") > -1 || doc.deliveredTo.indexOf("6787270275") > -1
        || doc.deliveredTo.indexOf("8662779335") > -1 || doc.deliveredTo.indexOf("8664701750") > -1
        || doc.deliveredTo.indexOf("8772616332") > -1) {
        //zData for NPAF
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDp";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDp";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("8774886697") > -1 || doc.deliveredTo.indexOf("6787270458") > -1
        || doc.deliveredTo.indexOf("8003449567") > -1) {
        //zData for NPAF priority
        zData.programName = "NPAF";
        //NPAF priority Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDq";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF priority Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDq";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270280") > -1 || doc.deliveredTo.indexOf("8888914924") > -1
        || doc.deliveredTo.indexOf("8662729439") > -1 || doc.deliveredTo.indexOf("8777052282") > -1) {
        //zData for PANO
        zData.programName = "PANO";
        //PANO Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDr";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //PANO Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDr";
        zData.classification = "PANO";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("8338731499") > -1 || doc.deliveredTo.indexOf("6787270282") > -1) {
        //zData for AIMOVIG
        zData.programName = "AIMOVIG";
        //AIMOVIG Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDn";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //AIMOVIG Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDn";
        zData.classification = "AIMOVIG";
        zData.productId = "a2Df40000009PEMEA2";
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("8003439117") > -1 || doc.deliveredTo.indexOf("8003934675") > -1) {
        //zData for Cosentyx
        zData.programName = "Cosentyx";
        //Cosentyx Queue SFID as owner for zStack
        zData.ownerId = "00Gf40000030akp";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Cosentyx Queue SFID
        zData.patEnrollQueueId = "00Gf40000030akp";
        zData.classification = "Cosentyx";
        if(doc.deliveredTo.indexOf("8003934675") > -1){
            zData.classification = "Cosentyx Direct to SP"; 
        }
        zData.caseTypeMap={
        "012f4000000goyt" : "PEF",
        "012f4000000goyu" : "Copay Referral",
        "012f4000000goz0" : "PAP Referral",
        "012f4000000OS0R" : "Benefit Investigation"
        };
        //zData.productId = "a2D29000000SPLI";
        zData.productId = "a2Df40000009PEkEAM";
        zData.generateTiff = true;
        //Not create a case when case record type is hotline
        //zData.skipCaseTypeId = ["012f4000000goyy", "012f4000000goyy"];
    } else if (doc.deliveredTo.indexOf("0000000000") > -1) {
        //zData for Mayzent Support Program
        zData.programName = "Mayzent Support Program";
        //Mayzent Support Program Queue SFID as owner for zStack
        zData.ownerId = "-----------";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Mayzent Support Program Queue SFID
        zData.patEnrollQueueId = "------------";
        zData.classification = "AIMOVIG";
        zData.productId = "null";
        zData.generateTiff = true;
    } else {
        zData.programName = doc.deliveredTo; //ERS170626
    }
    alert("+++ ENDING zData.setProdConfig +++");
    alert("@@@ zData.programName = " + zData.programName);
    alert("@@@ zData.Affiliate = " + zData.Affiliate);
};


//PROD config
zData.setProdConfig = function (doc) {
    alert("+++ STARTING zData.setProdConfig +++");
    alert("@@@ doc.deliveredTo = " + doc.deliveredTo);
    if (doc.deliveredTo.indexOf("6787271230") > -1 || doc.deliveredTo.indexOf("8442635644") > -1) { //ERS70421 indexOf is safer #36411
        zData.programName = "Entresto Central";
        //entresto Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000ynvB";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //entresto Queue SFID
        zData.patEnrollQueueId = "00Gf4000000ynvB";
        zData.classification = "Entresto";
        zData.productId = "a2Df4000000cDnP";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("8773108063") > -1 || doc.deliveredTo.indexOf("6787271779") > -1) {
        //zData for TOBI
        zData.programName = "TOBI PodCare";
        //TOBI Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000yz8T";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //TOBI Queue SFID
        zData.patEnrollQueueId = "00Gf4000000yz8T";
        zData.classification = "TOBI";
        zData.productId = "a2Df4000000cESI";
        zData.generateTiff = true; //kps180406 updated to include TIF
    } else if (doc.deliveredTo.indexOf("8558172711") > -1 || doc.deliveredTo.indexOf("6787270275") > -1
        || doc.deliveredTo.indexOf("8662779335") > -1 || doc.deliveredTo.indexOf("8664701750") > -1
        || doc.deliveredTo.indexOf("8772616332") > -1) {
        //zData for NPAF
        zData.programName = "NPAF";
        //NPAF Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDp";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDp";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("8774886697") > -1 || doc.deliveredTo.indexOf("6787270458") > -1
        || doc.deliveredTo.indexOf("8003449567") > -1) {
        //zData for NPAF priority
        zData.programName = "NPAF";
        //NPAF priority Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDq";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //NPAF priority Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDq";
        zData.classification = "NPAF";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("6787270280") > -1 || doc.deliveredTo.indexOf("8888914924") > -1
        || doc.deliveredTo.indexOf("8662729439") > -1 || doc.deliveredTo.indexOf("8777052282") > -1) {
        //zData for PANO
        zData.programName = "PANO";
        //PANO Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDr";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //PANO Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDr";
        zData.classification = "PANO";
        zData.productId = null;
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("8338731499") > -1 || doc.deliveredTo.indexOf("6787270282") > -1) {
        //zData for AIMOVIG
        zData.programName = "AIMOVIG";
        //AIMOVIG Queue SFID as owner for zStack
        zData.ownerId = "00Gf4000000gbDn";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //AIMOVIG Queue SFID
        zData.patEnrollQueueId = "00Gf4000000gbDn";
        zData.classification = "AIMOVIG";
        zData.productId = "a2Df40000009PEMEA2";
        zData.generateTiff = true;
    } else if (doc.deliveredTo.indexOf("8003439117") > -1 || doc.deliveredTo.indexOf("8003934675") > -1) {
        //zData for Cosentyx
        zData.programName = "Cosentyx";
        //Cosentyx Queue SFID as owner for zStack
        zData.ownerId = "00Gf40000030akp";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Cosentyx Queue SFID
        zData.patEnrollQueueId = "00Gf40000030akp";
        zData.classification = "Cosentyx";
        if(doc.deliveredTo.indexOf("8003934675") > -1){
            zData.classification = "Cosentyx Direct to SP"; 
        }
        zData.caseTypeMap={
        "012f4000000goyt" : "PEF",
        "012f4000000goyu" : "Copay Referral",
        "012f4000000goz0" : "PAP Referral",
        "012f4000000OS0R" : "Benefit Investigation"
        };
        //zData.productId = "a2D29000000SPLI";
        zData.productId = "a2Df40000009PEkEAM";
        zData.generateTiff = true;
        //Not create a case when case record type is hotline
        //zData.skipCaseTypeId = ["012f4000000goyy", "012f4000000goyy"];
    } else if (doc.deliveredTo.indexOf("0000000000") > -1) {
        //zData for Mayzent Support Program
        zData.programName = "Mayzent Support Program";
        //Mayzent Support Program Queue SFID as owner for zStack
        zData.ownerId = "-----------";
        //program SFID
        zData.programId = "a0gf4000000OhMa";
        //Mayzent Support Program Queue SFID
        zData.patEnrollQueueId = "------------";
        zData.classification = "AIMOVIG";
        zData.productId = "null";
        zData.generateTiff = true;
    } else {
        zData.programName = doc.deliveredTo; //ERS170626
    }
    alert("+++ ENDING zData.setProdConfig +++");
    alert("@@@ zData.programName = " + zData.programName);
    alert("@@@ zData.Affiliate = " + zData.Affiliate);
};

/* this is an untested function to detect the sandbox name and assign values */ //ERS170522 activating
zData.orgSwitch = function (doc) { //ERS170512
    alert("sfUser is ******* :: " + doc.sfUserName);
    var sfUserName = doc.sfUserName.toUpperCase();
    if (sfUserName.indexOf("DEV") > -1) {
        alert("@@@ In the DEV org!");
        zData.setDevConfig(doc);
    } else if (sfUserName.indexOf("HotFix") > -1) {
        alert("@@@ In the Mock HotFix org!");
        zData.setHotFixConfig(doc);
    } else if (sfUserName.indexOf("TEST") > -1) {
        alert("@@@ In the TEST org!");
        zData.setTestConfig(doc);
    } else if (sfUserName.indexOf("TRAINING") > -1) {
        alert("@@@ In the TRAINING org!");
        zData.setTrainingConfig(doc);
    } else if (sfUserName.indexOf("SIT") > -1) {
        alert("@@@ In the SIT org!");
        zData.setSITConfig(doc);
    } else if (sfUserName.indexOf("UAT") > -1) {
        alert("@@@ In the UAT org!");
        zData.setUATConfig(doc);
    } else {
        alert("@@@ In the PROD org!");
        zData.setProdConfig(doc);
    }
};
zData.orgSwitch(doc); //ERS170822

/* This function needs to be added to every rule to help assure that rules do not get accidentally triggered */
/* Add this functionality to the rules engine itself? */
zData.clearTriggerCondition = function (doc, triggerField) { //ERS170512 moved to library
    var arrOfPairs = [];
    arrOfPairs.push(triggerField, "");
    updateDB(doc, arrOfPairs);
};

zData.initializeStack = function (doc, stackFolder, stackId) { //ERS170512 moved to library
    var arrOfPairs = [];
    var today = new Date();
    var curMonth = today.getMonth() + 1;
    var finalRootFolder = zData.programName + "-Archive"; //bates of the Archive folder
    var yyyyMMFolderName = today.getFullYear() + (curMonth > 9 ? curMonth + "" : "0" + curMonth);
    var yyyyMMFolder = finalRootFolder + "-" + yyyyMMFolderName;
    alert("@@@ stackFolder is - " + stackFolder);
    alert("@@@ finalRootFolder is - " + finalRootFolder);
    alert("@@@ yyMMFolder is - " + yyyyMMFolder);
    alert("@@@ creating new stack destinaion folder with name - " + stackFolder);
    /* Refresh the current folder */
    reloadById(doc, X(doc, "X_curFolder"));
    /* same value for BATES and label */
    /* The folder structure will look like this: /201608/3CX3CX/123456789-STACK */
    createFolder(doc, finalRootFolder, yyyyMMFolder, yyyyMMFolderName);
    createFolder(doc, yyyyMMFolder, stackFolder, stackFolder);
    alert("@@@@ Moving the stack document into the stack folder: " + stackFolder);
    moveDocument(doc, "", stackFolder);
    arrOfPairs.push("X_indexInitialized", "true");
    arrOfPairs.push("X_stack", stackId);
    arrOfPairs.push("db-BATES", doc.kbData.groupID.substring(1) + "-" + stackId + "-STACK");
    /* Stack Labelling Change */
    //MSH181004 unused var dtStamp = getCurDateAndTime(doc, false);
    /* arrOfPairs.push("db-label","Stack - " + dtStamp); */
    updateDB(doc, arrOfPairs);
};

zData.countPages = function (doc, pageRange) { //ERS170512 moved to library
    var pages = pageRange.split(",");
    if (!pages) {
        pages = [pageRange];
    }
    return pages.length + "";
};

zData.exposePDF = function (doc, sfId, pageRange) { //ERS170522 added pageRange
    var formatNow = getCurDateAndTime(doc, false, true);
    var arrOfPairs = [];
    var nowTimeStamp = new Date().getTime() + "";
    var fileName = getCurDate(doc) + " New Fax.pdf";

    alert("@@@fileName = " + fileName);
    createDirectory(doc, zData.uploadDir, nowTimeStamp);

    //AN170522 should xPages be passed in as a variable?
    var xPages = X(doc, "X_position");
    if (pageRange) {
        xPages = pageRange; //ERS170522
    }
    alert("@@@@@ Calling splitPDF to split off pages to upload as PDF, pages = " + xPages + ", nowTimeStamp = " + nowTimeStamp);
    var response = splitPDF(doc, xPages, zData.uploadDir, nowTimeStamp, fileName);
    alert("@@@@ response from splitPDF = " + response);
    var newPDFName = X(doc, "newPDF", response);
    alert("@@@@ split PDF FileName = " + newPDFName);
    var uploadURL = "http://localhost:8080/myfileforce/uploadToCloud.jsp?SFid=NEW&SFpid=" + sfId + "&SForg=" + doc.sfOrg + "&label=" + fileName + "&serverFile=" + newPDFName + "&Description=File attached as PDF";
    alert("#### Upload native PDF with " + uploadURL);
    var r = wget(doc, uploadURL); //ERS170512 was zData.uploadURL
    alert("#### Fax Received. Attached to: " + sfId);
    // Finally, delete the folder and all contents.
    cleanupDirectory(doc, zData.uploadDir, nowTimeStamp);
    // Now set the label in our Snippet
    arrOfPairs = [];
    arrOfPairs.push("db-label", "New file " + formatNow);
    arrOfPairs.push("db-BATES", sfId + "-STACK");
    updateDB(doc, arrOfPairs);
};
/* END */

//--- RULE CONSEQUENCE CODE - END ---

//--- RULE VALIDATION CODE ---
//--- RULE VALIDATION CODE - END ---

</script>
