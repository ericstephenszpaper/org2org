<!--
// Name: Reject Page
// Committer: Prathyusha.vasireddy@zpaper.com
// Update: updated
-->
<script>
//--- RULE JSON REPRESENTATION ---
var ruleJson = {"type":"rool","updated":"2019-05-15 18:50:28","active":true,"button":"Reject","name":"Reject Page","conditions":{"logic":"and","arguments":[{"name":"doc.X(\"X_buttonAction\")","value":"Reject","operation":"equals"}]},"consequence":{"doit":""},"ordinal":8}

//--- RULE JSON REPRESENTATION - END ---

//--- RULE CONSEQUENCE CODE ---
//JPB190506 updated rule for Sales Demo Org
alert("@@@@ Reject Page Rule Fired @@@#");
var dq="~";
function countPages(pageRange) {
  var pages = pageRange.split(",");
  return pages.length + "";
}
//ERS190504 testing for zzAction static resources

var caseId = X(doc, "X_ZPAPER__Case__c");
var stackId = X(doc, "X_stack");
var sfStackId = X(doc, "X_sfStackId");
alert("@@@ sfStackId = " + sfStackId);
var contactId = X(doc, "X_ZPAPER__Patient__c");
var patientId=contactId; //TODO
var providerId = X(doc, "X_ZPAPER__Provider__c");
var patientFirstName = X(doc, "X_ZPAPER__FirstName__c");
var patientLastName = X(doc, "X_ZPAPER__LastName__c");
var patientDOB = X(doc, "X_ZPAPER__Birthdate__c");
var stackFolder = stackId + "-STACK";
var deliveredTo = doc.deliveredTo; 
var deliveredFrom = doc.deliveredFrom;
var faxType = X(doc, "X_ZPAPER__faxType__c");
var sfUserID = doc.kbData.sfUserID; 
if(!sfUserID){
    sfUserID= getSFField(doc, "User","Id","username='"+doc.kbData.remoteUser+"'");
}
alert("PV190415 sfUserID : " +sfUserID);
if (contactId && contactId.length > 0) {
    var contactFlds = getSFFields(doc, "Contact", "FirstName,LastName", null, contactId);
    patientFirstName = X(doc, "FirstName", contactFlds);
    patientLastName = X(doc, "LastName", contactFlds);
}

/* Clear the trigger that invoked this rule */

zData.clearTriggerCondition(doc,"X_buttonAction");
zData.setbrandprogram(doc);
var indexInitialized = X(doc,"X_indexInitialized");
if (!indexInitialized || 0 === indexInitialized.length) {
    stackId = new Date().getTime() + "";
    stackFolder = stackId + "-STACK";
    zData.initializeStack(doc,stackFolder, deliveredTo, stackId);
}
var curIndexPages = X(doc, "X_rejectedPages");
if (curIndexPages && curIndexPages.length > 0) {
  curIndexPages += ",";
}
curIndexPages += X(doc, "X_idxPages");
var arrOfPairs = [];
arrOfPairs.push("X_rejectedPages", curIndexPages);
arrOfPairs.push("X_reviewedStatus","Rejected");
arrOfPairs.push("X_docType",faxType); 
alert("@@@@ Parent X_ZPAPER__faxType__c = " + faxType);
//updateDB(doc,arrOfPairs);

var pageRange = X(doc,"X_idxPages");
var newSnippetID = splitDocumentForIndex(doc, "reject", pageRange,arrOfPairs);
/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE zSTACK SNIPPET */

/* CRN160825 Set the page count so that it does not have the parent page count */
var pageCount = zData.countPages(doc,pageRange); //ERS190326 #57472 missing zData. and needs doc
alert("@@@@ pageCount = " + pageCount);

var channel="Fax"; //Pv190416 updated for case type
if (doc.deliveredFrom.indexOf("@")>-1 || doc.deliveredFrom.indexOf(".")>-1) {channel="Email";} 
else if (isNaN(doc.deliveredFrom)) {channel="Scan";} 

var zp="ZPAPER__"; 
arrOfPairs = [];
arrOfPairs.push(zp+"Program_Name__c", zData.programName);
arrOfPairs.push(zp+"sentFaxTo__c",deliveredTo); 
arrOfPairs.push(zp+"From__c",deliveredFrom); 
arrOfPairs.push(zp+"Stage__c", "Rejected"); 
arrOfPairs.push(zp+"Parent__c",sfStackId);
arrOfPairs.push(zp+"Channel__c",channel);

var notes = doc.kbData.comments + "";   
if (notes) {
    arrOfPairs.push("Notes__c", notes);
}
if (providerId && providerId.length > 0) {
    arrOfPairs.push("ZPAPER__Provider__c", providerId);
    //if (attachPath.indexOf(providerId)==-1) attachPath+=","+providerId;
}
if (patientId && patientId.length > 0) {
    arrOfPairs.push("ZPAPER__Patient__c", patientId);
    //if (attachPath.indexOf(patientId)==-1) attachPath+=","+patientId;
}
if (caseId && caseId.length > 0) {
    arrOfPairs.push("ZPAPER__Case__c", caseId);
}  
arrOfPairs.push("X_docType",faxType); 
arrOfPairs.push("X_ZPAPER__faxType__c",faxType.trim());
arrOfPairs.push("X_ZPAPER__Priority__c", "Immediate");

zData.programName = X(doc,"X_ZPAPER__Classification__c"); 
arrOfPairs.push(zp+"Classification__c", zData.programName);
arrOfPairs.push("OwnerId",sfUserID);  //Udated for remote user PV190420
arrOfPairs.push("ZPAPER__Status__c", "Rejected"); //PV190422 Updated for incoming status to be Rejected
var zStack=zp+"zStack__c"; 
var formatNow=getCurDateAndTime(doc);
var sfId = createAndAttach(doc, zStack, "Document Rejected on " + formatNow, arrOfPairs) + ""; //JPB190419 changed label
var childStackNumber = getSFField(doc, zStack, "Name", null, sfId); 
var childStackId = sfId;
arrOfPairs = [];
arrOfPairs.push("X_pages",pageCount);
arrOfPairs.push("db-pages",pageCount);
if (1===1) { 
    var now0 = getCurDateAndTime(doc,false,true);
    arrOfPairs.push("X_reviewedStatus","Rejected"); 
    arrOfPairs.push(zp+"Status__c", "Rejected");
    arrOfPairs.push("X_reviews","Rejected by "+doc.kbData.remoteUser+" at "+now0+"<br/>"); // PV190417 updated for doc set component check box
    arrOfPairs.push("X_ZPAPER__faxType__c",faxType);
    arrOfPairs.push("X_buttonAction","");
}
arrOfPairs.push("db-label", patientFirstName + " " + patientLastName + " - " + zData.programName + " "+ zData.documentTypeMap[faxType] +" - Document " + childStackNumber); //JPB190419 changed label
updateDB(doc,arrOfPairs);

attach(doc, "Rejected-" +stackId, sfStackId); // PV190418 updated to update doc on doc set component

/* Attach the split document to Contact record if required */
alert("@@@@ attaching to a Contact? contactId = " + contactId);
if (contactId && contactId.length > 0) {
    attach(doc, "Rejected-" + stackId, contactId);
}
else if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {
    var ctcArrOfPairs = [];
    ctcArrOfPairs.push("FirstName", patientFirstName);
    ctcArrOfPairs.push("LastName", patientLastName);
    ctcArrOfPairs.push("BirthDate", patientDOB);
    ctcArrOfPairs.push("OwnerId",sfUserID);
    contactId = createAndAttach(doc, "Contact", "Rejected-" + stackId, ctcArrOfPairs);
    alert("@@@@@@@ NEW CONTACT CREATED WITH ID: " + contactId);
    // clear out the "New Patient" fields
    addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__FirstName__c" + dq + ").val(" + dq + "" + dq + "); ");
    addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__LastName__c" + dq + ").val(" + dq + "" + dq + "); ");
    addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__Birthdate__c" + dq + ").val(" + dq + "" + dq + "); ");
    addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__Birthdate__c_readable" + dq + ").val(" + dq + "NONE" + dq + "); ");
    // set the Patient lookup fields
    addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__Patient__c" + dq + ").val(" + dq + contactId + dq + "); ");
    addPostExecutionScript(doc, " $(" + dq + "#ZPAPER__Patient__c_Name" + dq + ").val(" + dq + patientFirstName + " " + patientLastName + dq + "); ");
}

var providerFirstName = "";
var providerLastName = "";
var provider = X(doc, "X_Primary_Care_Physician__c");
if (provider && provider.length > 0) {
    var providerFlds = getSFFields(doc, "Contact", "FirstName,LastName", null, provider);
    providerFirstName = X(doc, "FirstName", providerFlds);
    providerLastName = X(doc, "LastName", providerFlds);
}
if (1===0) { //ERS170909 #40592 not standard
/*
if (contactId && contactId.length > 0 && provider && provider.length > 0) {
    arrOfPairs = [];
    arrOfPairs.push("Primary_Care_Physician__c", provider);
    updateSFRecord(doc,"Contact",contactId,arrOfPairs);
} */
}
arrOfPairs = [];
arrOfPairs.push("Status", "New");
arrOfPairs.push("Origin", channel);
arrOfPairs.push("Description", doc.kbData.comments);
arrOfPairs.push("Subject", "Document Rejected");
arrOfPairs.push("OwnerId",sfUserID);
if (1===0) { //ERS170909 #40592 not standard
/*    arrOfPairs.push("Notes__c", doc.kbData.comments);
    arrOfPairs.push("Provider_First_Name__c", providerFirstName);
    arrOfPairs.push("Provider_Last_Name__c", providerLastName);*/
}
alert("@@@@@@@ SETTING ContactId on Case creation? " + contactId);
if (contactId && contactId.length > 0) {
    arrOfPairs.push("ContactId", contactId);
}
if (providerId && providerId.length > 0) {
        
    arrOfPairs.push("AccountId", providerId); 
}

alert("@@@@ Creating New Case for Snippet: " + newSnippetID + ", doc.dbID = " + doc.dbID);
caseId = createAndAttach(doc, "Case", "Rejected-" + ((patientFirstName?patientFirstName:"") + (patientLastName?patientLastName:"") + "-") + stackId, arrOfPairs);
alert("@@@@@ caseId for Rejecton: " + caseId);
if (caseId && caseId.length > 0) {
    arrOfPairs1=[];
    arrOfPairs1.push("ZPAPER__Case__c", caseId);
    updateSFRecord(doc,"ZPAPER__zStack__c",childStackId,arrOfPairs1);

    arrOfPairs = [];
    if (contactId && contactId.length > 0) {
        arrOfPairs.push("WhoId", contactId);
    }
    arrOfPairs.push("WhatId", caseId);
    arrOfPairs.push("Subject", "Indexed Document Rejected"); //JPB190419 changed label
    arrOfPairs.push("Status", "Not Started"); 
    var sfId = createAndAttach(doc, "Task", "Rejected Document -" + ((patientFirstName?patientFirstName:"") + (patientLastName?patientLastName:"") + "-") + stackId, arrOfPairs);
}//JPB190419 updated label

/* Place the split document into the stack folder */
alert("@@@@@@ Moving the rejected pages document into the final stack folder: " + stackFolder);//
//moveDocument(doc,"",stackFolder);

unlockDocument(doc);

track(doc, "rejected", doc.BATES, pageCount);
addPostExecutionScript(doc, "nextPage(~rejected~);updateDEStatus(~rejected:" + pageRange + "~);");

/* end of rule */

//--- RULE CONSEQUENCE CODE - END ---

//--- RULE VALIDATION CODE ---

//--- RULE VALIDATION CODE - END ---

</script>
