<!--
// Name: Import HL7 CCD
// Committer: eric.stephens@zpaper.com
// Update: ERS190208; ERS190208 #56270 set the patient; ERS190208 #56270; ERS190208 CCD
-->
<script>
//--- RULE JSON REPRESENTATION ---
var ruleJson = {"type":"rool","updated":"2019-02-08 18:23:31","active":true,"button":"HL7CCD","name":"Import HL7 CCD","conditions":{"logic":"or","arguments":[{"name":"doc.X(\"X_buttonAction\")","value":"HL7CCD","operation":"equals"},{"name":"doc.deliveredFrom","value":"CCD","operation":"contains"}]},"consequence":{"doit":""},"ordinal":6}

//--- RULE JSON REPRESENTATION - END ---

//--- RULE CONSEQUENCE CODE ---
alert("Use JSON and PDF"); //ERS190126
//TODO find or create patient
//TODO create Opportunity

//create a stack
//look up patient FN,LN, DOB
//if not found make a Lead
//create a Case attached Lead or Patient

var keywords=["CCD:Continuity of Care"];
var keywordMap={}; //JPB180808 added keywordMap to match docType
keywordMap["CCD"] ="CCD:Continuity of Care";
//ERS190119 TODO all of these docType keywordMap ideas need to be refactor

var zType="CCD";
zData.setbrandprogram(doc); //who and where
doc.deliveredFrom="HL7CCD"; zData.programName="HL7CCD"; //ERS190202 TODO //ERS190206 CCD

alert("#### fax was delivered to number: " + doc.deliveredTo); //JPB180626 added alert doc.deliveredTo
var formatNow = getCurDateAndTime(doc);
var arrOfPairs = [];
var zp="ZPAPER__"; //ERS170626 now in the package
var zStack=zp+"zStack__c"; //"Stack__c"

//find Patient (Account,Contact,Lead)
var pId=""; var pName=null;
var HL7data=X(doc,"X_HL7");
//alert("HL7="+HL7data);
if (HL7data.indexOf("{\"patient")===0) { //ERS190207 moved up
    alert("before eval");
    eval("zData.patient=("+HL7data+")['patient']"); //HMBAWT
    alert("after eval");
    try {
        alert("patient="+zData.patient);
        if (zData.patient) {
            pName=zData.patient.firstName+" "+zData.patient.lastName;
            if (!pId || 0 === pId.length()) { pId = getSFRecordID(doc, "Account", {"Name":pName} );}
            if (!pId || 0 === pId.length()) {
                pId = getSFRecordID(doc, "Contact", 
                    {"LastName":zData.patient.lastName,"FirstName":zData.patient.firstName,"Birthdate":zData.patient.birthDate} 
                );
            }
            if (!pId || 0 === pId.length()) {
                pId = getSFRecordID(doc, "Lead", 
                    {"Name":pName} 
                );
            }
            if (!pId || 0 === pId.length()) { //Create a Contact for Patient
                arrOfPairs = [];
                arrOfPairs.push("RecordTypeId", "012f4000000UkShAAK"); //ERS190206 TODO lookup for Patient different in HC
                arrOfPairs.push("LastName",zData.patient.lastName);
                arrOfPairs.push("FirstName",zData.patient.firstName);
                arrOfPairs.push("Birthdate",zData.patient.birthDate);
                //arrOfPairs.push("AccountId","001f400000FeZgrAAF"); //ERS190202 EOJ HACK TODO
                  /* set the zPaper workflow fields */

                arrOfPairs.push("ZPAPER__newFax__c", "true");
                arrOfPairs.push("ZPAPER__latestFax__c", formatNow);
                arrOfPairs.push("ZPAPER__receivedId__c", doc.dbID);
                pId=createAndAttach(doc, "Contact", "New "+zType+" Received On " + formatNow, arrOfPairs);
            }
        }
    } catch (err) {alert("Too Many Secrets:"+err);}
    alert("sfId for patient is "+pId);
    //TODO ERS190202 attach Case to sfId
} else {
    alert("No soup for you! "+HL7data);
}

arrOfPairs = [];
alert("@@@@zType="+zType);
arrOfPairs.push(zp+"faxType__c", keywordMap[zType]); //JPB180808 added keywordMap for zType
arrOfPairs.push(zp+"Status__c", "New zStack"); //JPB180709 added zStack

var channel="Fax"; //JPB180523
doc.deliveredFrom=doc.deliveredFrom.toUpperCase(); //ERS190208
if (doc.deliveredFrom.indexOf("@")>-1 || doc.deliveredFrom.indexOf(".")>-1) {channel="Email";} //ERS180505 #48101
else if (doc.deliveredFrom.indexOf("HL7") || doc.deliveredFrom.indexOf("CCD")) { channel="HL7"; } //ERS190202
else if (isNaN(doc.deliveredFrom)) { channel="Scan"; } //JPB180711 added NaN
arrOfPairs.push(zp+"Channel__c",channel);
zData.channel=channel;

if (pId.indexOf("003")===0) { arrOfPairs.push("ZPAPER__Patient__c",pId); } //ERS190208 #56270 set the patient
arrOfPairs.push("ZPAPER__Priority__c","High"); //ERS190208 #56270

arrOfPairs.push(zp+"latestFax__c", formatNow);
arrOfPairs.push(zp+"receivedId__c", doc.dbID);
arrOfPairs.push(zp+"newFax__c", "true");
var zPages=X(doc, "X_pages"); if (zPages==="") {zPages=2;} //ERS190205 uploadItemPdf.jsp TODO be accurate
arrOfPairs.push(zp+"Pages__c", zPages);
alert("@@@zData.programName="+zData.programName); //JPB180815 added alert #48339
arrOfPairs.push(zp+"Classification__c",zData.programName); //JPB180808 added back in Classification
arrOfPairs.push(zp+"Program_Name__c",zData.programName); //JPB180626 generalized program name //JPB180711 added program names
if (zData.patEnrollQueueId) arrOfPairs.push("OwnerId",zData.patEnrollQueueId);


arrOfPairs.push(zp+"sentFaxTo__c",doc.deliveredTo); //ERS170628 caller id
arrOfPairs.push(zp+"From__c",doc.deliveredFrom);
if (zData.reviewedStatus) {arrOfPairs.push(zp+"Stage__c", zData.reviewedStatus); } else {//ERS190118 #53000
    arrOfPairs.push(zp+"Stage__c", "Received"); //ERS170731 #40593
}

alert("Reviewed Status before setting it to Received: " + X(doc, "X_reviewedStatus"));
alert("zData.reviewedStatus = " + zData.reviewedStatus);
var sfId = createAndAttach(doc, zStack, "New " + zData.programName + " "+ zType+" zStack received", arrOfPairs); //JPB180626 removed + formatNow from link
alert("#### Stack Received. Attached to: " + sfId);

arrOfPairs = [];
arrOfPairs.push("X_docType", zType); //ERS190208 CCD
arrOfPairs.push("db-label", "New " + zData.programName + " zStack received "); //JPB180626 relabeled to program JPB180626 removed + formatNow
arrOfPairs.push("db-BATES", sfId + "-STACK");
arrOfPairs.push("X_sfStackId",sfId); //ERS170727 #40447
var signedStatus = "";  //JPB190117 added signature checkbox function
if ("Signed" === zData.reviewedStatus) {
    var now0 = getCurDateAndTime(doc,false,true);
    signedStatus = "Signed at "+now0+"<br/>"; //ERS170909 #40592
}
if (1===1) { //ERS180103 set as Received #41155
    var ba="Received";
    var now0 = getCurDateAndTime(doc,false,true);
	alert("$$$ now0 = " + now0 + ", ba = " + ba);
    arrOfPairs.push("X_reviewedStatus",ba);
    arrOfPairs.push("X_reviews",X(doc,"X_reviews")+ba+" by agent at "+now0+"<br/>" + signedStatus); //ERS170909 #40592
}
updateDB(doc, arrOfPairs);



//make a Case
arrOfPairs = [];
arrOfPairs.push("Status", "New");
arrOfPairs.push("Type", "New "+zType);
arrOfPairs.push("Origin", zData.channel);
if (pId.indexOf("003")===0) {arrOfPairs.push("ContactId", pId); } //ERS190202 TODO for Lead?
  /* set the zPaper workflow fields */
arrOfPairs.push("ZPAPER__newFax__c", "true");
arrOfPairs.push("ZPAPER__latestFax__c", formatNow);
arrOfPairs.push("ZPAPER__receivedId__c", doc.dbID);
createAndAttach(doc, "Case", "New "+zType+" Received On " + formatNow, arrOfPairs);

 /* END */
//--- RULE CONSEQUENCE CODE - END ---

//--- RULE VALIDATION CODE ---

//--- RULE VALIDATION CODE - END ---

</script>
