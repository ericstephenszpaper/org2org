<!--
// Name: AD AutoDrive Stacks
// Committer: eric.stephens@zpaper.com
// Update: ERS200915 #75381 accelerator and orientations
-->
<script>
//--- RULE JSON REPRESENTATION ---
var ruleJson = {"type":"rool","updated":"2020-09-15 18:32:10","active":true,"button":"Auto","name":"AD AutoDrive Stacks","conditions":{"logic":"or","arguments":[{"name":"doc.X(\"X_buttonAction\")","value":"Auto","operation":"starts-with"},{"name":"doc.X(\"X_zippiCompare\")","value":"template","operation":"contains"}]},"consequence":{"doit":""},"ordinal":28}

//--- RULE JSON REPRESENTATION - END ---

//--- RULE CONSEQUENCE CODE ---
]alert("@@@@ AutoDrive Rule Fired @@@#"); //ERS190803 #52661 from OccFit

//ERS200227 criteria looks for any template not just ENR

function zPrepop(fd,filled,confidence) {
    if (!fd) return {};
    var values={};
    if (!filled) filled=0.04;
    if (!confidence) confidence=0.90;
    for (var x in fd) {
        //alert("x="+x);
        var i=fd[x];
        if (i.type=="text" && i.confidence>=confidence) { values[i.name]=i.text; alert(i.name+"="+i.text);}
        if (i.type=="checkbox") { values[i.name]=(i.filled>=filled); }
        if (i.type=="signature") { values[i.name]=(i.filled>=filled); } //ERS200406 TODO use to detect signed
    }
    return values;
}

zData.autoIndex=""+XCustomSetting(doc,""+"ADpersonTypes__c").trim(); //TODO PACKAGE zData.zp+
if (!zData.autoIndex) {alert("Missing ADPersonTypes setting."); zData.autoIndex=",ORD,HIPAA,"; }
alert("ERS200229.22 looking for settings "+XCustomSetting(doc,""+"ADPersonTypes__c")+" now using "+zData.autoIndex);
zData.dataConfidence=("0"+XCustomSetting(doc,""+"ADdataConfidence__c"))/1.00;
if (!zData.dataConfidence) zData.dataConfidence=0.92;
alert("ERS200229.22 using confidence "+zData.dataConfidence+ " from "+XCustomSetting(doc,""+"ADdataConfidence__c"));


function autoSplit(doc,pageRange,p0,zc,zd) { //ERS191010 #61357
    var arrOfPairs = [];
    var dt=zc[p0].docType;
    arrOfPairs.push("X_docType", dt);
    arrOfPairs.push("X_reviews","page "+pageRange+" a "+dt);
    arrOfPairs.push("db-label",dt+" autoSplit page "+pageRange);
    if (zd[p0]) arrOfPairs.push("X_zippiData",JSON.stringify(zPrepop(zd[p0])) ); //ERS191014 autoData
    arrOfPairs.push("X_zippiCompare","[null,"+JSON.stringify(zc[p0])+"]"); //ERS191014 autoData
    arrOfPairs.push("X_autoIndexedPages", pageRange);
    alert("ERS200312.37 before split "+pageRange);
    var newId=splitDocumentForIndex(doc, "deprecated", pageRange,arrOfPairs);
    alert("ERS191014 newId="+newId +" from "+pageRange); //ERS191014 #61196
    
    //ERS200311 blows up!!! track(doc, "AutoIndexed", "Document with Id: " + doc.dbID, zData.countPages(pageRange)); //ERS200308 tracking
    //TODO ERS191015 create zStack record type auto
    //*
    /* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */
    //*
    //ERS2004308 TODO x_reviews for Signed
    //ERS200406 #71156 TODO detect Signature,"true" and add stage for Signed
    var arrOfPairs2 = [];
    zData.stage="Received";
    arrOfPairs2=zData.addStage(doc,arrOfPairs,zData.stage); //ERS200418 #71415
    var pageCount = zData.countPages(doc,pageRange);
    track(doc, "Stage."+zData.stage, "Document with Id: " + doc.dbID, pageCount);
    updateDB(doc,arrOfPairs2);
    
    //ERS200229 might be better in client library
    var newChildStackId="";
    if (zData.autoIndex.indexOf(","+dt+",")>-1 || zData.pId0) { //lookup with record type, key values and recent pId0 ERS200418
        var attachedId=zData.clientAutoIndex(doc,dt,zPrepop(zd[p0],0.03,zData.dataConfidence));
        if (1===1 && attachedId) { //ERS200502 #70273 not showing up on the Timeline
            //zData.patientId=zData.clientPatient(doc,arrOfPairs);
            //alert("Created Patient with ID: " + zData.patientId);
            //attach(doc, dt+" AutoSplit page "+pageRange, attachedId);
            zData.patientId=attachedId;
            zData.docType=dt;
            if (zData.patientId.indexOf("001")===0) arrOfPairs.push("ZPAPER__PatientAccount__c", zData.patientId);
            newChildStackId=zData.clientChildStack(doc,arrOfPairs,zData.stackId); //ERS200503 #70273 makes the Timeline task
            alert("New AutoStack "+newChildStackId);
        }
    } else { alert("ERS200229.44 "+dt +" not in "+zData.autoIndex); }
    
    return newId;
}

var stackId = zData.getStackId(doc); //ERS190624 HACK? //ERS200711 #72433 added into zStack library from 2019
zData.stage="Indexed"; //ERS200310 AutoIndexed is not in zStack picklist
zData.pages=("0"+X(doc,"X_pages"))/1; if (zData.pages===0) zData.pages=1; //TODO intialize zData better

//really need patient info enough to attach or create
//zData.getDataEntryFields(doc); //ERS190914 get from X_zippiData
var zc=X(doc,"X_zippiCompare");
var zd=X(doc,"X_zippiData");
alert("zc="+zc);
if (zc && zc.indexOf("[")===0) {zc=JSON.parse(zc);}
alert("zc now "+zc);
if (zd && zd.indexOf("[")===0) {zd=JSON.parse(zd);}

//loop pages
var dt0="FAX", p0=1, c=0;
var dbID0=doc.dbID;
var docStack=doc;
zData.newSplits=[];
zData.stackId=stackId; //ERS200503 #70273

zData.rotation=""; //ERS200704 #72433
for (var p=1; p<=zData.pages; p++) {
    alert("page "+p);
    alert("zc[]="+zc[p]);
    if (zc[p]) {
        var dt=zc[p].docType;
        if (dt != dt0 || 1==1) { //ERS200227 #61196 zc[p] existing is enough?
            alert("Split "+p0+zData.rotation+"-"+(p-1)+" into "+dt0);
            //ERS200312 alert("Data "+JSON.stringify(zPrepop(zd[p0])));
            if (dt0 != "FAX") {
                if (zc && zc[p] && zc[p].orient && zc[p].orient==180) zData.rotation="u"; //ERS200704 #72433
                zData.newSplits[c]=autoSplit(doc,p0+zData.rotation+"-"+(p-1),p0,zc,zd);
                zData.rotation=""; //ERS200711 reset to "" after the split
                //doc=docStack; 
                setDocumentContext(doc, dbID0);
                alert("ERS191014.59 after split doc.dbID="+doc.dbID +" new "+c+" = "+zData.newSplits[c]);
                c++;
            }
            //HACK OFF if ((p-p0)>1) dt="was"+dt; //ERS200227 #61196 multiple contimeous Orders 
            dt0=dt; p0=p;
        }
    }
}
//ERS200915 #75381 accelerator and orientations
if (zc[p0] && zc[p0].orient && zc[p0].orient==180) zData.rotation="u"; //ERS200704 #72433 //ERS200711 TODO orient=0 in default

alert("ERS200711.116 rotation="+zData.rotation+" Pages "+p0+zData.rotation+"-"+(p-1)+" is a "+dt0);
alert("Data "+JSON.stringify(zPrepop(zd[p0])));
if (dt0 != "FAX") {
    zData.newSplits[c]=autoSplit(doc,p0+zData.rotation+"-"+(p-1),p0,zc,zd);
}
alert("Splits into "+zData.newSplits);

/* end of rule */
//--- RULE CONSEQUENCE CODE - END ---

//--- RULE VALIDATION CODE ---

//--- RULE VALIDATION CODE - END ---

</script>
