<!--
// Name: Referral Page
// Committer: judson.bruno@zpaper.com
// Update: JPB180721 added diagnosis variable; JPB180721 added diagnosis
-->
<script>
//--- RULE JSON REPRESENTATION ---
var ruleJson = {"type":"rool","updated":"2018-07-21 13:18:08","active":true,"button":"Referrals","name":"Referral Page","conditions":{"logic":"and","arguments":[{"name":"doc.X(\"X_buttonAction\")","value":"Referrals","operation":"equals"}]},"consequence":{"doit":""},"ordinal":5}

//--- RULE JSON REPRESENTATION - END ---

//--- RULE CONSEQUENCE CODE ---
alert("@@@@ Index Rule Fired for Referrals @@@#"); //JPB180720 added new referral button rule
/* double-quote, newline characters */
var dq = String.fromCharCode(34);
var nl = String.fromCharCode(10);
var formatNow=getCurDateAndTime(doc);
var notes = doc.kbData.comments + "";   //CRN180619 Case #49437 Save any comments (notes) into the Notes__c field in the zStack
alert("@@@ NOTES: " + notes); //JPB180711 added NOTES

/* double-quote, newline characters */

var dq = String.fromCharCode(34); //JPB180626 added notes section line 9 thourgh 15
var nl = String.fromCharCode(10);
var formatNow=getCurDateAndTime(doc);
var notes = doc.kbData.comments + "";   //CRN180619 Case #49437 Save any comments (notes) into the Notes__c field in the zStack
alert("@@@ NOTES: " + notes);
var zp="ZPAPER__"; //ERS170626 now in the package
var zStack=zp+"zStack__c"; //"Stack__c"

var parentFolder = X(doc,"X_curFolder"); //JPB180626 added parentFolder
var stackId = X(doc, "X_stack");
var sfStackId = X(doc,"X_sfStackId");
if (sfStackId ==="") { //ERS170731 #40593
    X(doc,"X_attachedTo");
    if (sfStackId.lastIndexOf('/') >= 0) {
		sfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);
		if (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }
    }
}
var parentdbID = doc.dbID; //JPB180626 added doc.dbID
alert("@@@@ parent stack id = " + sfStackId);
var parentStackNumber = getSFField(doc, zStack, "Name", null, sfStackId); //JPB180626 added parentStackNumber
alert("#### Our parent stack number is " + parentStackNumber);
var stackFolder = stackId + "-STACK";
var companyCode = doc.deliveredTo;

/* Clear the trigger that invoked this rule */
//ERS170909 zData.clearTriggerCondition(doc,"X_buttonAction");
var indexInitialized = X(doc,"X_indexInitialized");
if (!indexInitialized || 0 === indexInitialized.length) {
	stackId = new Date().getTime() + "";
	stackFolder = stackId + "-STACK";
	zData.initializeStack(doc,stackFolder, companyCode, stackId);
}

// Does the user want to attach indexed pages to Case?

var caseId = X(doc, "X_ZPAPER__Case__c");
var contactId = X(doc, "X_ZPAPER__Patient__c");
var patientId=contactId; //TODO
var providerId = X(doc, "X_ZPAPER__Provider__c");
var patientFirstName = X(doc, "X_ZPAPER__FirstName__c");
var patientLastName = X(doc, "X_ZPAPER__LastName__c");
var patientDOB = X(doc, "X_ZPAPER__Birthdate__c");
var diagnosis = X(doc, "X_ZPAPER__Diagnosis__c"); //JPB180721 added diagnosis variable

//CRN180214 Judson wants this to be part of the attachment label

var faxType = X(doc, "X_ZPAPER__faxType__c");

// Get the document type (will be used to route to next folder)

var docType = X(doc, "X_Document_Type__c");
var nextFolder = "20500Triage-S2";				// Other folder is the default
var prevIndexPages = X(doc, "X_indexedPages");
var curIndexPages = X(doc, "X_idxPages");
if (prevIndexPages && prevIndexPages.length > 0 && curIndexPages && curIndexPages.length > 0) {
	prevIndexPages += ",";
}
curIndexPages = prevIndexPages + curIndexPages;
var arrOfPairs = [];
arrOfPairs.push("X_indexedPages", curIndexPages);
if (1===1) { //ERS170909 #40592 for zDocSet statuses
    var ba=doc.X("X_buttonAction")+"";
    ba=ba.substring(1+ba.lastIndexOf(" "));
    if (!ba.endsWith("ed") && ba !== "") { ba+="ed"; } //ERS180103 #41155
    if (ba !== "") { //ERS180103 #41155
        var now0 = getCurDateAndTime(doc,false,true);
        arrOfPairs.push("X_reviewedStatus",ba);
        arrOfPairs.push("X_reviews",X(doc,"X_reviews")+ba+" by "+doc.kbData.remoteUser+" at "+now0+"<br/>"); //ERS170909 #40592
        arrOfPairs.push("X_buttonAction","");
    }
}
updateDB(doc,arrOfPairs);

var sfStackId = X(doc,"X_sfStackId");
if (sfStackId ==="") { //ERS170731 #40593
    X(doc,"X_attachedTo");
    if (sfStackId.lastIndexOf('/') >= 0) {
		arrOfPairs = []; //JPB180626 added arrOfPairs
		arrOfPairs.push("ZPAPER__Status__c", "Indexed"); //JPB180626 added indexed to status
		arrOfPairs.push("ZPAPER__Stage__c", "Indexed"); //JPB180626 added indexed to stage
		if (notes) {
			arrOfPairs.push("Notes__c", notes); //JPB180626 added notes
		}  //JPB180711 added curly brace
		sfStackId = sfStackId.substring(sfStackId.lastIndexOf('/')+1);
		if (sfStackId.indexOf(',') >= 0) { sfStackId = sfStackId.substring(0, sfStackId.indexOf(',')); }
    }
	updateSFRecord(doc, "ZPAPER__zStack__c", sfStackId, arrOfPairs); //JPB180626 added updateSFRecord
}
var attachPath = X(doc,"X_attachedTo");
alert("@@@@@@ Currently attached to ZPAPER__zStack__c with ID: " + sfStackId);
zData.setbrandprogram(doc);	//JPB180712 Make sure the program name is set correctly

/* SPLIT OFF NEW SNIPPET HERE */

var pageRange = X(doc,"X_idxPages");
splitDocumentForIndex(doc, "index", pageRange);
alert("Case '"+caseId+"' and len="+caseId.length);

//*
/* AFTER THIS POINT, THE DOC WILL HOLD DATA FOR NEW SNIPPET, NOT THE STACK SNIPPET */
//*

/* Attach the split document to a new Case record, if it wasn't passed in */
var priority=X(doc,"X_ZPAPER__Priority__c"); //ERS170626
var label0="";
var triageType=doc.docType;
var patientName;

/* Attach the split document to Contact record if required */
alert("@@@@ attaching to a Contact? contactId = " + contactId);
if (contactId && contactId.length > 0) {
	
	if (attachPath.indexOf(contactId)==-1) attachPath+=","+contactId;
	var contactFlds = getSFFields(doc, "Contact", "FirstName,LastName", null, contactId);
	patientFirstName = X(doc, "FirstName", contactFlds);
	patientLastName = X(doc, "LastName", contactFlds);
	patientName = patientFirstName + " " + patientLastName;
	attach(doc, label0+"Indexed-" + patientName + "-" + faxType + "-" + stackId, contactId);
}
else if (patientFirstName && patientFirstName.length > 0 && patientLastName && patientLastName.length > 0 && patientDOB && patientDOB.length > 0) {
	patientName = patientFirstName + " " + patientLastName;
	var ctcArrOfPairs = [];
	ctcArrOfPairs.push("FirstName", patientFirstName);
	ctcArrOfPairs.push("LastName", patientLastName);
	ctcArrOfPairs.push("BirthDate", patientDOB);
	ctcArrOfPairs.push("Diagnosis", diagnosis); //JPB180721 added diagnosis
	contactId = createAndAttach(doc, "Contact", label0+"Indexed-" + patientName + "-" + faxType + "-" + stackId, ctcArrOfPairs);
	if (attachPath.indexOf(contactId)==-1) attachPath+=","+contactId;
	
	alert("@@@@@@@ NEW CONTACT CREATED WITH ID: " + contactId);
	// clear out the "New Patient" fields
	
	addPostExecutionScript(doc, " $(" + dq + "#Labeler_Patient_First_Name__c" + dq + ").val(" + dq + "" + dq + "); ");
	addPostExecutionScript(doc, " $(" + dq + "#Labeler_Patient_Last_Name__c" + dq + ").val(" + dq + "" + dq + "); ");
	addPostExecutionScript(doc, " $(" + dq + "#Labeler_Patient_DoB__c" + dq + ").val(" + dq + "" + dq + "); ");
	addPostExecutionScript(doc, " $(" + dq + "#Labeler_Patient_DoB__c_readable" + dq + ").val(" + dq + "NONE" + dq + "); ");
	// set the Patient lookup fields
	addPostExecutionScript(doc, " $(" + dq + "#Patient__c" + dq + ").val(" + dq + contactId + dq + "); ");
	addPostExecutionScript(doc, " $(" + dq + "#Patient__c_Name" + dq + ").val(" + dq + patientFirstName + " " + patientLastName + dq + "); ");
}
//JPB180215 now attach to stack record
attach(doc, label0+"Indexed-" + patientName + "-" + faxType + "-" + stackId, sfStackId);


if (!caseId || 0 === caseId.length) {
	alert("@@@@ creating new Case");
	arrOfPairs = [];
	//ERS170520 arrOfPairs.push("OwnerId", queuesMapKludge[X(doc,"X_Assign_to_Queue__c")]);
	arrOfPairs.push("ContactId", contactId);
	arrOfPairs.push("ZPAPER__newFax__c", "true"); //JPB 170512 added these workflow fields
	arrOfPairs.push("ZPAPER__latestFax__c", formatNow); //JPB 170512 added these workflow fields
	arrOfPairs.push("ZPAPER__receivedId__c", doc.dbID); //JPB 170512 added these workflow fields
	arrOfPairs.push("Status", X(doc,"X_Status"));
	arrOfPairs.push("Type", "New Fax"); //JPB 170512 added these workflow fields
	
	if (providerId && providerId.length > 0) {
	    //ERS180223 arrOfPairs.push("ZPAPER__Provider__c", providerId);
	    arrOfPairs.push("AccountId", providerId); //ERS180223 #46036 PUT YOUR INITIALS!!!
	}

	if (1==1) { //ERS170523 #37162 after dryrun
		//arrOfPairs.push("RecordTypeId","012Q00000005Ahj"); //ERS170523 Prior Auth
		if (priority != "Normal") arrOfPairs.push("Priority",priority);  //ERS170524 #37162 priority on Case
		else arrOfPairs.push("Priority","Medium");
		arrOfPairs.push("Origin","Fax");
	}
	//name="X_ZPAPER__Patient__c"
	//name="X_ZPAPER__FirstName__c"
	//name="X_ZPAPER__LastName__c"
	caseId = createAndAttach(doc, "Case", label0+"Indexed-" + patientName + "-" + faxType + "-" + stackId, arrOfPairs);
	alert("Created Case with ID: " + caseId);
	if (caseId == "null" || caseId == "NEW") caseId=null; //ERS170621 TODO need a standard
}
else {
	alert("@@@@ attaching to existing Case: " + caseId);
	attach(doc, label0+"Indexed-" + patientName + "-" + faxType + "-" + stackId, caseId);
}

//AN20180222 get the Case Numeber
var caseNumber = null;
if (caseId){
    var caseNumber = getSFField(doc, "Case", "CaseNumber", null, caseId);
}

if (attachPath.indexOf(caseId)==-1) attachPath+=","+caseId;

var arrOfPairs = [];
var zType="Fax"; //ERS180612
alert("@@@@zType="+zType);
arrOfPairs.push(zp+"faxType__c", zType);
arrOfPairs.push(zp+"Status__c", "Split zStack"); //JPB180711 added zStack

alert("ERS180505 doc.deliveredFrom="+doc.deliveredFrom);
var channel="Fax"; 
if (doc.deliveredFrom.indexOf("@")>-1 || doc.deliveredFrom.indexOf(".")>-1) {channel="Email";} //ERS180505 #48101
else if (isNaN(doc.deliveredFrom)) {channel="Scan";} //JPB180711 added isNaN(doc.deliveredFrom
arrOfPairs.push(zp+"Channel__c",channel);
arrOfPairs.push(zp+"latestFax__c", formatNow);
arrOfPairs.push(zp+"receivedId__c", doc.dbID);
arrOfPairs.push(zp+"newFax__c", "true");
arrOfPairs.push(zp+"Pages__c", X(doc, "X_pages"));

if (zData.categorizedQueueId) arrOfPairs.push("OwnerId",zData.categorizedQueueId.trim()); //ERS180615 trim() insurance 
alert("#### zData.programName=*" +zData.programName+"* zData.PROGRAM_ZCHARTA=*"+zData.PROGRAM_ZCHARTA+"* zData.PROGRAM_ZPAPYRUS=*"+zData.PROGRAM_ZPAPYRUS+"* zData.PROGRAM_ZCARTA+*"+zData.PROGRAM_ZCARTA+"*"); //JPB180711 Adding comparing of program names
if (zData.programName === zData.PROGRAM_ZCHARTA) {
	arrOfPairs.push(zp+"Priority__c", "Urgent"); //JPB180711 changed PROGRAM_ZCHARTA
}
else if (zData.programName === zData.PROGRAM_ZPAPYRUS) {
	arrOfPairs.push(zp+"Priority__c", "Medium"); //JPB180711 changed PROGRAM_ZPAPYRUS
}
else if (zData.programName === zData.PROGRAM_ZCARTA) {
	arrOfPairs.push(zp+"Priority__c", "Critical"); //JPB180711 changed PROGRAM_ZCARTA
}
else {
	arrOfPairs.push(zp+"Priority__c", "Special");
}
arrOfPairs.push(zp+"Program_Name__c", zData.programName);
arrOfPairs.push(zp+"sentFaxTo__c",doc.deliveredTo); //ERS170628 caller id
arrOfPairs.push(zp+"From__c",doc.deliveredFrom);
arrOfPairs.push(zp+"Stage__c", "Split"); //ERS170731 #40593 //ERS180612 #46040
arrOfPairs.push(zp+"Parent__c",sfStackId); ////ERS180612 #46040 ZPAPER__Parent__c
//arrOfPairs.push("Provider_Fullname__c", X(doc, "X_Provider_Fullname__c")); //JPB180608 added provider fullname
//arrOfPairs.push("Facility__c", X(doc, "X_Facility__c")); //JPB180608 added facility
//arrOfPairs.push("Case_Number__c", X(doc, "X_Case_Number__c")); //JPB180613 added case number
if (notes) {
    arrOfPairs.push("Notes__c", notes);
}
if (providerId && providerId.length > 0) {
	arrOfPairs.push("ZPAPER__Provider__c", providerId);
	if (attachPath.indexOf(providerId)==-1) attachPath+=","+providerId;
}
if (patientId && patientId.length > 0) {
	arrOfPairs.push("ZPAPER__Patient__c", patientId);
	if (attachPath.indexOf(patientId)==-1) attachPath+=","+patientId;
}
if (caseId && caseId.length > 0) {
	arrOfPairs.push("ZPAPER__Case__c", caseId);
}

var sfId = createAndAttach(doc, zStack, "zStack split on " + formatNow, arrOfPairs) + ""; //ERS180612 #46040 JPB180616 added z to Stack
alert("#### Stack Received. Attached to: " + sfId);
var childStackNumber = getSFField(doc, zStack, "Name", null, sfId); //JPB180613 added childstacknumber
//attach(doc, "Indexed-"+formatNow+"-"+triageType, sfStackId);
alert("@@@@ updated and attached to zStack Record, id = " + sfStackId);

if (1===0) { //ERS170627 TODO refactor
    //CRN170208 If we have a Contact and the user sent a Provider, add the provider to the Contact.
    var provider = X(doc, "X_Primary_Care_Physician__c");
    if (contactId && contactId.length > 0 && provider && provider.length > 0) {
    	arrOfPairs = [];
    	arrOfPairs.push("Primary_Care_Physician__c", provider);
    	updateSFRecord(doc,"Contact",contactId,arrOfPairs);
    }
}
//JPB180712 The new id must be first in the X_attachedTo list #00050121
attachPath = attachPath.substring(0, attachPath.lastIndexOf('/') + 1) + sfId + "," + attachPath.substring(attachPath.lastIndexOf('/') + 1);

unlockDocument(doc);
moveDocument(doc, null, parentFolder);

arrOfPairs = [];
//ERS170909 arrOfPairs.push("X_reviewedStatus", "Indexed");
if (1===1 && 1===0) { //ERS170909 #40592 for zDocSet statuses //ERS180103 #41155 set above

//    var now0 = getCurDateAndTime(doc,false,true);
	arrOfPairs.push("X_reviewedStatus","Indexed");
//    arrOfPairs.push("X_reviews",X(doc,"X_reviews")+ba+" by "+doc.kbData.remoteUser+" at "+now0+"<br/>"); //ERS170909 #40592
    arrOfPairs.push("X_buttonAction","");
}
/* CRN160825 Set the page count so that it does not have the parent page count */
var pageCount = zData.countPages(doc,pageRange);
alert("@@@@ pageCount = " + pageCount);
arrOfPairs.push("X_pages",pageCount);
arrOfPairs.push("db-pages",pageCount);
if (!patientFirstName || 0 == patientFirstName.length) { patientFirstName = "Unknown"; }
if (!patientLastName || 0 == patientLastName.length) { patientLastName = "Name"; }

alert ("@@@@@ zData.programName = "+ zData.programName);

arrOfPairs.push("db-label", patientFirstName + " " + patientLastName + " - " + zData.programName + " - Split zStack " + childStackNumber); //JPB180711 removed + companyCode + " - " + stackId added new Split zStack and + zData.programName //JPB180712 added space between name
arrOfPairs.push("X_docType",faxType); //JPB180215 changed doctype and faxtype name
arrOfPairs.push("X_sfStackId", sfId);	//JPB180712 Make sure we have the correct stack Id in wddata, not the parent's #00050121
arrOfPairs.push("X_attachedTo",attachPath); //ERS170628

updateDB(doc,arrOfPairs);

track(doc, "Doc Indexed ", "Document with Id: " + doc.dbID, pageCount);
addPostExecutionScript(doc, "nextPage(~ready~);updateDEStatus(~indexed:" + pageRange + "~);");

//AN20180222 grab the new Case number
if (caseId && caseNumber) {
    addPostExecutionScript(doc, ";$(~#ZPAPER__Case__c~).val(~" + caseId + "~); $(~#ZPAPER__Case__c_CaseNumber~).val(~" + caseNumber + "~); ");
}

//AN180222 grab the new Contact ID
if (contactId && patientFirstName && patientLastName) {
    addPostExecutionScript(doc, ";$(~#ZPAPER__Patient__c~).val(~" + contactId + "~); $(~#ZPAPER__Patient__c_Name~).val(~" + patientFirstName + " " + patientLastName + "~); ");
}

/* end of rule */
//--- RULE CONSEQUENCE CODE - END ---

//--- RULE VALIDATION CODE ---

//--- RULE VALIDATION CODE - END ---

</script>
